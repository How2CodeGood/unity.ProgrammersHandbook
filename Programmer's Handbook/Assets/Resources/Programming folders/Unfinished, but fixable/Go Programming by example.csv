Larger Text,Smaller Text,Symbol
Copyright,"GoProgrammingbyExample
  
 AgusKurniawan
  
 1stEdition,2015
  
 Copyright©2015AgusKurniawan
  
 *CoverphotoiscredittoFajarRamadhany,Bataviasoft,",NA
http://bataviasoft.com/,NA,NA
.,NA,NA
**Gologoistakenfrom,NA,NA
https://blog.golang.org/gopher,NA,NA
.,NA,NA
TableofContents,NA,NA
Copyright ,NA,NA
Preface ,NA,NA
1.DevelopmentEnvironment ,NA,NA
1.1Installation ,NA,NA
1.2DevelopmentTools ,NA,NA
1.3HelloWorld ,NA,NA
1.4GoPackages ,NA,NA
2.GoProgrammingLanguage ,NA,NA
2.1CommonRule ,NA,NA
2.2Variables ,NA,NA
2.2.1DeclaringVariable ,NA,NA
2.2.2AssigningVariables ,NA,NA
2.2.3Demo ,NA,NA
2.3Comment ,NA,NA
2.4ArithmeticOperations ,NA,NA
2.5MathematicalFunctions ,NA,NA
2.6IncrementandDecrement ,NA,NA
2.7GettingInputfromKeyboard ,NA,NA
2.8ComparisonOperators ,NA,NA
2.9LogicalOperators ,NA,NA
2.10Decision ,NA,NA
2.10.1if..then ,NA,NA
2.10.2switch..case ,NA,NA
2.11Iteration-for ,NA,NA
2.12Iteration-while ,NA,NA
2.13breakandcontinue ,NA,NA
"3.Arrays,SlicesandMaps ",NA,NA
3.1Array ,NA,NA
3.2Slice,NA,NA
3.3Map ,NA,NA
4.Functions ,NA,NA
4.1CreatingASimpleFunction ,NA,NA
4.2FunctionwithParameters ,NA,NA
4.3FunctionwithReturningValue ,NA,NA
4.4FunctionwithMultipleReturningValues ,NA,NA
4.5FunctionwithMultipleParametersandReturningValue ,NA,NA
4.6ClosureFunction ,NA,NA
4.7RecursionFunction ,NA,NA
4.8Testing ,NA,NA
5.Pointers ,NA,NA
5.1PointerinGo ,NA,NA
5.2Demo:SinglyLinkedList ,NA,NA
6.StructsandMethods ,NA,NA
6.1Structs ,NA,NA
6.2Methods ,NA,NA
7.StringOperations ,NA,NA
7.1GettingStarted ,NA,NA
7.2ConcatenatingStrings ,NA,NA
7.3StringToNumeric ,NA,NA
7.4NumerictoString ,NA,NA
7.5StringParser ,NA,NA
7.6CheckStringDataLength ,NA,NA
7.7CopyData ,NA,NA
7.8UpperandLowerCaseCharacters ,NA,NA
7.9TestingAProgram ,NA,NA
8.FileOperations ,NA,NA
8.1GettingStarted ,NA,NA
8.2WritingDataIntoAFile ,NA,NA
8.3ReadingDataFromAFile ,NA,NA
8.4WritingAll,NA,NA
9.ErrorHandlingandLogging ,NA,NA
9.1ErrorHandling ,NA,NA
"9.2defer,panic(),andrecover() ",NA,NA
9.3try..catch ,NA,NA
9.4Logging ,NA,NA
10.BuildingOwnGoPackage ,NA,NA
10.1CreatingSimpleModule ,NA,NA
10.2BuildingOwnPackage ,NA,NA
11.Concurrency ,NA,NA
11.1GettingStarted ,NA,NA
11.2Goroutines ,NA,NA
11.3SynchronizingGoroutines ,NA,NA
11.4Channels ,NA,NA
12.Encoding ,NA,NA
12.1GettingStarted ,NA,NA
12.2EncodingBase64 ,NA,NA
12.3Hexadecimal ,NA,NA
12.4JSON ,NA,NA
12.5XML ,NA,NA
12.6CSV ,NA,NA
13.HashingandCryptography ,NA,NA
13.1GettingStarted ,NA,NA
13.2Hashing ,NA,NA
13.2.1HashingwithMD5 ,NA,NA
13.2.2HashingwithSHA256 ,NA,NA
13.2.3HashingwithKeyUsingHMAC ,NA,NA
13.2.4Testing ,NA,NA
13.3Cryptography ,NA,NA
13.3.1SymmetricCryptography ,NA,NA
13.3.2AsymmetricCryptography ,NA,NA
14.DatabaseProgramming,NA,NA
14.1DatabaseforGo ,NA,NA
14.2MySQLDriverforGo ,NA,NA
14.3TestingConnection ,NA,NA
14.4Querying ,NA,NA
15.SocketProgramming ,NA,NA
15.1SocketModule ,NA,NA
15.2HelloWorld ,NA,NA
15.3Client/ServerSocket ,NA,NA
15.3.1ServerSocket ,NA,NA
15.3.2ClientSocket ,NA,NA
15.3.3Testing ,NA,NA
SourceCode ,NA,NA
Contact,NA,NA
Preface,NA,NA
"GowascreatedbyRobertGriesemer,RobPike,andKenThompsonatGooglein2007. ",NA,NA
ThisbookisareferencetotheGoprogramminglanguage.Itdescribesalltheelements ,NA,NA
ofthelanguageandillustratestheirusewithcodeexamples.,NA,NA
AgusKurniawan,NA,NA
"Berlin&Depok,February2015",NA,NA
1.DevelopmentEnvironment,NA,NA
ThischapterexplainsintroductionofGo.TheofficialwebofGocouldbefound ,NA,NA
on,NA,NA
https://golang.org/.,NA,NA
"WhatisGo?Basedoninformationfromwebsite,wecouldknow ",NA,NA
"whatitis.Goisanopensourceprogramminglanguagethatmakesiteasytobuildsimple, ",NA,NA
"reliable,andefficientsoftware.",NA,NA
1.1Installation,NA,NA
"InstallationofGoapplicationiseasy.ForWindowsandMacPlatform,youdownload ",NA,NA
"setupfilefromGowebsite,",NA,NA
http://golang.org/doc/install,NA,NA
.Runitandfollowinstallatio,NA,NA
n commands.,NA,NA
"ThenextstepistoconfigureGOROOTpath.ForWindowsplatform,youcanadd ",NA,NA
GOROOTvariableon,NA,NA
EnvironmentVariables,NA,NA
".ForMac/Linux,youcanitonyourbash ",NA,NA
profile.,NA,NA
"ForWindowsplatform,youcanaddGOinstallationpath,forinstancemyGoinstallation",NA,NA
"pathisc:/go/bin,intoPATHvariableon",NA,NA
EnvironmentVariables,NA,NA
.,NA,NA
"Afterconfigured,youcanverifyGoversionbytypingthiscommandonyourTerminalor",NA,NA
CMDforWindows.,"$
 goversion",NA
"AsampleoutputcanbeseeninFigurebelow,Macplatform.",NA,NA
TheoutputofprogramonWindowsplatform.,NA,NA
1.2DevelopmentTools,NA,NA
"Basically,youcanuseanytexteditortowriteGocode.Thefollowingisalistoftext ",NA,NA
editor:,NA,NA
vim ,NA,NA
nano ,NA,NA
"IntellijIDEA,",NA,NA
https://www.jetbrains.com/id,NA,NA
ea/ ,NA,NA
"Sublimetext,",NA,NA
http://www.sublimetext.com/,NA,NA
AsamplescreenshotforIntellijIDEAisshowninFigurebelow.,NA,NA
1.3HelloWorld,NA,NA
"HowtogetstartedwithGo?well,itiseasy.Firstly,createafolder,calledhello.","$
 mkdirhello 
  
 $
 cd
 hello",NA
"Then,createafile,calledmain.go,onthehellofolder.Writethiscodefor",NA,NA
main.go,NA,NA
file.,"package
 main
  
 import
 ""fmt""
  
 func
 main(){ 
  
 fmt.Println(""Hello,go!"") 
  
 }",NA
"Savethisfile.Then,backtoyourTerminal.Youcanbuildandrunit.","$
 gobuild 
  
 $
 gorunmain.go",NA
"Inthiscase,itwillgenerateanexecutablefilebasedonyourplatform. ",NA,NA
AsampleprogramoutputcanbeseeninFigurebelow.,NA,NA
1.4GoPackages ,NA,NA
TherearealotofGopackagesthatyoucanuse.ThelistofGopackagescanseenonthis ,NA,NA
link,NA,NA
https://golang.org/pkg/,NA,NA
".Inthisbook,wewillexploresomeGostandardpackages.W",NA,NA
e alsotrytobuildownGopackage.,NA,NA
2.GoProgrammingLanguage,NA,NA
ThischapterexplainsthebasicofGoprogramminglanguage.,NA,NA
2.1CommonRule ,NA,NA
Golanguageuses“Cfamily”asprimarylanguagebutwedon’twrite“;”attheendof ,NA,NA
syntax.Hereisthesyntaxrule:,"syntax_code1 
  
 syntax_code2 
  
 syntax_code3",NA
2.2Variables,NA,NA
"Inthissection,weexplorehowtodefineavariableandassignitsvalue.",NA,NA
2.2.1DeclaringVariable,NA,NA
Todeclareavariablecalled,NA,NA
myvar,NA,NA
anddatatypeis,NA,NA
data_type1,NA,NA
",youcanwritethe ",NA,NA
followingscript:,"var
 myvardata_type1",NA
Thefollowingisasamplescripttodeclaresomevariables.,"var
 str
 string 
  
 var
 n,m
 int 
  
 var
 mn
 float32",NA
Wealsocandefinemultiplevariablesasfollows.,"var
 ( 
  
 name
 string 
  
 email
 string 
  
 age
 int 
  
 )",NA
"Oncedeclared,thesevariablescanbeusedtostoreanytypedata.",NA,NA
2.2.2AssigningVariables,NA,NA
Variablethatyoualreadydeclarecanbeassignedbyavalue.Itcandoneusingtheequals ,NA,NA
"sign(=).Forexample,variablestrwillassignastringvalue“HelloWorld”,youwould ",NA,NA
writethis:,"str=""HelloWorld"" 
  
 n=
 10 
  
 m=
 50 
  
 mn=
 2.45",NA
Wealsocandeclareavariableandassignitsvalue.,"var
 city
 string
 =""London"" 
  
 var
 x
 int
 =
 100",NA
"Anotheroption,wecandeclareavariablewithdefiningdatatypeusing:=syntax.Assign ",NA,NA
itwithavalue.,"country:=""DE"" 
  
 val:=
 15",NA
2.2.3Demo,NA,NA
"ForillustrationfordeclaringvariablesusingGo,createafolder,calledvardemo.Then, ",NA,NA
"createafile,called",NA,NA
main.go,NA,NA
.,NA,NA
Writethefollowingscriptfor,NA,NA
main.go,NA,NA
.,"package
 main
  
 import
 ""fmt""
  
 func
 main(){ 
  
 //declarevariables 
  
 var
 str
 string 
  
 var
 n,m
 int 
  
 var
 mn
 float32
  
 //assignvalues 
  
 str=""HelloWorld"" 
  
 n=
 10 
  
 m=
 50 
  
 mn=
 2.45
  
 fmt.Println(""valueofstr="",str) 
 fmt.Println(""valueofn="",n) 
  
 fmt.Println(""valueofm="",m) 
  
 fmt.Println(""valueofmn="",mn)
  
 //declareandassignvaluestovariables 
 var
 city
 string
 =""London"" 
  
 var
 x
 int
 =
 100
  
 fmt.Println(""valueofcity="",city) 
 fmt.Println(""valueofx="",x)
  
 //declarevariablewithdefiningitstype 
 country:=""DE"" 
  
 val:=
 15 
  
 fmt.Println(""valueofcountry="",country) 
 fmt.Println(""valueofval="",val)",NA
Savethisfile.,NA,NA
"Then,trytobuildandrunit.","$
 cd
 vardemo 
  
 $
 gobuild 
  
 $
 gorunmain.go",NA
AsampleoutputcanbeseeninFigurebelow.,NA,NA
2.3Comment ,NA,NA
"Youmayexplainhowtoworkonyourcodewithwritingcomments.Todoit,youcanuse ",NA,NA
//,NA,NA
and,NA,NA
/**/,NA,NA
syntax.Hereissamplecode:,"//declarevariables 
  
 var
 str
 string 
  
 var
 n,m
 int 
  
 var
 mn
 float32
  
 //assignvalues 
  
 str=""HelloWorld"" 
  
 n=
 10 
  
 m=
 50 
  
 mn=
 2.45
  
  
 /*printtheresult*/ 
  
 fmt.Println(""valueofstr="",str)",NA
2.4ArithmeticOperations ,NA,NA
"Gosupportsthesamefourbasicarithmeticoperationssuchasaddition,subtraction, ",NA,NA
"multiplication,anddivision.Fortesting,createafolderarithdemo.Then,createafile, ",NA,NA
called,NA,NA
main.go,NA,NA
.,NA,NA
Thefollowingisthecodeillustrationforbasicarithmeticin,NA,NA
main.go,NA,NA
:,"package
 main
  
 import
 ""fmt""
  
 func
 main(){ 
  
 //declarevariables 
  
 var
 a,b
 int
  
 //assignvalues 
  
 a=
 5 
  
 b=
 10
  
  
 //arithmeticoperation 
  
  
 //addition 
  
 c:=a+b 
  
 fmt.Printf(""%d+%d=%d\n"",a,b,c) 
  
 //subtraction 
  
 d:=a-b 
  
 fmt.Printf(""%d-%d=%d\n"",a,b,d) 
  
 //division 
  
 e:=
 float32
 (a)/
 float32
 (b) 
  
 fmt.Printf(""%d/%d=%.2f\n"",a,b,e) 
  
 //multiplication 
  
 f:=a*b 
  
 fmt.Printf(""%d*%d=%d\n"",a,b,f)
  
 }",NA
"Then,trytobuildandrunit.","$
 cd
 arithdemo 
  
 $
 gobuild 
  
 $
 gorunmain.go",NA
Thefollowingisasampleoutput.,NA,NA
2.5MathematicalFunctions ,NA,NA
Goprovidesmathlibrarywhichyoucanreaditon,NA,NA
https://golang.org/pkg/math/,NA,NA
.F,NA,NA
or,NA,NA
"illustration,wetrytouseseveralmathfunctions.",NA,NA
"Createafolder,calledmathdemo.Then,createafile,called",NA,NA
main.go,NA,NA
.Writethefollowing,NA,NA
code.,"package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""math"" 
  
 )
  
 func
 main(){ 
  
 a:=
 2.4 
  
 b:=
 1.6
  
 c:=math.Pow(a,
 2
 ) 
  
 fmt.Printf(""%.2f^%d=%.2f\n"",a,
 2
 ,c)
  
 c=math.Sin(a) 
  
 fmt.Printf(""Sin(%.2f)=%.2f\n"",a,c)
  
 c=math.Cos(b) 
  
 fmt.Printf(""Cos(%.2f)=%.2f\n"",b,c)
  
 c=math.Sqrt(a*b) 
  
 fmt.Printf(""Sqrt(%.2f*%.2f)=%.2f\n"",a,b,c) }",NA
"Then,trytobuildandrunit.","$
 cd
 mathdemo 
  
 $
 gobuild 
  
 $
 gorunmain.go",NA
Thefollowingisasampleoutput.,NA,NA
2.6IncrementandDecrement,NA,NA
Gohasspecialsyntaxforincrementanddecrement.,NA,NA
++syntaxforincrement.a++meansa=a+1—,NA,NA
syntayfordecrement.a—meansa=a-1,NA,NA
"Fortesting,createafolder,calledincdec,andthencreateafile,called",NA,NA
main.go,NA,NA
.Writethe ,NA,NA
followingscript.,"package
 main
  
 import
 ""fmt""
  
 func
 main(){ 
  
 //declarevariables 
  
 var
 a=
 4
  
 //increment 
  
 fmt.Printf(""a=%d\n"",a) 
  
 a=a+
 1 
  
 fmt.Printf(""a+1=%d\n"",a) 
  
 a++ 
  
 fmt.Printf(""a++=%d\n"",a)
  
 //decrement 
  
 a=a-
 1 
  
 fmt.Printf(""a-1=%d\n"",a) 
  
 a--
  
 fmt.Printf(""a--=%d\n"",a)
  
 }",NA
"Then,trytobuildandrunit.","$
 cd
 incdec 
  
 $
 gobuild 
  
 $
 gorunmain.go",NA
Thefollowingisasampleoutput.,NA,NA
2.7GettingInputfromKeyboard,NA,NA
"Infmtlibrary,itprovidesafeaturetogetinputfromkeyboard.WecanuseScanf().",NA,NA
"Forillustration,wecalculatecirclearea.Inthiscase,weneedaninputforradiusvalue. ",NA,NA
"Createafolder,calledinputdemo.Then,createafile,called",NA,NA
main.go,NA,NA
",andwritethisscript.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""math"" 
  
 )
  
 func
 main(){
  
 fmt.Println(""CircleAreacalculation"") 
 fmt.Print(""Enteraradiusvalue:"") 
  
 var
 radius
 float64 
  
 fmt.Scanf(""%f"",&radius)
  
 area:=math.Pi*math.Pow(radius,
 2
 ) 
  
 fmt.Printf(""Circleareawithradius%.2f=%.2f\n"",radius,area)
  
 }",NA
"Then,trytobuildandrunit.","$
 cd
 inputdemo 
  
 $
 gobuild 
  
 $
 gorunmain.go",NA
Entryaninputforcircleradius. ,NA,NA
Thefollowingisasampleoutput.,NA,NA
2.8ComparisonOperators,NA,NA
Youmaydetermineequalityordifferenceamongvariablesorvalues.Hereisthelistof ,NA,NA
comparisonoperatos:,"==isequalto 
  
 !=isnotequal 
  
 >isgreaterthan 
  
 <islessthan 
  
 >=isgreaterthanorequalto 
  
 <=islessthanorequalto",NA
Thisissamplecodeforcomparisonusage.,"package
 main
  
 import
 ""fmt""
  
 func
 main(){ 
  
  
 var
 ( 
  
 a=
 2 
  
 b=
 10 
  
 )
  
 fmt.Println(a>b) 
  
 fmt.Println(a<b) 
  
 fmt.Println(a>=b) 
  
 fmt.Println(a<=b) 
  
 fmt.Println(a!=b) 
  
 fmt.Println(a==b)
  
 }",NA
Buildandrunit.,NA,NA
AsampleoutputoftheprogramcanbeseeninFigurebelow.,NA,NA
2.9LogicalOperators,NA,NA
Theseoperatorscanbeusedtodeterminethelogicbetweenvariablesorvalues.,"&&and 
  
 ||or 
  
 !not",NA
Samplecode:,"package
 main
  
 import
 ""fmt""
  
 func
 main(){ 
  
  
 var
 ( 
  
 a=
 5 
  
 b=
 8 
  
 )
  
 fmt.Println(a>b&&a!=b) 
  
 fmt.Println(!(a>=b)) 
  
 fmt.Println(a==b||a>b)
  
 }",NA
Buildandrunit.,NA,NA
AsampleoutputoftheprogramcanbeseeninFigurebelow.,NA,NA
2.10Decision,NA,NA
TherearetwoapproachestobuilddecisiononGo.Wecanuse,NA,NA
if..then,NA,NA
and,NA,NA
switch..case,NA,NA
.,NA,NA
2.10.1if..then,NA,NA
Syntaxmodelfor,NA,NA
if..then,NA,NA
canbeformulatedasbelow:,"if
 conditional{ 
  
 //dosomething 
  
 }
 else
 { 
  
 //doanotherjob 
  
 }",NA
conditional,NA,NA
canbeobtainedbylogicalor/andcomparisonoperations.,"package
 main
  
 import
 ""fmt""
  
 func
 main(){ 
  
  
 var
 ( 
  
 a=
 5 
  
 b=
 8 
  
 )
  
 if
 a>b||a-b<a{ 
  
 fmt.Println(""conditional-->a>b||a-b<a"") }
 else
 { 
  
 fmt.Println(""..another"") 
  
 }
  
 }",NA
Buildandrunit.,NA,NA
AsampleoutputoftheprogramcanbeseeninFigurebelow.,NA,NA
2.10.2switch..case,NA,NA
switch..case,NA,NA
canbedeclaredasbelow:,"switch
 option{ 
  
 case
 option1: 
  
  
  
 //dooption1job
  
 case
 option2: 
  
  
 //dooption2job
  
 }",NA
Hereisthesamplecodeof,NA,NA
switch..case,NA,NA
usage:,"package
 main
  
 import
 ""fmt""
  
 func
 main(){
  
 selected:=
 2
  
  
 switch
 selected{ 
  
  
 case
 0
 : 
  
 fmt.Println(""selected=0"") 
  
 case
 1
 : 
  
 fmt.Println(""selected=1"") 
  
 case
 2
 : 
  
 fmt.Println(""selected=2"") 
  
 case
 3
 : 
  
 fmt.Println(""selected=3"") 
  
 default
 : 
  
 fmt.Println(""other.."")
  
 }
  
 }",NA
Buildandrunit.,NA,NA
AsampleoutputoftheprogramcanbeseeninFigurebelow.,NA,NA
2.11Iteration-for,NA,NA
Iterationoperationisusefulwhenwedorepetitiveactivities.Thefollowingisforsyntax.,"for
 initialization;conditional;increment/decrement{ }",NA
"Fortesting,writethisscriptintoafile,main.go.","package
 main
  
 import
 ""fmt""
  
 func
 main(){
  
  
 //iteration-for 
  
  
 var
 i
 int 
  
  
 for
 i=
 0
 ;i<
 5
 ;i++{ 
  
 fmt.Println(i) 
  
 }
  
 for
 j:=
 5
 ;j<
 11
 ;j++{ 
  
 fmt.Println(j) 
  
 }
  
 }",NA
Buildandrunit.,NA,NA
AsampleoutputoftheprogramcanbeseeninFigurebelow.,NA,NA
2.12Iteration-while,NA,NA
Godoesn’tprovidewhilesyntaxlike“Cfamily”programminglanguage.Wecanusefor ,NA,NA
whichpassesconditionalvalue. ,NA,NA
Writethisscriptfortesting.,"package
 main
  
 import
 ""fmt""
  
 func
 main(){
  
  
 //iteration-while 
  
  
 //godoesn'tprovidewhilesyntax.wecanusefor 
 i:=
 0 
  
  
 for
 i<
 5
 { 
  
 fmt.Println(i) 
  
 i++ 
  
 }
  
 }",NA
Buildandrunit.,NA,NA
AsampleoutputoftheprogramcanbeseeninFigurebelow.,NA,NA
2.13breakandcontinue,NA,NA
"breakcanbeusedtostoponthecodepoint.Otherwise,continuecanbeusedtoskipsome ",NA,NA
"scripts.Forillustration,wehavealooping.Theloopingwillbestoppedusing",NA,NA
break,NA,NA
if ,NA,NA
"value=3.Anothersample,wecanskiptheiterationwithvalue=7using",NA,NA
continue,NA,NA
syntax. ,NA,NA
Writethisscript.,"package
 main
  
 import
 ""fmt""
  
 func
 main(){
  
  
 //iteration-for 
  
  
 var
 i
 int 
  
  
 for
 i=
 0
 ;i<
 5
 ;i++{ 
  
  
 if
 i==
 3
 { 
  
  
  
 break 
  
 } 
  
 fmt.Println(i) 
  
 }
  
  
 for
 j:=
 5
 ;j<
 11
 ;j++{ 
  
  
 if
 j==
 7
 { 
  
  
  
 continue 
  
 } 
  
 fmt.Println(j) 
  
 }
  
 }",NA
Buildandrunit.,NA,NA
AsampleoutputoftheprogramcanbeseeninFigurebelow.,NA,NA
"3.Arrays,SlicesandMaps",NA,NA
ThischapterexplainshowtoworkwithGocollection.,NA,NA
3.1Array,NA,NA
GoprovidesArrayobjectforcollectionmanipulation.Wedefineourarrayvariableas ,NA,NA
follows.,"var
 numbers[
 5
 ]
 int 
  
 var
 cities[
 5
 ]
 string 
  
 var
 matrix[
 3
 ][
 3
 ]
 int
 //array2D",NA
"Forillustration,wecanbuildanewproject,calledarraydemo,bycreatingafolder,called ",NA,NA
arraydemo.,"$
 mkdirarraydemo 
  
 $
 cd
 arraydemo",NA
"Then,createafile,",NA,NA
main.go,NA,NA
.ImportGopackagesforourprogram.,"package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""math/rand"" 
  
 )",NA
"Inthisprogram,wecantrytodefineseveralarrayvariables.Settheirvaluesanddisplay ",NA,NA
themonTerminal.,"func
 main(){
  
  
 //definearray 
  
 fmt.Println(""definearrays"") 
  
  
 var
 numbers[
 5
 ]
 int 
  
  
 var
 cities[
 5
 ]
 string 
  
  
 var
 matrix[
 3
 ][
 3
 ]
 int
 //array2D
  
  
 //insertdata 
  
 fmt.Println("">>>>>insertarraydata"") 
  
 for
 i:=
 0
 ;i<
 5
 ;i++{ 
  
 numbers[i]=i 
  
 cities[i]=fmt.Sprintf(""City%d"",i) }
  
  
 //insertmatrixdata 
  
 fmt.Println("">>>>>insertmatrixdata"") 
  
 for
 i:=
 0
 ;i<
 3
 ;i++{ 
  
  
 for
 j:=
 0
 ;j<
 3
 ;j++{ 
  
 matrix[i][j]=rand.Intn(
 100
 )
  
 }",NA
Savethiscode.,NA,NA
Buildandrunthisprogram.,"$
 gobuild 
  
 $
 gorunmain.go",NA
"Youcanseeasampleofprogramoutput,showninFigurebelow.",NA,NA
3.2Slice ,NA,NA
Wecandefineanarraywithoutgivingarraylength.GousesSlicetodothiscase.Toset ,NA,NA
"arraylength,wecanusemake()function.",NA,NA
"Fortesting,webuildaproject,calledslicedemo.","$
 mkdirslicedemo 
  
 $
 cd
 slicedemo",NA
"Then,createafile,",NA,NA
main.go,NA,NA
",andwritethiscode.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""math/rand"" 
  
 )
  
 func
 main(){
  
  
 //defineslice 
  
 fmt.Println(""defineslices"") 
  
  
 var
 numbers[]
 int 
  
 numbers=
 make
 ([]
 int
 ,
 5
 ) 
  
 matrix:=
 make
 ([][]
 int
 ,
 3
 *
 3
 )
  
  
 //insertdata 
  
 fmt.Println("">>>>>insertslicedata"") 
  
  
 for
 i:=
 0
 ;i<
 5
 ;i++{ 
  
 numbers[i]=rand.Intn(
 100
 )
 //randomnumber 
 }
  
  
 //insertmatrixdata 
  
 fmt.Println("">>>>>insertslicematrixdata"") 
  
 for
 i:=
 0
 ;i<
 3
 ;i++{ 
  
 matrix[i]=
 make
 ([]
 int
 ,
 3
 ) 
  
  
 for
 j:=
 0
 ;j<
 3
 ;j++{ 
  
 matrix[i][j]=rand.Intn(
 100
 ) 
  
 } 
  
 }
  
  
 //displaydata 
  
 fmt.Println("">>>>>displaysclicedata"") 
  
 for
 j:=
 0
 ;j<
 5
 ;j++{ 
  
 fmt.Println(numbers[j]) 
  
 }
  
  
 //displaymatrixdata 
  
 fmt.Println("">>>>>displaysclice2Ddata"")",NA
Savethiscode.,NA,NA
Buildandrunthisprogram.,"$
 gobuild 
  
 $
 gorunmain.go",NA
AsampleofprogramoutputcanbeseeninFigurebelow.,NA,NA
3.3Map ,NA,NA
Wecancreateanarraywithkey-value.Gousesmap()toimplementkey-valuearray.,NA,NA
"Forillustration,wecreateaproject,calledmapdemo.","$
 mkdirmapdemo 
  
 $
 cd
 mapdemo",NA
"Wewilldefinemapvariables.Then,settheirvaluesanddispaythemonTerminal.Create",NA,NA
"afile,called",NA,NA
main.go,NA,NA
.Writethiscode.,"package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""math/rand"" 
  
 )
  
 func
 main(){
  
 //definearray 
  
 fmt.Println(""definemap"") 
  
 products:=
 make
 (
 map
 [
 string
 ]
 int
 ) 
 customers:=
 make
 (
 map
 [
 string
 ]
 int
 )
  
 //insertdata 
  
 fmt.Println("">>>>>insertmapdata"") 
 products[""product1""]=rand.Intn(
 100
 ) 
 products[""product2""]=rand.Intn(
 100
 )
  
 customers[""cust1""]=rand.Intn(
 100
 ) 
 customers[""cust2""]=rand.Intn(
 100
 )
  
 //displaydata 
  
 fmt.Println("">>>>>displaymapdata"") 
 fmt.Println(products[""product1""]) 
 fmt.Println(products[""product2""]) 
 fmt.Println(customers[""cust1""]) 
  
 fmt.Println(customers[""cust2""])
  
 }",NA
Savethiscode.,NA,NA
Buildandrunthisprogram.,"$
 gobuild 
  
 $
 gorunmain.go",NA
AsampleofprogramoutputcanbeseeninFigurebelow.,NA,NA
4.Functions,NA,NA
ThischapterexplainshowtocreatefunctionusingGo.,NA,NA
4.1CreatingASimpleFunction,NA,NA
DeclaringfunctioninGohasformatasfollows.,"func
 function_namereturn_datatype{ 
  
  
 return
 foo 
  
 }",NA
"Forillustration,wecanbuildanewproject,calledarraydemo,bycreatingafolder,called ",NA,NA
arraydemo.,"$
 mkdirarraydemo 
  
 $
 cd
 arraydemo",NA
"Createafile,",NA,NA
main.go,NA,NA
".Then,importGopackage.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""math"" 
  
 )",NA
"Tocreateasimplefunction,youcanwritethiscodein",NA,NA
main.go,NA,NA
file.,"func
 main(){ 
  
 foo()
  
 }
  
 //asimplefunction 
  
 func
 foo(){ 
  
 fmt.Println(""foo()wascalled"") 
  
 }",NA
4.2FunctionwithParameters,NA,NA
Sometimesyouwanttocreateafunctionwithaparameter.Youcanimplementitas ,NA,NA
follows.,"//afunctionwithaparameter 
  
 func
 circle_area(r
 float64
 ){ 
  
 area:=math.Pi*math.Pow(r,
 2
 ) 
  
 fmt.Printf(""Circlearea(r=%.2f)=%.2f\n"",r,area) }",NA
"Iftherearemanyparametersonfunction,wecandefinethefunctionasbelow.","//afunctionwithparameters 
  
 func
 calculate(a,b,c
 float64
 ){ 
  
 result:=a*b*c 
  
 fmt.Printf(""a=%.2f,b=%.2f,c=%.2f=%.2f\n"",a,b,c,result) }",NA
4.3FunctionwithReturningValue ,NA,NA
Youmaywanttocreatefunctionthathasareturnvalue.Lookthiscodeforsample ,NA,NA
illustration.,"//afunctionwithparametersandareturnvalue 
 func
 advanced_calculate(a,b,c
 float64
 )
 float64
 { result:=a*b*c
  
  
 return
 result 
  
 }",NA
4.4FunctionwithMultipleReturningValues ,NA,NA
"AfunctioncanreturnmultiplereturningvaluesinGo.Forinstance,wereturnthreevalues ",NA,NA
inGofunction.Asamplecodecanbewrittenasbelow.,"//afunctionwithparametersandmultiplereturnvalues 
  
 func
 compute(a,b,c
 float64
 ,name
 string
 )(
 float64
 ,
 float64
 ,
 string
 ){ result1:=a*b*c 
  
 result2:=a+b+c 
  
 result3:=result1+result2 
  
 newName:=fmt.Sprintf(""%svalue=%.2f"",name,result3)
  
  
 return
 result1,result2,newName 
  
 }",NA
4.5FunctionwithMultipleParametersandReturningValue ,NA,NA
Youmaywanttounlimitedparametersonfunction.ItpossibletoimplementitinGo.We ,NA,NA
canuse…todefinemultipleparametersinafunction.,"//afunctionwithzeroormoreparametersandareturnvalue 
 func
 add(numbers...
 int
 )
 int
 { 
  
 result:=
 0 
  
  
 for
 _,number:=
 range
 numbers{ 
  
 result+=number 
  
 } 
  
  
 return
 result 
  
 }",NA
4.6ClosureFunction ,NA,NA
Wecandefinefunctionsinafunction.It’scalledclosurefunction.Wecanimplement ,NA,NA
closurefunctioninGoasfollows.,"//aclosurefunction 
  
 func
 closure_func(name
 string
 ){
  
 hoo:=
 func
 (a,b
 int
 ){ 
  
 result:=a*b 
  
 fmt.Printf(""hoo()=%d\n"",result) } 
  
 joo:=
 func
 (a,b
 int
 )
 int
 { 
  
 return
 a*b+a 
  
 }
  
 fmt.Printf(""closure_func(%s)wascalled\n"",name) hoo(
 2
 ,
 3
 ) 
  
 val:=joo(
 5
 ,
 8
 ) 
  
 fmt.Printf(""valfromjoo()=%d\n"",val) 
  
 }",NA
4.7RecursionFunction ,NA,NA
Recursionfunctionisafunctionwherethesolutiontoaproblemdependsonsolutionsto ,NA,NA
"smallerinstancesofthesameproblem(asopposedtoiteration).Forillustration,wecan ",NA,NA
implementFibonacciproblemusingGo.,NA,NA
ThefollowingisasamplecodeforFibonaccisolutioninGo.,"//arecursionfunction 
  
 func
 fibonacci(n
 int
 )
 int
 { 
  
  
 if
 n==
 0
 { 
  
  
 return
 0 
  
 }
 elseif
 n==
 1
 { 
  
  
 return
 1 
  
 } 
  
  
 return
 (fibonacci(n-
 1
 )+fibonacci(n-
 2
 )) }",NA
4.8Testing ,NA,NA
Wecanwritecodeagainfromsection4.1to4.7andusetheminmainentry.Writethis ,NA,NA
codeon,NA,NA
main.go,NA,NA
file.,"package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""math"" 
  
 )
  
 func
 main(){ 
  
 foo() 
  
 circle_area(
 2.56
 ) 
  
 calculate(
 2
 ,
 6.7
 ,
 5
 )
  
 val:=advanced_calculate(
 2
 ,
 4.8
 ,
 7
 ) 
  
 fmt.Printf(""advanced_calculate()=%.2f\n"",val)
  
 val1,val2,val3:=compute(
 6
 ,
 2.7
 ,
 1.4
 ,""energy"") 
  
 fmt.Printf(""val1=%.2f,val2=%.2f,val3=\""%s\""\n"",val1,val2,val3)
  
 result:=add(
 1
 ,
 2
 ,
 3
 ,
 4
 ,
 5
 ,
 6
 ,
 7
 ,
 8
 ,
 9
 ,
 10
 ,
 11
 ) 
 fmt.Printf(""add()=%d\n"",result)
  
 closure_func(""testing"")
  
 ret:=fibonacci(
 15
 ) 
  
 fmt.Printf(""fibonacci()=%d\n"",ret) }
  
 //asimplefunction 
  
 func
 foo(){ 
  
 fmt.Println(""foo()wascalled"") 
  
 }
  
 //afunctionwithaparameter 
  
 func
 circle_area(r
 float64
 ){ 
  
 area:=math.Pi*math.Pow(r,
 2
 ) 
  
 fmt.Printf(""Circlearea(r=%.2f)=%.2f\n"",r,area) }
  
 //afunctionwithparameters 
  
 func
 calculate(a,b,c
 float64
 ){ 
  
 result:=a*b*c 
  
 fmt.Printf(""a=%.2f,b=%.2f,c=%.2f=%.2f\n"",a,b,c,result) }
  
 //afunctionwithparametersandareturnvalue 
 func
 advanced_calculate(a,b,c
 float64
 )
 float64
 { result:=a*b*c",NA
Savethiscode.,NA,NA
Buildandrunthisprogram.,"$
 gobuild 
  
 $
 gorunmain.go",NA
AsampleofprogramoutputcanbeseeninFigurebelow.,NA,NA
5.Pointers,NA,NA
ThischapterweexplorehowtousePointerinGo.,NA,NA
5.1PointerinGo ,NA,NA
"Apointerisaprogramminglanguageobject,whosevaluerefersdirectlyto(or“pointsto”)",NA,NA
"anothervaluestoredelsewhereinthecomputermemoryusingitsaddress,ref:",NA,NA
http://en.wikipedia.org/wiki/Pointer_(computer_programming),NA,NA
.,NA,NA
"Whenwedefinexasint,wecanxvaluebycallingx=1.Toknowthememoryaddressof",NA,NA
"x,wecanuse&x.Totest,webuildanewproject.Createafolder,calledpointers.","$
 mkdirpointers 
  
 $
 cd
 pointers",NA
"Creataafile,",NA,NA
main.go,NA,NA
",andwritethiscode.","package
 main 
  
 import
 ""fmt"" 
  
 func
 main(){ 
  
  
 var
 x
 int 
  
 x=
 10 
  
 fmt.Println(x)
 //printavalueofx 
 fmt.Println(&x)
 //printaddressofx 
 }",NA
Savethisfile.,NA,NA
Trytobuildandrunit.,"$
 gobuild 
  
 $
 gorunmain.go",NA
Youcanseexhasavalue10anditsmemoryaddress0xC082002238.Memoryaddress ,NA,NA
canberetrievedusing&keyword.,NA,NA
"InGo,wecandefinedatatypeasPointerusing*,forinstancevarx*int.Wecanset ",NA,NA
"Pointervariableusing*x=value.TosetmemoryaddressonPointervariable,wecanuse ",NA,NA
x=memory_address.,NA,NA
"Fortesting,weaddthefollowingcodeon",NA,NA
main.go,NA,NA
file.,"package
 main
  
 import
 ""fmt""
  
 func
 main(){
  
 var
 x
 int
  
 x=
 10 
  
 fmt.Println(x)
 //printavalueofx 
 fmt.Println(&x)
 //printaddressofx
  
  
 //declarepointer 
  
  
 var
 num*
 int 
  
 val:=
 new
 (
 int
 )
  
 num=
 new
 (
 int
 ) 
  
 *num=x
 //setvalue
  
 val=&x
 //setaddress
  
 fmt.Println(""===pointernum==="") 
  
 fmt.Println(*num)
 //printavalueofx 
 fmt.Println(num)
 //printaddressofx 
 fmt.Println(""===pointerval==="") 
  
 fmt.Println(*val)
 //printavalueofx 
 fmt.Println(val)
 //printaddressofx
  
 }",NA
Savethisfile.,NA,NA
Trytobuildandrunit.AsampleofprogramoutputisshowninFigurebelow.,NA,NA
5.2Demo:SinglyLinkedList,NA,NA
"Inthissection,wecancreateasinglylinkedlistfromscratch.YoucanreadyourData ",NA,NA
"Structurebooktounderstandwhatsinglylinkedlistis.YoualsoreaditonWikipedia, ",NA,NA
http://en.wikipedia.org/wiki/Linked_list#Singly_linked_lists,NA,NA
.,NA,NA
"NowwecancreateasinglylinkedlistusingGo.Firstly,wecreatefolder,linkedlist.","$
 mkdirlinkedlist 
  
 $
 cd
 linkedlist",NA
"Createafile,",NA,NA
main.go,NA,NA
.ImportGopackageanddefinestructforPointer.,"package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""math/rand"" 
  
 )
  
 type
 Node
 struct
 { 
  
 value
 int 
  
 next*Node 
  
 }",NA
nextisPointervariablewhichreferstomemoryaddressofthenextPointervariable.,NA,NA
"Wecreateafunction,add(),whichweinsertanewdataonoursinglylinkedlist.The ",NA,NA
followingisimplementationofadd()function.,"func
 add(list*Node,data
 int
 )*Node{ 
  
 if
 list==
 nil
 { 
  
 list:=
 new
 (Node) 
  
 list.value=data 
  
 list.next=
 nil
  
 return
 list 
  
 }
 else
 { 
  
 temp:=
 new
 (Node) 
  
 temp.value=data 
  
 temp.next=list
  
 list=temp
  
 return
 list 
  
 } 
  
 }",NA
"Wealsocandisplayacontentofsinglylinkedlist.Createafunction,display(),andwrite",NA,NA
thiscode.,"func
 display(list*Node){ 
  
  
 var
 temp*Node 
  
 temp=list
  
 for
 temp!=
 nil
 {
  
 fmt.Println(temp.value) 
  
 temp=temp.next 
  
 } 
  
 }",NA
"Inmainentry,wedefinesinglylinkedlistasPointervariable,calledhead.Weaddfive",NA,NA
"dataintoaPointerlist.Then,wedisplayalldata.Writethefollowingcodeformain()",NA,NA
function.,"func
 main(){
  
  
 var
 head*Node 
  
 head=
 nil
  
  
 //add5data 
  
 fmt.Println(""===insert5data==="") n:=
 0 
  
  
 for
 n<
 5
 { 
  
 fmt.Printf(""data%d\n"",n)
  
 head=add(head,rand.Intn(
 100
 )) n++ 
  
 } 
  
 fmt.Println(""===display==="") 
  
 display(head)
  
 }",NA
Savethisfile.,NA,NA
Trytobuildandrunit.,"$
 gobuild 
  
 $
 gorunmain.go",NA
AsampleofprogramoutputcanbeseeninFigurebelow.,NA,NA
6.StructsandMethods,NA,NA
ThischapterexplainshowtoworkwithstructandmethodinGo.,NA,NA
6.1Structs,NA,NA
"Wecanextendourobjectusingstruct.IfyouhaveexperienceinC/C++,weusestruct ",NA,NA
approachinGolanguage.,NA,NA
"Todefineastruct,wecanusestructkeyword,forinstance,wedefinestruct_namefor ",NA,NA
structobject.,"type
 struct_name
 struct
 { 
  
  
 //fields 
  
 }",NA
"Forillustration,wecreateastruct,Employee.Firstly,webuildanewprojectbycreatinga ",NA,NA
"folder,calledstructdemo.","$
 mkdirstructdemo 
  
 $
 cd
 structdemo",NA
"Then,createafile,called",NA,NA
main.go,NA,NA
".Firstly,wedefineourpackagesandastruct, ",NA,NA
Employee.,"package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""time"" 
  
 )
  
 //defineastruct 
  
 type
 Employee
 struct
 { 
  
 id
 int 
  
 name
 string 
  
 country
 string 
  
 createdtime.Time 
  
 }",NA
"Employeestructhasfourfieldssuchasid,name,countryandcreated.",NA,NA
"TouseastructinGo,wecaninstanceourstructobjectusingnew().Then,wesetits ",NA,NA
values.,NA,NA
Writethiscodeinentrypointon,NA,NA
main.go,NA,NA
file.,"func
 main(){
  
  
 //declarevariable 
  
  
 var
 empEmployee 
  
 newEmp:=
 new
 (Employee)",NA
Savethisfile.,NA,NA
Trytobuildandrunit.,"$
 gobuild 
  
 $
 gorunmain.go",NA
Asampleofprogramoutput:,NA,NA
6.2Methods,NA,NA
"Wedefinemethodsinourstructobjectbypassingstructobject.Forillustration,wecreate ",NA,NA
Circlestructobjectwhichhasthefollowingmethods:,NA,NA
display() ,NA,NA
area() ,NA,NA
circumference,NA,NA
() ,NA,NA
moveTo(),NA,NA
Howtoimplement?,NA,NA
"Createafolder,calledstructmethod.","$
 mkdirstructmethod 
  
 $
 cd
 structmethod",NA
"Thenextstepistocreateafile,called",NA,NA
main.go,NA,NA
.ImportourpackageanddefineCircle ,NA,NA
structobject.,"package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""math"" 
  
 )
  
 //defineastruct 
  
 type
 Circle
 struct
 { 
  
 x,y
 int 
  
 r
 float64 
  
 }",NA
"Circlestructhasthreefields:x,yandr.",NA,NA
"Basically,wecancreatestructmethodinthesamewaywhenyoucreateafunction.We ",NA,NA
passourstructobjectonthefrontofmethodname.Thefollowingisimplementationour ,NA,NA
structmethods.,NA,NA
Thelaststepistouseourstructmethodinmainprogram.Writethefollowingcode.,"func
 main(){ 
  
  
 //methods 
  
 shape:=Circle{
 10
 ,
 5
 ,
 2.8
 } 
  
 shape.display() 
  
 fmt.Printf(""area=%2.f\n"",shape.area()) 
  
 fmt.Printf(""circumference=%2.f\n"",shape.circumference())
  
 shape.moveTo(
 5
 ,
 5
 ) 
  
 shape.display() 
  
 }",NA
Savethiscode.,NA,NA
Buildandrun,NA,NA
main.go,NA,NA
onyourTerminal.,"$
 gobuild 
  
 $
 gorunmain.go",NA
Asampleofprogramoutput:,NA,NA
7.StringOperations,NA,NA
ThischapterexplainshowtoworkwithStringoperationinGo.,NA,NA
7.1GettingStarted,NA,NA
Wealreadyusestringasdatatype.Thefollowingisasamplecodetoworkwithstring ,NA,NA
dataandprintitonTerminal.,"//simplestringdemo 
  
  
 var
 str
 string 
  
 str=""Helloworld"" 
  
 fmt.Println(str)",NA
"Inthissection,wetrytomanipulatestringdata.Wewillexploreseveralfunctionson ",NA,NA
"strconv,",NA,NA
http://golang.org/pkg/strconv/,NA,NA
"andstrings,",NA,NA
http://golang.org/pkg/strings/,NA,NA
"packages. Firstly,webuildanewprojectbycreatingafolder,stringdemo.","$
 mkdirstringdemo 
  
 $
 cd
 stringdemo",NA
"Createafile,called",NA,NA
main.go,NA,NA
".Importfmt,strcovandstringspackages.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""strconv"" 
  
 ""strings"" 
  
 )",NA
Thenextstepistoexplorehowtoworkwithstring.,NA,NA
7.2ConcatenatingStrings ,NA,NA
"Ifyouhavealistofstring,youcanconcatenateintoonestring.Youcanuse+operator ",NA,NA
andfmt.Sprintf()function.Hereisasamplecode,"str1:=""hello"" 
  
 str2:=""world"" 
  
 str3:=str1+str2 
  
 fmt.Println(str3)
  
 str4:=fmt.Sprintf(""%s%s"",str1,str2) fmt.Println(str4)",NA
7.3StringToNumeric ,NA,NA
Sometimeyouwanttodomathoperationsbutinputdatahasstringtype.Toconvertstring ,NA,NA
"typeintonumeric,youcanusestrcov.ParseInt()forStringtoIntandstrcov.ParseFloat() ",NA,NA
forstringtoFloat.,NA,NA
Thefollowingisasamplecodetoimplementstringtonumericconversion.,"fmt.Println(""----demoStringToNumeric----"") str_val1:=""5"" 
  
 str_val2:=""2.8769""
  
  
 var
 err
 error 
  
  
 var
 int_val1
 int64 
  
 int_val1,err=strconv.ParseInt(str_val1,
 10
 ,
 32
 )
 //base10,64size 
  
 if
 err==
 nil
 { 
  
 fmt.Println(int_val1) 
  
 }
 else
 { 
  
 fmt.Println(err) 
  
 }
  
  
 var
 float_val2
 float64 
  
 float_val2,err=strconv.ParseFloat(str_val2,
 64
 )
 //64size 
  
 if
 err==
 nil
 { 
  
 fmt.Println(float_val2) 
  
 }
 else
 { 
  
 fmt.Println(err) 
  
 }",NA
7.4NumerictoString ,NA,NA
"ItiseasytoconvertnumerictoStringtype,youcanusefmt.Sprintf.Youcangetstring ",NA,NA
typeautomatically.,"fmt.Println(""----demonumerictostring----"") num1:=
 8 
  
 num2:=
 5.872
  
 var
 str_num1
 string 
  
 str_num1=fmt.Sprintf(""%d"",num1) 
 fmt.Println(str_num1)
  
 var
 str_num2
 string 
  
 str_num2=fmt.Sprintf(""%f"",num2) 
 fmt.Println(str_num2)",NA
7.5StringParser ,NA,NA
ThesimplesolutiontoparsingStringuses,NA,NA
Split(),NA,NA
"withdelimiterparameter.Forexample, ",NA,NA
youhaveStringdatawith;delimiterandwanttoparseit.Hereissamplecode,"fmt.Println(""----demoStringParser----"") 
 data:=""Berlin;Amsterdam;London;Tokyo"" fmt.Println(data) 
  
 cities:=strings.Split(data,"";"") 
  
  
 for
 _,city:=
 range
 cities{ 
  
 fmt.Println(city) 
  
 }",NA
7.6CheckStringDataLength ,NA,NA
Youcanuse,NA,NA
len(),NA,NA
togetthelengthofdata.,"fmt.Println(""----demoStringLength----"") 
 str_data:=""welcometogo"" 
  
 len_data:=
 len
 (str_data) 
  
 fmt.Printf(""len=%d\n"",len_data)",NA
7.7CopyData ,NA,NA
"YoumaycopysomecharactersfromStringdata.Todoit,youcanuse[start:end]syntax.",NA,NA
Hereissyntaxformat:,"fmt.Println(""----democopydata----"") 
  
 sample:=""helloworld,go!"" 
  
 fmt.Println(sample) 
  
 fmt.Println(sample[
 0
 :
 len
 (sample)])
 //copyall 
  
 fmt.Println(sample[:
 5
 ])
 //copy5characters 
  
 fmt.Println(sample[
 3
 :
 8
 ])
 //copycharactersfromindex3until8
  
 fmt.Println(sample[
 len
 (sample)-
 5
 :
 len
 (sample)])
 //5copycharactersfrom",NA
7.8UpperandLowerCaseCharacters ,NA,NA
"Insomesituation,youwanttogetallstringdatainupperorlowercasecharacters.This ",NA,NA
featureisbuiltinStringobject.,NA,NA
ToUpper(),NA,NA
functionisusedtomakewholestringinupper ,NA,NA
caseand,NA,NA
ToLower(),NA,NA
isusedtomakewholestringinlowercase.,NA,NA
Thefollowingisasamplecodetogetupperandlowercasecharacters.,"fmt.Println(""----demoupper/lowercharacters----"") message:=""HelloWorld,GO!"" 
  
 fmt.Println(message) 
  
 fmt.Println(strings.ToUpper(message))
 //upperchars 
 fmt.Println(strings.ToLower(message))
 //upperchars",NA
7.9TestingAProgram ,NA,NA
Wecanwriteourcodeinmain.gocompletelyasfollows.,"package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""strconv"" 
  
 ""strings"" 
  
 )
  
 func
 main(){
  
  
 //simplestringdemo 
  
  
 var
 str
 string 
  
 str=""Helloworld"" 
  
 fmt.Println(str)
  
 //Concatenating 
  
 str1:=""hello"" 
  
 str2:=""world"" 
  
 str3:=str1+str2 
  
 fmt.Println(str3)
  
 str4:=fmt.Sprintf(""%s%s"",str1,str2) fmt.Println(str4)
  
 //StringToNumeric 
  
 fmt.Println(""----demoStringToNumeric----"") str_val1:=""5"" 
  
 str_val2:=""2.8769""
  
  
 var
 err
 error 
  
  
 var
 int_val1
 int64 
  
 int_val1,err=strconv.ParseInt(str_val1,
 10
 ,
 32
 )
 //base10,64size 
  
 if
 err==
 nil
 { 
  
 fmt.Println(int_val1) 
  
 }
 else
 { 
  
 fmt.Println(err) 
  
 }
  
  
 var
 float_val2
 float64 
  
 float_val2,err=strconv.ParseFloat(str_val2,
 64
 )
 //64size 
  
 if
 err==
 nil
 { 
  
 fmt.Println(float_val2) 
  
 }
 else
 { 
  
 fmt.Println(err) 
  
 }",NA
Savethiscode.,NA,NA
Buildandrun,NA,NA
main.go,NA,NA
onyourTerminal.,"$
 gobuild 
  
 $
 gorunmain.go",NA
Asampleofprogramoutput:,NA,NA
8.FileOperations,NA,NA
Thischapterexplainshowtoworkwithfileoperations.,NA,NA
8.1GettingStarted ,NA,NA
"WecanworkwithI/Ofileusingiopackage,",NA,NA
http://golang.org/pkg/io/,NA,NA
.,NA,NA
"Forillustration,wecantrytowriteandreadtextfile.Firstly,wecreateafolder,called ",NA,NA
fileio.,"$
 mkdirfileio 
  
 $
 cd
 fileio",NA
ThenextstepistobuildGoapplicationtowriteandreadafile.,NA,NA
8.2WritingDataIntoAFile,NA,NA
"Towriteandreadafile,wecanuseiopackage.Inthissection,wetrytowritedataintoa file.",NA,NA
"Createafile,called",NA,NA
main.go,NA,NA
",andputiton<go_project_root>/fileiofolder.Firstly,we ",NA,NA
defineourpackageswhichweuse.,"import
 ( 
  
 ""fmt"" 
  
 ""io/ioutil"" 
  
 )",NA
"Then,createafunction,calledwriteFile().Writethiscode.","func
 writeFile(message
 string
 ){ 
  
 bytes:=[]
 byte
 (message) 
  
 ioutil.WriteFile(""d:/temp/testgo.txt"",bytes,
 0644
 ) 
 fmt.Println(""createdafile"") 
  
 }",NA
Youcanseethatwecancreateafileusingioutil.WriteFile().Wepassdatainbytearray ,NA,NA
format.Youcanchangefilenameanditspath.,NA,NA
8.3ReadingDataFromAFile ,NA,NA
"Toreaddatafromafile,wecreateafunction,calledreadFile().Writethiscode.","func
 readFile(){ 
  
 data,_:=ioutil.ReadFile(""d:/temp/testgo.txt"") fmt.Println(""filecontent:"") 
  
 fmt.Println(
 string
 (data)) 
  
 }",NA
"Toreadacontentoffile,wecanuseioutil.ReadFile().Itreturnarrayofstring. ",NA,NA
Note:afileanditspatchissimilartofileonprevioussection.,NA,NA
8.4WritingAll ,NA,NA
"Tosimply,wecanwriteourcodein",NA,NA
main.go,NA,NA
fileasfollows.,"package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""io/ioutil"" 
  
 )
  
 func
 main(){
  
 //writedataintoafile 
  
 fmt.Println(""writingdataintoafile"") 
 writeFile(""welcometogo"") 
  
 readFile()
  
 //readdatafromafile 
  
 fmt.Println(""readingdatafromafile"") readFile()
  
 }
  
 func
 writeFile(message
 string
 ){ 
  
 bytes:=[]
 byte
 (message) 
  
 ioutil.WriteFile(""d:/temp/testgo.txt"",bytes,
 0644
 ) 
 fmt.Println(""createdafile"") 
  
 } 
  
 func
 readFile(){ 
  
 data,_:=ioutil.ReadFile(""d:/temp/testgo.txt"") fmt.Println(""filecontent:"") 
  
 fmt.Println(
 string
 (data)) 
  
 }",NA
Savethisfile.,NA,NA
Nowyoucanbuildandrunit.,"$
 gobuild 
  
 $
 gorunmain.go",NA
AsampleoutputofprogramisshowninFigurebelow.,NA,NA
9.ErrorHandlingandLogging,NA,NA
ThischapterexplainshowtohandleerrorsandexceptionsthatoccurinGoapplication.,NA,NA
9.1ErrorHandling ,NA,NA
"Basicallywhenwewriteaprogramandoccurerroronrunning,Gowillcatchprogram",NA,NA
error.Itwillgenerateapanic.,NA,NA
"Forillustration,wecreateaprojectbycreatingafolder,errorhandle.","$
 mkdirerrorhandle 
  
 $
 cd
 errorhandle",NA
"Then,createafile,main.go,andwritethiscode.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 )
  
 func
 main(){
  
 calculate() 
  
 }
  
 func
 calculate(){ 
  
 fmt.Println(""----demoerrorhandling---"") a:=
 10 
  
 b:=
 0 
  
 c:=
 0
  
 c=a/b 
  
 fmt.Printf(""result=%.2f\n"",c) 
  
 fmt.Println(""Done"") 
  
 }",NA
Nowyoucanbuildandrunit.,"$
 gobuild 
  
 $
 gorunmain.go",NA
ThisprogramoutputisshowninFigurebelow.,NA,NA
"9.2defer,panic(),andrecover() ",NA,NA
Goprovidedefersyntaxtomakesureourprogramruncompletely.panic()canbeuseto ,NA,NA
raiseerroronourprogram.,NA,NA
"Forillustration,weadddemoPanic()functiononmain.gofrompreviousproject.Then,we ",NA,NA
calldemoPanic()inmainentry.,"package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 )
  
 func
 main(){
  
 demoPanic()
  
 }
  
 func
 demoPanic(){ 
  
 fmt.Println(""----demoerrorhandling---"") 
  
 deferfunc
 (){ 
  
 fmt.Println(""dosomething"") 
  
 }() 
  
  
 panic
 (""thisisapanicfromdemoPanic()"") 
 fmt.Println(""Thismessagewillnevershow"") }",NA
Nowyoucanthisprogram.,NA,NA
"Youcanseefunctionunderdeferruncompletely.Whenwecallpanic(),Gowillraiseerror ",NA,NA
onourprogramandthenstoppedthisprogram.,NA,NA
NowhowtocatcherroronGoprogram?wecanuserecover()tocatcherror. ,NA,NA
"Trytocreatecalculaze2()function,andwritethiscode.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 )
  
 func
 main(){ 
  
 calculate2() 
  
 }
  
 func
 calculate2(){",NA
Nowyoucanrunthisprogram.,NA,NA
Youcanseetheprogramoccurrederrorbutitcanrecoversotheprogramcanprint,NA,NA
“result”and“Done”attheendofprogram.,NA,NA
9.3try..catch,NA,NA
"Inthissection,weexplorerexternallibrary,Try/Catch/Finally,from ",NA,NA
https://github.com/manucorporat/try,NA,NA
.Wecanusetry..catchtohandleerrorinG,NA,NA
o.,NA,NA
"ToinstallGolibraryfromGithub,youmustinstalgit,",NA,NA
http://git-scm.com/,NA,NA
.Downloadit ,NA,NA
"basedonyourplatform.IfyouuseWindowsplatform,don’tforgettosetitonPATHon ",NA,NA
EnvironmentVariables.,NA,NA
"ThenextstepistoconfigureGOPATH.Itrepresentsourworkspacepath,forinstance,my ",NA,NA
workspacepathis,NA,NA
D:\PE_PRESS\eBook\go_prog\codes,NA,NA
".InLinux/Mac,youcandefine ",NA,NA
"yourownworkspacepathinunderyouraccounthomepath,forinstance.Further ",NA,NA
"information,youcanreaditon",NA,NA
https://golang.org/doc/code.html,NA,NA
.,NA,NA
"IfyouuseLinux/Mac,youcandefineGOPATHusingexportcommandoryouadditon ",NA,NA
yourprofilefile.,"$
 mkdir
 $HOME
 /go 
  
 $
 export
 GOPATH
 =
 $HOME
 /go",NA
"IfyouuseWindowsplatform,youopen",NA,NA
EnvironmentVariables,NA,NA
.Youcanopenitfrom,NA,NA
Advancedsystemsettings,NA,NA
".Then,click",NA,NA
EnvironmentVariables,NA,NA
button.AddGOPATH ,NA,NA
onyouruserandSystemvariables.,NA,NA
"Forillustration,wecreateaprojectbycreatingafolder,trycatch.","$
 mkdirtrycatch 
  
 $
 cd
 trycatch",NA
NowwecaninstalltrycatchlibraryfromGithub.Typethefollowingcommand.,"$
 gogetgithub.com/manucorporat/try",NA
IfyouuseWindowsplatformandgeterrorrelatedto,NA,NA
libcurl.dll,NA,NA
",youmustcopylibcurl.dll",NA,NA
from<installed_git_path>/binfolderto<installed_git_path>/libexec/git-corefolder.,NA,NA
"Nowyoucanwriteaprogram.Createafile,called",NA,NA
main.go,NA,NA
",andwritethiscode.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""github.com/manucorporat/try"" 
  
 )
  
 func
 main(){ 
  
 try.This(
 func
 (){ 
  
 a:=
 10 
  
 b:=
 0 
  
 c:=
 0
  
 c=a/b 
  
 fmt.Printf(""result=%.2f\n"",c)
  
 }).Finally(
 func
 (){ 
  
 fmt.Println(""Done"")
  
 }).Catch(
 func
 (_try.E){ 
  
 fmt.Println(""exceptioncatched"")
 //print 
  
 try.Throw()
 //rethrowcurrentexception!!",NA
Savethiscode.,NA,NA
Nowyoucanbuildandrunthisprogram.,"$
 gobuild 
  
 $
 gorunmain.go",NA
AprogramoutputcanbeseeninFigurebelow.,NA,NA
9.4Logging ,NA,NA
"Inprevioussection,weuse",NA,NA
fmt.Println(),NA,NA
toprinterrormessageonconsole.Imaginethere,NA,NA
aremanymessagesonconsoleandwewanttoidentifywhicherrormessageis.Go,NA,NA
packageprovides“log”tohandlelogging.,NA,NA
"Forillustration,wecreateaprojectbycreatingafolder,logging.","$
 mkdirlogging 
  
 $
 cd
 logging",NA
"Then,trytocreateafile,",NA,NA
main.go,NA,NA
",andwritethiscode.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""log"" 
  
 ""os"" 
  
 )
  
 func
 main(){ 
  
 simpleLogging()
  
 }
  
 func
 simpleLogging(){ 
  
 fmt.Println(""-----------simplelogging-----------"") log.Println(""HelloWorld"") 
  
 log.Println(""Thisisasimpleerror"") 
  
 }",NA
Nowyoucanbuildandrunit.,"$
 gobuild 
  
 $
 gorunmain.go",NA
ThisprogramoutputisshowninFigurebelow.,NA,NA
"Wecanmodifyourloggingformatbymodifyinglog.Loggerobject.Forillustration,create",NA,NA
"afunction,calledformattingLogging(),andwritethiscode.","func
 main(){ 
  
 formattingLogging()
  
 }
  
 func
 formattingLogging(){ 
  
 fmt.Println(""-----------formattingLogging-----------"") 
  
 var
 warning*log.Logger
  
 warning=log.New( 
  
 os.Stdout, 
  
 ""WARNING:"", 
  
 log.Ldate|log.Ltime|log.Lshortfile)
  
 warning.Println(""Thisiswarningmessage1"") 
 warning.Println(""Thisiswarningmessage2"") }",NA
Nowyoucanbuildandrunthisprogram.AsampleoutputcanbeseeninFigurebelow.,NA,NA
"Wealsocansaveourloggingmessagesintoafile.Forinstance,wesavethemon",NA,NA
"myapp.log.Basically,wecanopenfileusingos.OpenFile().Then,passthisobjectinto ",NA,NA
log.Loggerobject.,NA,NA
TrytocreatefileLogging()functionandwritethiscode.,"func
 main(){ 
  
 fileLogging()
  
 }
  
 func
 fileLogging(){ 
  
 fmt.Println(""-----------filelogging-----------"") 
 file,err:=os.OpenFile(""d:/temp/myapp.log"", 
 os.O_CREATE|os.O_WRONLY|os.O_APPEND,
 0666
 ) 
  
 if
 err!=
 nil
 { 
  
 fmt.Println(""Failedtoopenlogfile"") 
  
  
 return 
  
 }
  
 var
 logFile*log.Logger 
  
 logFile=log.New( 
  
 file, 
  
 ""APP:"", 
  
 log.Ldate|log.Ltime|log.Lshortfile)
  
 logFile.Println(""Thisiserrormessage1"") 
 logFile.Println(""Thisiserrormessage2"") 
 logFile.Println(""Thisiserrormessage3"") fmt.Println(""Done"") 
  
 }",NA
Note:Youcanchangefilepathbasedonyourplatform. ,NA,NA
Nowyoucanbuildandrunthisprogram.,NA,NA
"Afterthat,youcanopen",NA,NA
myapp.log,NA,NA
file.Youwillseetheloggingmessageonthisfile.,NA,NA
10.BuildingOwnGoPackage,NA,NA
ThischapterexplainshowtobuildownGoPackage,NA,NA
10.1CreatingSimpleModule,NA,NA
"Inthissection,wecreateasimplemodule.Wewillcallfunctionsfromexternalfile(*.go) ",NA,NA
"inthesamepackage,mainpackage.",NA,NA
"Firstly,createnewproject,calledmymodule.","$
 mkdirmymodule 
  
 $
 cd
 mymodule",NA
"Then,createafile,called",NA,NA
simplemath.go,NA,NA
.Wedefinethreefunctions.Writethefollowing ,NA,NA
code.,"package
 main
  
 func
 Add(a,b
 int
 )
 int
 {
  
 return
 a+b 
  
 } 
  
 func
 Subtract(a,b
 int
 )
 int
 {
  
 return
 a-b 
  
 } 
  
 func
 Multiply(a,b
 int
 )
 int
 {
  
  
 return
 a*b 
  
 }",NA
"Note:MethodnameiswritteninPascalcase,forinstanceHelloWorld(),DoProcessing(), ",NA,NA
IsEmpty().,NA,NA
Nowwewillcallthreefunction(,NA,NA
simplemath.go,NA,NA
")frommainentry.Createanewfile, ",NA,NA
called,NA,NA
main.go,NA,NA
",andwritethiscode.","package
 main
  
 import
 ( 
  
 ""fmt""
  
 )
  
 func
 main(){
  
 fmt.Println(""accessmymodule…"") 
  
  
 var
 c
 int 
  
 c=Add(
 10
 ,
 6
 ) 
  
 fmt.Printf(""add()=%d\n"",c) 
  
 c=Subtract(
 5
 ,
 8
 ) 
  
 fmt.Printf(""subtract()=%d\n"",c) 
  
 c=Multiply(
 5
 ,
 3
 )",NA
Saveall.,NA,NA
Nowyoucantesttobuildandruntheprogram.,"$
 gobuild 
  
 $
 gorunmain.gosimplemath.go",NA
AsampleoutputcanbeseeninFigurebelow.,NA,NA
10.2BuildingOwnPackage,NA,NA
"Inpreviousprogram,wecreateamoduleinmainpackage.Wecreateapackageandthen ",NA,NA
useitinourprogram.,NA,NA
"ThefirstthingweshoulddoistoconfigureGOPATH.Itrepresentsourworkspacepath, ",NA,NA
"forinstance,myworkspacepathis",NA,NA
D:\PE_PRESS\eBook\go_prog\codes,NA,NA
.InLinux/Ma,NA,NA
"c, youcandefineyourownworkspacepathinunderyouraccounthomepath,forinstance. ",NA,NA
"Furtherinformation,youcanreaditon",NA,NA
https://golang.org/doc/code.html,NA,NA
.,NA,NA
"IfyouuseLinux/Mac,youcandefineGOPATHusingexportcommandoryouadditon ",NA,NA
yourprofilefile.,"$
 mkdir
 $HOME
 /go 
  
 $
 export
 GOPATH
 =
 $HOME
 /go",NA
"IfyouuseWindowsplatform,youopen",NA,NA
EnvironmentVariables,NA,NA
.Youcanopenitfrom ,NA,NA
Advancedsystemsettings,NA,NA
".Then,click",NA,NA
EnvironmentVariables,NA,NA
button.AddGOPATH ,NA,NA
onyouruserandSystemvariables.,NA,NA
"Inthissection,weorganizeourworkspaceasfollows:",NA,NA
–-$GOPATH,NA,NA
––-src,NA,NA
–––-simplemodule,NA,NA
–––-,NA,NA
simplemoduletest,NA,NA
"Forinstance,wealreadybeenonGOPATH.Then,createsrc/simplemoduleand ",NA,NA
src/simplemoduletestfolders.,"$
 mkdirsrc 
  
 $
 cd
 src 
  
 $
 mkdirsimplemodule 
  
 $
 mkdirsimplemoduletest",NA
AsampleillustrationforourlabpathisshowninFigurebelow.,NA,NA
"Nowyoucancreateafile,called",NA,NA
simplemath.go,NA,NA
on,NA,NA
simplemath,NA,NA
folder.Writethe,NA,NA
followingcode.,"package
 simplemath",NA
"Note:MethodnameiswritteninPascalcase,forinstanceHelloWorld(),DoProcessing(),",NA,NA
IsEmpty().,NA,NA
"Tocompileourpackage,youcannavigateto",NA,NA
simplemodule,NA,NA
"directory,thencallgobuild",NA,NA
andinstall.,"$
 cd
 simplemodule 
  
 $
 gobuild 
  
 $
 goinstall",NA
"Ifsuccess,itwillcreateafolder,called",NA,NA
pkg,NA,NA
".Youcanseeyourcompiledpackagefile,for",NA,NA
"instance,",NA,NA
simplemodule.a,NA,NA
Thenextstepistousesimplemodulepackage.,NA,NA
"Createafile,called",NA,NA
main.go,NA,NA
onsimplemathtestfolder.,NA,NA
Saveall.Nowyoucancompileandrunthisprogram.,"$
 cd
 simplemathtest 
  
 $
 gobuild 
  
 $
 gorunmain.go",NA
YoucanseethesampleoutputcanbeseeninFigurebelow.,NA,NA
11.Concurrency,NA,NA
ThischapterexplainshowtocreateconcurrencyinGo,NA,NA
11.1GettingStarted ,NA,NA
"WecanrunaprogramorafunctioninbackgroundusingGo.Inthischapter,weexplore ",NA,NA
severalscenariostobuildconcurrencyapplication.,NA,NA
11.2Goroutines ,NA,NA
"Basically,wecandefineourGobackgroundusinggo..<programcode>. ",NA,NA
"Forillustration,createnewproject,calledgoroutines.","$
 mkdirgoroutines 
  
 $
 cd
 goroutines",NA
"Createafile,",NA,NA
maing.go,NA,NA
",andwritethiscode.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""time"" 
  
 )
  
 func
 main(){
  
 fmt.Printf(""goroutinesdemo\n"")
  
 //runfuncinbackground 
  
 go
 calculate()
  
 index:=
 0 
  
  
 //runinbackground 
  
  
 gofunc
 (){ 
  
  
 for
 index<
 6
 { 
  
 fmt.Printf(""gofunc()index=%d\n"",index) 
  
  
 var
 result
 float64
 =
 2.5
 *
 float64
 (index) 
  
 fmt.Printf(""gofunc()result=%.2f\n"",result)
  
 time.Sleep(
 500
 *time.Millisecond) index++ 
  
 } 
  
 }() 
  
  
 //runinbackground 
  
  
 go
 fmt.Printf(""goprintedinthebackground\n"")
  
  
 //pressENTERtoexit 
  
  
 var
 input
 string 
  
 fmt.Scanln(&input) 
  
 fmt.Println(""done"")
  
 } 
  
 func
 calculate(){ 
  
 i:=
 12 
  
  
 for
 i<
 15
 { 
  
 fmt.Printf(""calculate()=%d\n"",i) 
  
  
 var
 result
 float64
 =
 8.2
 *
 float64
 (i) 
  
 fmt.Printf(""calculate()result=%.2f\n"",result)",NA
"Inthiscode,wetrytorunprograminbackgroundforfunctionsandlinesofcode.Weuse",NA,NA
gostatementtorepresentbackgroundprocess.,NA,NA
Saveall.,NA,NA
Nowyoucantesttobuildandruntheprogram.,"$
 gobuild 
  
 $
 gorunmain.go",NA
AsampleoutputcanbeseeninFigurebelow.,NA,NA
Youcanseetheprogramisrunningrandomlyduetoallcodesrunonbackground,NA,NA
(concurrency).,NA,NA
11.3SynchronizingGoroutines ,NA,NA
WecansynchronizeamongbackgroundcodesinGo.Oneofthesolutionistousesync ,NA,NA
"library.Inthissection,weusesync.Mutex.Lockandsync.Mutex.Unlockfor ",NA,NA
synchronization.,NA,NA
"Forillustration,createnewproject,calledsyncgoroutines.","$
 mkdirsyncgoroutines 
  
 $
 cd
 syncgoroutines",NA
"Createafile,",NA,NA
main.go,NA,NA
",andwritethiscode.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""sync"" 
  
 ""math/rand"" 
  
 ""time"" 
  
 )
  
 type
 Task
 struct
 { 
  
 value
 int 
  
 executedBy
 string 
  
 }
  
 var
 total
 int 
  
 var
 taskTask 
  
 var
 locksync.Mutex
  
 func
 main(){
  
 fmt.Printf(""synchronizinggoroutinesdemo\n"") total=
 0 
  
 task.value=
 0 
  
 task.executedBy="""" 
  
 display()
  
 //runbackground 
  
 go
 calculate() 
  
 go
 perform()
  
  
 //pressENTERtoexit 
  
  
 var
 input
 string 
  
 fmt.Scanln(&input) 
  
 fmt.Println(""done"") 
  
 }
  
 func
 calculate(){",NA
Saveall.,NA,NA
Nowyoucantesttobuildandruntheprogram.,"$
 gobuild 
  
 $
 gorunmain.go",NA
AsampleoutputcanbeseeninFigurebelow.,NA,NA
11.4Channels,NA,NA
WecancreatechannelsinGoandthenwecancommunicateamongGoroutinesusing ,NA,NA
"thesechannel.Forillustration,wecreateachannelwhichholdnumberdata.Toinsertdata ",NA,NA
"inchannel,wecanuse",NA,NA
channel<-,NA,NA
".Otherwise,wecangetdatafromachannelusing",NA,NA
<-,NA,NA
channel,NA,NA
.,NA,NA
"Fortesting,createnewproject,calledsimplechannel.","$
 mkdirsimplechannel 
  
 $
 cd
 simplechannel",NA
"Createafile,",NA,NA
main.go,NA,NA
",andwritethiscode.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 )
  
 func
 main(){
  
 fmt.Println(""simplechannel"")
  
 //defineachannel 
  
 c:=
 make
 (
 chan
 int
 )
  
  
 //runafunctioninbackground 
  
  
 gofunc
 (){ 
  
 fmt.Println(""goroutineprocess"")
  
 c<-
 10
 //writedatatoachannel 
 }()
  
 val:=<-c
 //readdatafromachannel 
 fmt.Printf(""value:%d\n"",val) 
  
 }",NA
Saveall.,NA,NA
Nowyoucantesttobuildandruntheprogram.,"$
 gobuild 
  
 $
 gorunmain.go",NA
AsampleoutputcanbeseeninFigurebelow.,NA,NA
12.Encoding,NA,NA
ThischapterexplainshowtoworkwithencodinginGo,NA,NA
12.1GettingStarted,NA,NA
"Inthischapter,weexploreencodingpackage,",NA,NA
http://golang.org/pkg/encoding/,NA,NA
.T,NA,NA
he followingisalistofourdemotoillustratehowtouseencodingpackage:,NA,NA
Base64 ,NA,NA
Hexadecima,NA,NA
l ,NA,NA
JSON ,NA,NA
XML ,NA,NA
CSV,NA,NA
"Fortesting,youcancreateanewproject,calledencoding.","$
 mkdirencoding 
  
 $
 cd
 encoding",NA
"Createafile,",NA,NA
main.go,NA,NA
".Firstly,weimportourGopackagesforthedemo.Writethiscode.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""encoding/base64"" 
  
 ""encoding/hex"" 
  
 ""encoding/json"" 
  
 ""encoding/xml"" 
  
 ""encoding/csv"" 
  
 ""os"" 
  
 )",NA
12.2EncodingBase64,NA,NA
Thefirstdemoistoworkwithbase64encoding.Wecanusebase64 ,NA,NA
"package,",NA,NA
http://golang.org/pkg/encoding/base64/,NA,NA
.Toencodestringtobase64string,NA,NA
",we ",NA,NA
"canuseEncodeToString().Otherwise,wecandecodeitusingDecodeString()function.",NA,NA
"Fortesting,weencodeastringmessagetobase64.Then,wedecodebase64messageto ",NA,NA
"originalmessage.Createafunction,calleddemoBase64().Callthisfunctiontomainentry.","func
 main(){
  
 message:=""hello,go(*w3hu%#"" 
  
 demoBase64(message)
  
 }
  
 func
 demoBase64(message
 string
 ){
  
 fmt.Println(""--------Demoencodingbase64--------"")
  
 fmt.Println(""plaintext:"") 
  
 fmt.Println(message)
  
 encoding:=base64.StdEncoding.EncodeToString([]
 byte
 (message)) fmt.Println(""base64msg:"") 
  
 fmt.Println(encoding)
  
 decoding,_:=base64.StdEncoding.DecodeString(encoding) 
 fmt.Println(""decodingbase64msg:"") 
  
 fmt.Println(
 string
 (decoding))
  
 }",NA
Saveall.,NA,NA
Nowyoucantesttobuildandruntheprogram.,"$
 gobuild 
  
 $
 gorunmain.go",NA
AsampleoutputcanbeseeninFigurebelow.,NA,NA
12.3Hexadecimal,NA,NA
TheseconddemoistoencodeanddecodestringtoHexademical.Wecanusehex ,NA,NA
"package,",NA,NA
http://golang.org/pkg/encoding/hex/,NA,NA
",toimplementourdemo. ",NA,NA
"Createafunction,calleddemoHex().Thefollowingisimplementationof ",NA,NA
encoding/decodingHexadecimal.,"func
 main(){ 
  
 message:=""hello,go(*w3hu%#"" 
  
 demoHex(message) 
  
 } 
  
 func
 demoHex(message
 string
 ){ 
  
 fmt.Println(""--------DemoencodingHex--------"") fmt.Println(""plaintext:"") 
  
 fmt.Println(message) 
  
 encoding:=hex.EncodeToString([]
 byte
 (message)) fmt.Println(""Hexmsg:"") 
  
 fmt.Println(encoding) 
  
 decoding,_:=hex.DecodeString(encoding) 
  
 fmt.Println(""decodingHexmsg:"") 
  
 fmt.Println(
 string
 (decoding)) 
  
 }",NA
Savethiscode.Nowyoucanbuildandrunthisprogram. ,NA,NA
AsampleoutputcanbeseeninFigurebelow.,NA,NA
12.4JSON ,NA,NA
"ThethirddemoistoconstructandparseJSONdata.InGo,wecanusejson ",NA,NA
"package,",NA,NA
http://golang.org/pkg/encoding/json/,NA,NA
".Inthisdemo,wetrytoconvertstructd",NA,NA
"ata toJSONdata.Then,wecanconvertJSOnstringtostruct.",NA,NA
"Nowyoucancreateafunction,calleddemoJson(),andwritethiscode.","func
 main(){
  
 demoJson()
  
 }
  
 func
 demoJson(){
  
 fmt.Println(""--------Demoencodingjson--------"") 
  
 type
 Employee
 struct
 { 
  
 Id
 string
 `json:""id""` 
  
 Name
 string
 `json:""name""` 
  
 Email
 string
 `json:""email""` 
  
 }
  
  
 //structtojson 
  
 fmt.Println("">>>>structtojson…."") 
  
 emp:=&Employee{Id:""12345"",Name:""Michael"",Email:""michael@email.com"" 
 b,err:=json.Marshal(emp) 
  
  
 if
 err!=
 nil
 { 
  
 fmt.Println(err) 
  
  
 return 
  
 } 
  
 fmt.Println(
 string
 (b))
  
  
 //jsonstringtostruct 
  
 fmt.Println("">>>>jsontostruct…."") 
  
  
 var
 newEmpEmployee 
  
 str:=`{""Id"":""4566"",""Name"":""Brown"",""Email"":""brown@email.com""}` 
 json.Unmarshal([]
 byte
 (str),&newEmp) 
  
 fmt.Printf(""Id:%s\n"",newEmp.Id) 
  
 fmt.Printf(""Name:%s\n"",newEmp.Name) 
  
 fmt.Printf(""Email:%s\n"",newEmp.Email) 
  
 }",NA
Savethiscode.Nowyoucanbuildandrunthisprogram. ,NA,NA
AsampleoutputcanbeseeninFigurebelow.,NA,NA
12.5XML,NA,NA
ThefourthdemoistoreadandwriteXMLdata.Wexml ,NA,NA
"package,",NA,NA
http://golang.org/pkg/encoding/xml/,NA,NA
".Inthisdemo,weconstructXMLfrom",NA,NA
a structwhichhasnestedstruct.InXMLdatanestedstructcanbeconvertedtoXML ,NA,NA
attributeandvalue.,NA,NA
"Nowyoucancreateafunction,calleddemoXml(),andwritethiscode.","func
 main(){
  
 demoXml()
  
 }
  
 func
 demoXml(){
  
 fmt.Println(""--------Demoencodingxml--------"") 
  
  
 type
 EmployeeCountry
 struct
 { 
  
 CountryCode
 string
 `xml:""code,attr""`
 //XMLattribute:code 
 CountryName
 string
 `xml:"",chardata""`
 //XMLvalue 
 } 
  
  
 type
 Employee
 struct
 { 
  
 XMLNamexml.Name`xml:""employee""` 
  
 Id
 string
 `xml:""id""` 
  
 Name
 string
 `xml:""name""` 
  
 Email
 string
 `xml:""email""` 
  
 CountryEmployeeCountry`xml:""country""` 
  
 }
  
  
 //structtoxml 
  
 fmt.Println("">>>>structtoxml…."") 
  
 emp:=&Employee{Id:""12345"",Name:""Michael"",Email:""michael@email.com"" 
 Country:EmployeeCountry{CountryCode:""DE"",CountryName: b,err:=xml.Marshal(emp) 
  
  
 if
 err!=
 nil
 { 
  
 fmt.Println(err) 
  
  
 return 
  
 } 
  
 fmt.Println(
 string
 (b))
  
  
 //xmlstringtostruct 
  
 fmt.Println("">>>>xmltostruct…."") 
  
  
 var
 newEmpEmployee 
  
 str:=`<employee><id>555</id><name>Lee</name><email>lee@email.com</email 
 xml.Unmarshal([]
 byte
 (str),&newEmp) 
  
 fmt.Printf(""Id:%s\n"",newEmp.Id) 
  
 fmt.Printf(""Name:%s\n"",newEmp.Name) 
  
 fmt.Printf(""Email:%s\n"",newEmp.Email) 
  
 fmt.Printf(""CountryCode:%s\n"",newEmp.Country.CountryCode) 
  
 fmt.Printf(""CountryName:%s\n"",newEmp.Country.CountryName)",NA
Savethiscode.Nowyoucanbuildandrunthisprogram.,NA,NA
AsampleoutputcanbeseeninFigurebelow.,NA,NA
12.6CSV,NA,NA
ThelastdemoistoreadandwritedataCSVwhichisacollectionofcomma-separated ,NA,NA
"data.WecanaccessCSVfileusingcsvpackage,",NA,NA
http://golang.org/pkg/encoding/csv/,NA,NA
. ,NA,NA
"Fortesting,wehaveaCSVfile,",NA,NA
demo.csv,NA,NA
",withthefollowingcontent.","Employee1;employee1@email.com;DE 
  
 Employee2;employee2@email.com;UK 
  
 Employee3;employee3@email.com;UK 
  
 Employee4;employee4@email.com;NL 
  
 Employee5;employee5@email.com;US 
  
 Employee6;employee6@email.com;JP 
  
 Employee7;employee7@email.com;DE",NA
"Createafunction,demoCsv().ThisfunctionwillreadCSVfile,demo.csv,andconvert ",NA,NA
"thesedatatoarrayofstruct.Afterthat,wewritearrayofstructtoanewCSVfile,called ",NA,NA
employee.csv,NA,NA
.,NA,NA
Thefollowingisimplementationofreading/writingCSVfile.,"func
 main(){
  
 demoCsv()
  
 }
  
 func
 demoCsv(){
  
 fmt.Println(""--------Demoencodingcsv--------"") 
  
 type
 Employee
 struct
 { 
  
 Name
 string 
  
 Email
 string 
  
 Country
 string 
  
 }",NA
Note:YoucanchangeCSVfilepath.,NA,NA
Savethiscode.Nowyoucanbuildandrunthisprogram. ,NA,NA
AsampleoutputcanbeseeninFigurebelow.,NA,NA
Ifyouopen,NA,NA
employee.csv,NA,NA
",yougetacontentofemployeedatalikeacontentof",NA,NA
demo.csv ,NA,NA
file.,NA,NA
13.HashingandCryptography,NA,NA
ThischapterexplainshowtoworkwithhashingandcryptographyinGo,NA,NA
13.1GettingStarted,NA,NA
Hashingisgeneratingavalueorvaluesfromastringoftextusingamathematical ,NA,NA
function.Cryptographyisthepracticeandstudyoftechniquesforsecurecommunication ,NA,NA
"inthepresenceofthirdparties(calledadversaries), ",NA,NA
http://en.wikipedia.org/wiki/Cryptography,NA,NA
".Inthischapter,Idon’texplainmathemati",NA,NA
cal hashingandCryptography.Youcanreadthosematerialsontextbooks.,NA,NA
"Inthischapter,weexplorehowtoworkwithhashingimplementationusingGo.The ",NA,NA
followingishashingalgorithmswhichweuseinthisbook:,NA,NA
MD5 ,NA,NA
SHA256,NA,NA
HashingwithKey(HMAC),NA,NA
ThenexttopicistoimplementCryptographyusingGo.Weexploresymmetricand ,NA,NA
asymmetricCryptography.,NA,NA
"Firstly,wecancreateanewproject,calledcryptodemo.","$
 mkdircryptodemo 
  
 $
 cd
 cryptodemo",NA
"Createafile,",NA,NA
main.go,NA,NA
".Firstly,weimportourGopackagesforthedemo.Writethiscode.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""crypto/md5"" 
  
 ""crypto/sha256"" 
  
 ""crypto/hmac"" 
  
 ""crypto/aes"" 
  
 ""crypto/rsa"" 
  
 ""crypto/cipher"" 
  
 ""crypto/rand"" 
  
 ""crypto/x509"" 
  
 ""encoding/hex"" 
  
 ""encoding/base64"" 
  
 ""encoding/pem"" 
  
 ""io"" 
  
 ""io/ioutil"" 
  
 )",NA
Let’sstarttoexplorehashingandcryptographyusingGo.,NA,NA
13.2Hashing,NA,NA
"Basically,youcanexplorehowtoimplementhashingorhashfunctionusingGo ",NA,NA
via,NA,NA
http://golang.org/pkg/crypto/,NA,NA
".Inthissection,weexploreseveralhashingalgorith",NA,NA
"ms, forinstance,MD5,SHA256andHMAC.",NA,NA
13.2.1HashingwithMD5,NA,NA
"WecanuseMD5usingmd5package,",NA,NA
http://golang.org/pkg/crypto/md5/,NA,NA
.Tocalculat,NA,NA
"ea hashvaluefromatext,wecancallSum()function.",NA,NA
"Forillustration,wecreateafunction,demoHash_md5(),andwritethiscode.","func
 demoHash_md5(){
  
 fmt.Println(""--------Demoencodinghashusingmd5--------"")
  
 message:=""Helloworld,go!"" 
  
 fmt.Println(""plaintext:"") 
  
 fmt.Println(message)
  
 h:=md5.New() 
  
 h.Write([]
 byte
 (message)) 
  
 hash_message:=hex.EncodeToString(h.Sum(
 nil
 )) 
 fmt.Println(""hashingmessage:"") 
  
 fmt.Println(hash_message)
  
 }",NA
13.2.2HashingwithSHA256,NA,NA
TheseconddemoistoimplementhashfunctionusingSHA256.Goprovidessha256 ,NA,NA
"package,",NA,NA
http://golang.org/pkg/crypto/sha256/,NA,NA
",toimplementhashfunctionusingSHA",NA,NA
256.,NA,NA
"Forillustration,wecreateafunction,demoHash_sha256(),andwritethiscode.",NA,NA
13.2.3HashingwithKeyUsingHMAC,NA,NA
Akeyed-hashmessageauthenticationcode(HMAC)isaspecificconstructionfor ,NA,NA
calculatingamessageauthenticationcode(MAC)involvingacryptographichashfunction ,NA,NA
"incombinationwithasecretcryptographickey,",NA,NA
http://en.wikipedia.org/wiki/Hash-,NA,NA
based_message_authentication_code,NA,NA
".InGo,wecanhmac ",NA,NA
"package,",NA,NA
http://golang.org/pkg/crypto/hmac/,NA,NA
",toimplementHMACalgorithm.",NA,NA
"Forillustration,wecreateafunction,demoHashKey(),andwritethiscode.","func
 demoHashKey(key,message
 string
 ){
  
 fmt.Println(""key:"") 
  
 fmt.Println(key) 
  
 fmt.Println(""plaintext:"") 
  
 fmt.Println(message)
  
 hmacKey:=[]
 byte
 (key) 
  
 h:=hmac.New(sha256.New,hmacKey) 
  
 h.Write([]
 byte
 (message)) 
  
 hash_message:=hex.EncodeToString(h.Sum(
 nil
 )) 
 fmt.Println(""hashingmessage:"") 
  
 fmt.Println(hash_message)
  
 }
  
 fmt.Println(""--------Demoencodinghashwithkey:HMACandsha256--------",NA
13.2.4Testing,NA,NA
"Saveallcodeforourdemoonsection13.2.1,13.2.2and13.2.3.Totesting,wecallthese ",NA,NA
functionsinmainentry.Writethiscode.,"func
 main(){ 
  
 demoHash_md5() 
  
 demoHash_sha256() 
  
 demoHashKey(""mykey"",""Helloworld,go!"") }",NA
Saveall.,NA,NA
Nowyoucantesttobuildandruntheprogram.,"$
 gobuild 
  
 $
 gorunmain.go",NA
AsampleoutputcanbeseeninFigurebelow.,NA,NA
13.3Cryptography,NA,NA
"Inthissection,wefocusSymmetricandAsymmetricCryptography.InSymmetric ",NA,NA
"Cryptography,weusethesamekeytoencryptanddecrypt.Otherwise,Asymmetric ",NA,NA
Cryptographyusesdifferentkeytoencryptanddecrypt.,NA,NA
Weexploretheseonthenextsection.,NA,NA
13.3.1SymmetricCryptography,NA,NA
"TherearemanyalgorithmstoimplementSymmetricCryptography.Inthissection,weuse ",NA,NA
AESalgorithm.TheAdvancedEncryptionStandard(AES)isaspecificationforthe ,NA,NA
encryptionofelectronicdataestablishedbytheU.S.NationalInstituteofStandardsand ,NA,NA
Technology(NIST)in ,NA,NA
"2001,",NA,NA
http://en.wikipedia.org/wiki/Advanced_Encryption_Standard,NA,NA
.,NA,NA
"Forillustration,wecreatetwofunctions,encrypt_symmetric_crpyto()an",NA,NA
d decrypt_symmetric_crpyto().Thefollowingisimplementationof ,NA,NA
encrypt_symmetric_crpyto().,"func
 encrypt_symmetric_crpyto(key,message
 string
 )
 string
 {
  
 fmt.Println(""--------Demoencryptencrypt_symmetric_crpyto--------"") 
  
 if
 len
 (key)!=
 16
 &&
 len
 (key)!=
 24
 &&
 len
 (key)!=
 32
 { 
  
 fmt.Println(""keymust16,24,32bytelength"") 
  
  
 return
 """" 
  
 } 
  
 bc,err:=aes.NewCipher([]
 byte
 (key)) 
  
  
 if
 err!=
 nil
 { 
  
  
 panic
 (err) 
  
 } 
  
 text:=[]
 byte
 (message)
  
 ciphertext:=
 make
 ([]
 byte
 ,aes.BlockSize+
 len
 (text)) iv:=ciphertext[:aes.BlockSize] 
  
  
 if
 _,err:=io.ReadFull(rand.Reader,iv);err!=
 nil
 { 
  
 panic
 (err) 
  
 } 
  
 cfb:=cipher.NewCFBEncrypter(bc,iv) 
  
 cfb.XORKeyStream(ciphertext[aes.BlockSize:],text)
  
  
 return
 base64.StdEncoding.EncodeToString(ciphertext) }",NA
Explanation:,NA,NA
"Defineakey.Itshouldbe16,24,or32keylength",NA,NA
InstantiateAESusingNewCipher()withpassingkeyvalue ,NA,NA
CalculateIVvalue ,NA,NA
EncryptmessageinarrayofbyteformatbycallingNewCFBEncrypter() ,NA,NA
Theresultisbeencodedtobase64string,NA,NA
Thefollowingisimplementationofencrypt_symmetric_crpyto().,"func
 decrypt_symmetric_crpyto(key,message
 string
 )
 string
 {
  
 fmt.Println(""--------Demodecryptdecrypt_symmetric_crpyto--------"") 
  
 if
 len
 (key)!=
 16
 &&
 len
 (key)!=
 24
 &&
 len
 (key)!=
 32
 { 
  
 fmt.Println(""keymust16,24,32bytelength"") 
  
  
 return
 """" 
  
 } 
  
 encrypted,_:=base64.StdEncoding.DecodeString(message)
  
 bc,err:=aes.NewCipher([]
 byte
 (key)) 
  
 if
 err!=
 nil
 { 
  
  
 panic
 (err) 
  
 } 
  
  
 if
 len
 (encrypted)<aes.BlockSize{ 
  
 panic
 (""ciphertexttooshort"") 
  
 } 
  
 iv:=encrypted[:aes.BlockSize] 
  
 encrypted=encrypted[aes.BlockSize:] 
 cfb:=cipher.NewCFBDecrypter(bc,iv) 
 cfb.XORKeyStream(encrypted,encrypted)
  
  
 return
 string
 (encrypted) 
  
 }",NA
Explanation:,NA,NA
"Defineakey.Itshouldbe16,24,or32keylength ",NA,NA
InstantiateAESusingNewCipher()withpassingkeyvalue ,NA,NA
CalculateIVvalue ,NA,NA
EncryptmessageinarrayofbyteformatbycallingNewCFBDecrypter() ,NA,NA
Theresultisbeencodedtostring,NA,NA
Nowwecancallthesefunctionsinmainentry.Writethiscode.,"func
 main(){ 
  
  
 //symmetriccrypto 
  
 key:=""thisiskey1234"" 
  
 message:=""Helloworld,go!"" 
  
 encrypted:=encrypt_symmetric_crpyto(key,message)",NA
Nowyoucanbuildandrunit.AsampleoutputcanbeseeninFigurebelow.,NA,NA
13.3.2AsymmetricCryptography,NA,NA
ThecommonalgorithmtoimplementAsymmetricCryptographyisRSAwhichiswidely ,NA,NA
usedforsecuredatatransmission.Youreadabriefdescriptionin ,NA,NA
"Wikipedia,",NA,NA
http://en.wikipedia.org/wiki/RSA_(cryptosystem),NA,NA
.,NA,NA
"GohaslibraryforRSAimplementation.Inthissection,wetrytoimplementRSAusing ",NA,NA
Go.Thefollowingisourscenario:,NA,NA
GenerateRSAkeys(publicandprivatekeys),NA,NA
Savethesekeystotwofiles(publicandprivatekeyfiles) ,NA,NA
"Forencryption,weusepublickeyfile ",NA,NA
"Fordecryption,weuseprivatekeyfile",NA,NA
WestorepublicandprivatekeysintoafileinPEMdataencoding.Wecanusepem ,NA,NA
"packagefromGo,",NA,NA
http://golang.org/pkg/encoding/pem/,NA,NA
.,NA,NA
"TogeneratepublicandprivatekeysforRSA,wecreateafunction,generateRSAkeys(). ",NA,NA
"Aftergeneratedkeys,wesavethesekeystofiles.Thefollowingisimplementationfor ",NA,NA
generatingkeys.,"func
 generateRSAkeys(){ 
  
 fmt.Println(""GeneratingRSAkeys…."")
  
 //changefilesandtheirpaths 
  
 privKeyFile:=""D:/PE_PRESS/eBook/go_prog/codes/src/cryptodemo/private.rs 
 pubKeyFile:=""D:/PE_PRESS/eBook/go_prog/codes/src/cryptodemo/public.rsa.
  
  
 //generateRSAkeys 
  
 privateKey,err:=rsa.GenerateKey(rand.Reader,
 1024
 ) 
  
 if
 err!=
 nil
 { 
  
  
 panic
 (err) 
  
 }
  
  
 //extractprivateandpublickeysfromRSAkeys 
  
 privASN1:=x509.MarshalPKCS1PrivateKey(privateKey) 
  
 pubASN1,err:=x509.MarshalPKIXPublicKey(&privateKey.PublicKey) 
  
 if
 err!=
 nil
 { 
  
  
 panic
 (err) 
  
 }
  
 //storeprivateandpublickeysintofiles 
 privBytes:=pem.EncodeToMemory(&pem.Block{ 
 Type:""RSAPRIVATEKEY"", 
  
 Bytes:privASN1, 
  
 })
  
 pubBytes:=pem.EncodeToMemory(&pem.Block{ 
 Type:""RSAPUBLICKEY"", 
  
 Bytes:pubASN1, 
  
 })
  
 ioutil.WriteFile(privKeyFile,privBytes,
 0644
 ) 
 ioutil.WriteFile(pubKeyFile,pubBytes,
 0644
 ) fmt.Println(""Done"")
  
 }",NA
"Thiscodewillgeneratetwofiles,private.rsa.keyandpublic.rsa.keyfiles.",NA,NA
"Toencryptdata,wecreateafunction,encrypt_asymmetric_crypto().Firstly,weload ",NA,NA
"publickey.Then,encryptthemessageusingRSA.Thefollowingiscodeimplementation ",NA,NA
forencrypt_asymmetric_crypto()function.,"func
 encrypt_asymmetric_crypto(message
 string
 )
 string
 {
  
 fmt.Println(""--------Demoencryptencrypt_asymmetric_crypto--------""
  
 //publickeyfile
  
  
 //readpublickeyfromfile 
  
 pubBytes,err:=ioutil.ReadFile(pubKeyFile) 
  
 if
 err!=
 nil
 { 
  
  
 panic
 (err) 
  
 }
  
 pubBlock,_:=pem.Decode(pubBytes) 
  
  
 if
 pubBlock==
 nil
 { 
  
 fmt.Println(""Failedtoloadpublickeyfile"") 
  
 return
 """" 
  
 }
  
  
 //DecodetheRSApublickey 
  
 publicKey,err:=x509.ParsePKIXPublicKey(pubBlock.Bytes) 
  
 if
 err!=
 nil
 { 
  
 fmt.Printf(""badpublickey:%s"",err) 
  
  
 return
 """" 
  
 }
  
 //encryptmessage 
  
 msg:=[]
 byte
 (message)
  
  
 if
 err!=
 nil
 { 
  
  
 panic
 (err) 
  
 }
  
  
 return
 base64.StdEncoding.EncodeToString(encryptedmsg) }
  
 encryptedmsg,err:=rsa.EncryptPKCS1v15(rand.Reader,publicKey.(*rsa.Pub",NA
"Todecryptdata,wecreateafunction,decrypt_asymmetric_crypto().Firstly,weload ",NA,NA
"privatekey.Then,decryptthemessageusingRSA.Thefollowingiscodeimplementation ",NA,NA
fordecrypt_asymmetric_crypto()function.,"func
 decrypt_asymmetric_crypto(message
 string
 )
 string
 { 
  
 fmt.Println(""--------Demodecryptdecrypt_asymmetric_crypto--------"" 
  
 //privatekeyfile
  
 privKeyFile:=""D:/PE_PRESS/eBook/go_prog/codes/src/cryptodemo/private.rs",NA
Saveall.Nowyoucanimplementourfunctionstomainentry.Writethiscode.,"func
 main(){ 
  
  
 //asymmetriccrypto 
  
 generateRSAkeys() 
  
 plainText:=""Helloworld,go!"" 
  
 fmt.Println(""plainText:"") 
  
 fmt.Println(plainText) 
  
 rsa_encrypted:=encrypt_asymmetric_crypto(plainText) fmt.Println(""encrypted:"") 
  
 fmt.Println(rsa_encrypted) 
  
 rsa_decrypted:=decrypt_asymmetric_crypto(rsa_encrypted) fmt.Println(""decrypted:"") 
  
 fmt.Println(rsa_decrypted) 
  
 }",NA
Nowyoucanbuildandrunit.AsampleoutputcanbeseeninFigurebelow.,NA,NA
Youcanopenpublic.rsa.keytoseeourRSApublickeyvalue.,NA,NA
Youcanalsoopenprivate.rsa.keytoseeourRSAprivatekeyvalue.,NA,NA
14.DatabaseProgramming,NA,NA
ThischapterexplainshowtobuilddatabaseapplicationusingGo.,NA,NA
14.1DatabaseforGo ,NA,NA
Gocancommunicatewithdatabaseserverthroughdatabasedriver.Goprovidesgeneric ,NA,NA
interfacesfordatabasedriveon,NA,NA
http://golang.org/pkg/database/,NA,NA
.Wemustinstalldata,NA,NA
base driverandGodatabasepackagebeforewestarttodevelopdatabaseapplication.,NA,NA
"Inthischapter,IonlyfocusonMySQLscenario.",NA,NA
14.2MySQLDriverforGo ,NA,NA
"WeuseGo-MySQL-Driverfordatabasedriver.Furtherinformationaboutthisdriver, ",NA,NA
pleasevisiton,NA,NA
https://github.com/go-sql-driver/mysql,NA,NA
.,NA,NA
"ToinstallGo-MySQL-Driver,youcantrytowritethiscommandinterminal","$
 gogetgithub.com/go-sql-driver/mysql",NA
"Afterfinished,wecandotesting.",NA,NA
14.3TestingConnection,NA,NA
"Inthissection,wetrytoconnectMySQLdatabase.Firstly,wecancreateanewproject, ",NA,NA
calledmysqldemo.,"$
 mkdirmysqldemo 
  
 $
 cd
 mysqldemo",NA
"Createafile,",NA,NA
main.go,NA,NA
".Firstly,weimportourGopackagesforthedemo.Writethiscode.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""database/sql"" 
  
 _""github.com/go-sql-driver/mysql"" )",NA
"Firstly,wecanstarttocreatesimpleGoapplicationtoconnecttomysqldatabase.Write ",NA,NA
thiscode,"func
 main(){ 
  
 testConnection() 
  
 }
  
 func
 testConnection(){ 
  
  
 //changedatabaseuserandpassword
  
  
 if
 err!=
 nil
 { 
  
  
 panic
 (err) 
  
 } 
  
 err=db.Ping()
 //testconnection 
  
 if
 err!=
 nil
 { 
  
  
 panic
 (err.Error()) 
  
 } 
  
 fmt.Println(""connected"") 
  
  
 defer
 db.Close() 
  
 }
  
 db,err:=sql.Open(""mysql"",
 string
 (""user:password@tcp(127.0.0.1:3306)/res",NA
"changehost,user,andpasswordbasedonyourmysqldatabaseconfigurationand ",NA,NA
authentication.,NA,NA
Saveall.,NA,NA
Nowyoucantesttobuildandruntheprogram.,"$
 gobuild 
  
 $
 gorunmain.go",NA
AsampleoutputcanbeseeninFigurebelow.,NA,NA
14.4Querying,NA,NA
"Inthissection,wetrytoinsertdataintoatable.Thefollowingisourtableschemeon ",NA,NA
MySQL.,NA,NA
HereissamplecodetoinsertdataintomysqldatabaseusingGo.,"func
 main(){ 
  
 insertData()
  
 }
  
 func
 insertData(){
  
  
 if
 err!=
 nil
 { 
  
  
 panic
 (err) 
  
 } 
  
 err=db.Ping()
 //testconnection 
  
 if
 err!=
 nil
 { 
  
  
 panic
 (err.Error()) 
  
 } 
  
 fmt.Println(""connected"")
  
 //preparedevelopment
  
  
 if
 err!=
 nil
 { 
  
  
 panic
 (err) 
  
 } 
  
  
 defer
 stmt.Close() 
  
 fmt.Println(""insertingdata…"") 
  
  
 for
 i:=
 0
 ;i<
 10
 ;i++{
  
  
 if
 err!=
 nil
 { 
  
  
  
 panic
 (err) 
  
 } 
  
 } 
  
 fmt.Println(""done"") 
  
  
 defer
 db.Close()
  
 }
  
 stmt,err:=db.Prepare(""INSERTINTOsensordevice(deviceid,temperature,hu",NA
"Afterfinished,wecandotesting.",NA,NA
Youcanverifythisdataintoyourtable.,NA,NA
15.SocketProgramming,NA,NA
ThischapterexplainshowtocreatesocketapplicationusingGo.,NA,NA
15.1SocketModule ,NA,NA
Wecancreateapplicationbasedonsocketstackusingnetpackage.Youcanfinditfor ,NA,NA
furtherinformationon,NA,NA
http://golang.org/pkg/net/,NA,NA
.Irecommendyoutoreadsomebook,NA,NA
sor websitesabouttheconceptofsocket.,NA,NA
15.2HelloWorld,NA,NA
"Togetstarted,wecreateasimpleapplicationtogetalistofIPAddressinlocalcomputer. ",NA,NA
Wecanusenetpackageandcall,NA,NA
Interfaces(),NA,NA
togetalistofnetworkinterfacesinourlocal ,NA,NA
computer.EachnetworkinterfaceprovidesinformationaboutIPaddress.,NA,NA
"Inthissection,wetrytogetlocalIPAddress.Firstly,wecancreateanewproject,called ",NA,NA
netdemo.,"$
 mkdirnetdemo 
  
 $
 cd
 netdemo",NA
"Createafile,",NA,NA
main.go,NA,NA
".Then,writethiscode.","package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""net"" 
  
 )
  
 func
 main(){ 
  
 ifaces,err:=net.Interfaces() 
  
  
 if
 err!=
 nil
 { 
  
  
 panic
 (err) 
  
 }
  
 fmt.Println(""gettinglocalIPAddress…"") 
  
 for
 _,i:=
 range
 ifaces{ 
  
 addrs,err:=i.Addrs() 
  
  
 if
 err!=
 nil
 { 
  
  
  
 panic
 (err) 
  
 } 
  
  
 for
 _,addr:=
 range
 addrs{ 
  
  
  
 switch
 v:=addr.(
 type
 ){ 
  
  
  
  
  
 case
 *net.IPAddr: 
  
  
  
  
  
  
 if
 v.String()!=""0.0.0.0""{ 
 fmt.Println(v.String()) } 
  
 } 
  
 } 
  
 } 
  
 }",NA
Savethiscode.Trytobuildandrunit.,NA,NA
ThefollowingisasampleprogramoutputwhichrunsonWindows:,NA,NA
15.3Client/ServerSocket,NA,NA
Nowwecreateaclient/serversocketusingGo.Wewillusenetpackagetobuild ,NA,NA
"client/serverapplication.Forillustration,wecreateserverandclient.",NA,NA
15.3.1ServerSocket,NA,NA
Howtocreateserversocket?Itiseasy.Thefollowingisasimplealgorithmhowtobuild ,NA,NA
serversocket,NA,NA
createserversocket ,NA,NA
listenincomingclientonthespecificport ,NA,NA
"ifclientconnected,listenincomingdataandthendisconnectfromclient",NA,NA
"Inthissection,webuildserverapp.Firstly,wecancreateanewproject,callednetserver.","$
 mkdirnetserver 
  
 $
 cd
 netserver",NA
"Createafile,",NA,NA
main.go,NA,NA
.Writethiscode.,"package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""net"" 
  
 ""os"" 
  
 )
  
 const
 ( 
  
 SVR_HOST=""localhost"" 
  
 SVR_PORT=""9982"" 
  
 SVR_TYPE=""tcp"" 
  
 )
  
 func
 main(){ 
  
 fmt.Println(""serverisrunning"") 
  
 svr,err:=net.Listen(SVR_TYPE,SVR_HOST+"":""+SVR_PORT) 
  
 if
 err!=
 nil
 { 
  
 fmt.Println(""Errorlistening:"",err.Error()) 
  
 os.Exit(
 1
 ) 
  
 } 
  
  
 defer
 svr.Close() 
  
 fmt.Println(""Listeningon""+SVR_HOST+"":""+SVR_PORT) fmt.Println(""Waitingclient…"")
  
 for
 {",NA
Itusesport9982.Youcanchangeit.,NA,NA
15.3.2ClientSocket ,NA,NA
Clientsocketisclientapplicationthatconnectstoserverandthensends/receivesdata,NA,NA
from/toserver.WeshouldknowaboutIPaddressandportfromtargetserver.Wecancall,NA,NA
Dial(),NA,NA
toconnecttoserver.Use,NA,NA
Write(),NA,NA
forsendingdata.,NA,NA
"Inthissection,webuildclientapp.Firstly,wecancreateanewproject,callednetclient.","$
 mkdirnetclient 
  
 $
 cd
 netclient",NA
"Createafile,",NA,NA
main.go,NA,NA
.Writethiscode.,"package
 main
  
 import
 ( 
  
 ""fmt"" 
  
 ""net"" 
  
 )
  
 const
 ( 
  
 SVR_HOST=""localhost"" 
  
 SVR_PORT=""9982""",NA
15.3.3Testing,NA,NA
"Nowwecantestourclient/serverapplication.Firstly,werunserverapplicationandthen ",NA,NA
executeclientapplication.,NA,NA
Hereissampleofprogramoutputforserverapplication:,NA,NA
Hereissampleofprogramoutputforclientapplication:,NA,NA
SourceCode,NA,NA
Youcandownloadsourcecodeon,NA,NA
http://www.aguskurniawan.net/book/go_cd.zi,NA,NA
p,NA,NA
.,NA,NA
Contact,NA,NA
"Ifyouhavequestionrelatedtothisbook,pleasecontactmeataguskur@hotmail.com.My",NA,NA
blog:,NA,NA
http://blog.aguskurniawan.net,NA,NA
