Larger Text,Smaller Text,Symbol
So You Want to Learn to ,NA,NA
Program?,NA,NA
"James M. Reneau, M.S.",NA,NA
Assistant Professor ,NA,NA
Shawnee State University ,NA,NA
Portsmouth  Ohio  USA,NA,NA
http://www.basicbook.org,NA,NA
James M. Reneau ,NA,NA
P.O. Box 278 ,NA,NA
"Russell, Kentucky  41169-2078  ",NA,NA
USA,NA,NA
Book Version: 20101113a ,NA,NA
For BASIC-256 Version 0.9.6.48 or ,NA,NA
later,NA,NA
Table of Contents,NA,NA
Chapter 1: Meeting BASIC-256 – Say ,NA,NA
Hello..........1 ,NA,NA
The BASIC-256 ,NA,NA
Window:.........................................................1 ,"Menu 
 Bar:............................................................................................2 
 Tool 
 Bar:..............................................................................................2 
 Program 
 Area:.....................................................................................3 Text 
 Output Area:................................................................................3 
 Graphics Output 
 Area:.........................................................................3",NA
Your first ,NA,NA
program – The say statement:................................3 BASIC-,NA,NA
256 is really good with numbers – Simple Arithmetic:. 7 ,NA,NA
Another use for + ,NA,NA
(Concatenation):.......................................9 The text output ,NA,NA
area - The print statement:.........................10 What is a ,NA,NA
“Syntax error”:.....................................................12,NA,NA
Chapter 2: Drawing Basic Shapes....................13 ,NA,NA
Drawing ,NA,NA
Rectangles ,NA,NA
and ,NA,NA
Circles:..........................................13 ,NA,NA
Saving ,NA,NA
Your ,NA,NA
Program and Loading it Back:...........................23 Drawing ,NA,NA
with ,NA,NA
Lines:..............................................................23 ,NA,NA
Setting ,NA,NA
Individual ,NA,NA
Points ,NA,NA
on ,NA,NA
the ,NA,NA
Screen:...............................26,NA,NA
Chapter 3: Sound and Music............................31 ,NA,NA
Sound ,NA,NA
Basics ,NA,NA
– ,NA,NA
Things ,NA,NA
you ,NA,NA
need ,NA,NA
to ,NA,NA
know ,NA,NA
about ,NA,NA
sound:........31 ,NA,NA
Numeric ,NA,NA
Variables:...............................................................36,NA,NA
Chapter 4: Thinking Like a Programmer...........41 ,NA,NA
Pseudocode:......................................................................,NA,NA
..41 ,NA,NA
Flowcharting:.....................................................................,NA,NA
..44 ,"Flowcharting Example 
 One:...............................................................45 Flowcharting 
 Example Two:...............................................................46",NA
Chapter 5: Your Program Asks for Advice.........49 ,NA,NA
Another Type of Variable – The String ,NA,NA
Variable:...................49,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Input – Getting Text or Numbers From the ,NA,NA
User:..................50,NA,NA
"Chapter 6: Decisions, Decisions, Decisions.......57 ",NA,NA
True ,NA,NA
and ,NA,NA
False:....................................................................57 ,NA,NA
Comparison ,NA,NA
Operators:........................................................57 Making ,NA,NA
Simple Decisions – The If Statement:.......................59 ,NA,NA
Random ,NA,NA
Numbers:...............................................................61 ,NA,NA
Logical ,NA,NA
Operators:................................................................62 ,NA,NA
Making ,NA,NA
Decisions ,NA,NA
with ,NA,NA
Complex ,NA,NA
Results ,NA,NA
– ,NA,NA
If/End ,NA,NA
If:..............65 ,NA,NA
Deciding ,NA,NA
Both ,NA,NA
Ways ,NA,NA
– ,NA,NA
If/Else/End ,NA,NA
If:.....................................67 ,NA,NA
Nesting ,NA,NA
Decisions:...............................................................68,NA,NA
Chapter 7: Looping and Counting - Do it Again ,NA,NA
and Again.......................................................71 ,NA,NA
The For ,NA,NA
Loop:.......................................................................71 Do ,NA,NA
Something Until I Tell You To Stop:.................................75 ,NA,NA
Do Something While I Tell You To Do ,NA,NA
It:...............................77 Fast ,NA,NA
Graphics:......................................................................79,NA,NA
Chapter 8: Custom Graphics – Creating Your Own ,NA,NA
Shapes...........................................................85 ,NA,NA
Fancy Text for Graphics ,NA,NA
Output:..........................................85 Resizing the Graphics ,NA,NA
Output Area:.....................................88 Creating a Custom ,NA,NA
Polygon:.................................................90 Stamping a ,NA,NA
Polygon:............................................................92,NA,NA
Chapter 9: Subroutines – Reusing Code..........101 ,NA,NA
Labels ,NA,NA
and ,NA,NA
Goto:................................................................101 ,NA,NA
Reusing ,NA,NA
Blocks ,NA,NA
of ,NA,NA
Code ,NA,NA
– ,NA,NA
The ,NA,NA
Gosub ,NA,NA
Statement:...............104,NA,NA
Chapter 10: Mouse Control – Moving Things ,NA,NA
Around.........................................................111 ,NA,NA
Tracking ,NA,NA
Mode:..................................................................111 ,NA,NA
Clicking ,NA,NA
Mode:....................................................................113,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 11: Keyboard Control – Using the ,NA,NA
Keyboard to Do Things..................................121 ,NA,NA
Getting the Last Key ,NA,NA
Press:................................................121,NA,NA
"Chapter 12: Images, WAVs, and Sprites.........129 ",NA,NA
Images ,NA,NA
From ,NA,NA
a ,NA,NA
File:............................................................129 ,NA,NA
Playing ,NA,NA
Sounds From a WAV file:........................................132 ,NA,NA
Moving ,NA,NA
Images ,NA,NA
- ,NA,NA
Sprites:....................................................135,NA,NA
Chapter 13: Arrays – Collections of Information. ,NA,NA
....................................................................145 ,NA,NA
One-Dimensional Arrays of ,NA,NA
Numbers:................................145 Arrays of ,NA,NA
Strings:...............................................................151 ,NA,NA
Assigning ,NA,NA
Arrays:...............................................................152 Sound ,NA,NA
and Arrays:..............................................................153 ,NA,NA
Graphics and ,NA,NA
Arrays:..........................................................155 Advanced ,NA,NA
- Two Dimensional Arrays:.................................158 Really ,NA,NA
Advanced - Array Sizes:...........................................159 ,NA,NA
Really Really Advanced - Resizing ,NA,NA
Arrays:..........................161,NA,NA
Chapter 14: Mathematics – More Fun With ,NA,NA
Numbers......................................................167 ,NA,NA
New ,NA,NA
Operators:..................................................................167 ,NA,NA
Modulo ,NA,NA
Operator:...............................................................167 ,NA,NA
Integer Division ,NA,NA
Operator:..................................................170 ,NA,NA
Power ,NA,NA
Operator:.................................................................171 ,NA,NA
New Integer ,NA,NA
Functions:......................................................173 ,NA,NA
New ,NA,NA
Floating Point Functions:............................................175 ,NA,NA
Advanced - Trigonometric ,NA,NA
Functions:.................................175 ,"Cosine:.........................................................................................
 ....177 
  
 Sine:............................................................................................
 ....177 
  
 Tangent:.......................................................................................
 ...178 
  
 Degrees 
 Function:...........................................................................178 
  
 Radians 
 Function:............................................................................179
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 15: Working with Strings..................187 ,NA,NA
The String ,NA,NA
Functions:.........................................................187 ,"String() 
 Function:.............................................................................188 
 Length() 
 Function:...........................................................................189 Left(), 
 Right() and Mid() Functions:..................................................190 
 Upper() and Lower() 
 Functions:.......................................................191 Instr() 
 Function:...............................................................................192",NA
Chapter 16: Files – Storing Information For Later. ,NA,NA
....................................................................197 ,NA,NA
Reading Lines From a ,NA,NA
File:.................................................197 Writing Lines to a ,NA,NA
File:.......................................................201 Read() ,NA,NA
Function and Write Statement:...............................205,NA,NA
"Chapter 17: Stacks, Queues, Lists, and Sorting ",NA,NA
....................................................................209 ,NA,NA
Stack:...............................................................................,NA,NA
..209 ,NA,NA
Queue:..............................................................................,NA,NA
.211 Linked ,NA,NA
List:.........................................................................214 ,NA,NA
Slow and Inefficient Sort - Bubble ,NA,NA
Sort:..............................222 Better Sort – Insertion ,NA,NA
Sort:................................................225,NA,NA
Chapter 18 – Runtime Error Trapping.............229 ,NA,NA
Error ,NA,NA
Trap:.........................................................................22,NA,NA
9 ,NA,NA
Finding ,NA,NA
Out ,NA,NA
Which ,NA,NA
Error:....................................................230 Turning Off ,NA,NA
Error Trapping:................................................233,NA,NA
Chapter 19: Database Programming..............235 ,NA,NA
What ,NA,NA
is ,NA,NA
a ,NA,NA
Database:...........................................................235 The ,NA,NA
SQL ,NA,NA
Language:............................................................235 ,NA,NA
Creating ,NA,NA
and ,NA,NA
Adding ,NA,NA
Data ,NA,NA
to ,NA,NA
a ,NA,NA
Database:..........................236,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Retrieving Information from a ,NA,NA
Database:...........................243,NA,NA
Chapter 20: Connecting with a Network.........247 ,NA,NA
Socket ,NA,NA
Connection:............................................................247 A ,NA,NA
Simple ,NA,NA
Server ,NA,NA
and ,NA,NA
Client:...............................................248 ,NA,NA
Network ,NA,NA
Chat:....................................................................251,NA,NA
Appendix A: Loading BASIC-256 on your PC or ,NA,NA
USB Pen Drive..............................................261 ,NA,NA
1 – ,NA,NA
Download:....................................................................261 ,NA,NA
2 – ,NA,NA
Installing:......................................................................26,NA,NA
4 ,NA,NA
3 – Starting BASIC-,NA,NA
256.......................................................269,NA,NA
Appendix B: Language Reference - Statements ,NA,NA
....................................................................271 ,NA,NA
circle – Draw a Circle on the Graphics Output Area (2)......271 ,NA,NA
changedir – Change Your Current Working Directory (16)..271 ,NA,NA
clg – Clear Graphics Output Area ,NA,NA
(2)..................................272 clickclear – Clear the Last ,NA,NA
Mouse Click (10)........................272 close – Close the ,NA,NA
Currently Open File (16)..........................272 cls – Clear Text ,NA,NA
Output Window (1)....................................273 color or ,NA,NA
colour– Set Color for Drawing (2)..........................273 ,NA,NA
dbclose ,NA,NA
(19).......................................................................273 ,NA,NA
dbcloseset ,NA,NA
(19)..................................................................274 ,NA,NA
dbexecute ,NA,NA
(19)..................................................................274 dbopen ,NA,NA
(19).......................................................................274 ,NA,NA
dbopenset ,NA,NA
(19)..................................................................274 ,NA,NA
decimal ,NA,NA
()...........................................................................275 ,NA,NA
dim – Dimension a New Array ,NA,NA
(13).....................................275 do / until – Do / Until Loop ,NA,NA
(7).............................................275 end – Stop Running the ,NA,NA
Program (9)..................................276 fastgraphics – Turn ,NA,NA
"Fast Graphics Mode On (8)..................276 font – Set Font, ",NA,NA
"Size, and Weight (8)..................................276","So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
for/next – Loop and Count ,NA,NA
(7)............................................277 goto – Jump to a ,NA,NA
Label (9)..................................................277 ,NA,NA
gosub/return – Jump to a Subroutine and Return ,NA,NA
(9)..........278 graphsize – Set Graphic Display Size ,NA,NA
(8)............................278 if then – Test if Something is ,NA,NA
True - Single Line(6).............278 if  then / end if – Test if ,NA,NA
Something is True – Multiple Line (6) ,NA,NA
.....................................................................................,NA,NA
.....278 if then / else / end if – Test if Something is True – ,NA,NA
Multiple Line with Else ,NA,NA
(6)...............................................................279 imgload ,NA,NA
– Load an image from a file and display (12)........279 ,NA,NA
imgsave – Save the Graphics Output ,NA,NA
Area.........................280 input – Get a String Value from ,NA,NA
the User (7)......................280 kill – Delete a File ,NA,NA
()...........................................................281 line – Draw ,NA,NA
a Line on the Graphics Output Area (2)............281 netclose ,NA,NA
(20)......................................................................281 ,NA,NA
netconnect ,NA,NA
(20).................................................................281 ,NA,NA
netlisten ,NA,NA
(20).....................................................................282 ,NA,NA
netwrite ,NA,NA
(20)......................................................................282 ,NA,NA
offerror ,NA,NA
(18).......................................................................282 ,NA,NA
onerror ,NA,NA
(18).......................................................................283 ,NA,NA
open – Open a file for Reading and Writing ,NA,NA
(16).................283 pause – Pause the Program ,NA,NA
(7)..........................................283 plot – Put a Point on ,NA,NA
the Graphics Output Area (2).............284 poly – Draw a ,NA,NA
Polygon on the Graphics Output Area (8).....284 portout – ,NA,NA
Output Data to a System Port.............................284 print – ,NA,NA
Display a String on the Text Output Window (1).....285 ,NA,NA
putslice – Display a Captured Part of the Graphics Output. ,NA,NA
285 rect – Draw a Rectangle on the Graphics Output Area ,NA,NA
(2)..285 redim – Re-Dimension an Array ,NA,NA
(12)..................................286 refresh – Update Graphics ,NA,NA
Output Area (8)........................286 rem – Remark or ,NA,NA
Comment (2)...........................................286 reset – Clear ,NA,NA
an Open File (16)...........................................287,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
say ,NA,NA
– ,NA,NA
Use ,NA,NA
Text-To-Speech ,NA,NA
to ,NA,NA
Speak ,NA,NA
(1)..............................287 seek – Move the File I/O Pointer ,NA,NA
(16)..................................287 setsetting – Save a Value to ,NA,NA
a Persistent Store..................288 spritedim – Initialize ,NA,NA
Sprites for Drawing (12).....................288 spritehide – Hide ,NA,NA
a Sprite (12)............................................289 spriteload – ,NA,NA
Load an Image File Into a Sprite (12)..............289 ,NA,NA
spritemove – Move a Sprite from Its Current Location (12) ,NA,NA
289 spriteplace – Place a Sprite at a Specific Location ,NA,NA
(12)......290 ,NA,NA
spriteshow ,NA,NA
– ,NA,NA
Show ,NA,NA
a ,NA,NA
Sprite ,NA,NA
(12).........................................290 spriteslice – Capture a ,NA,NA
Sprite (12)......................................290 sound – Play a ,NA,NA
beep on the PC Speaker (3)........................291 stamp – ,NA,NA
Put a Polygon Where You Want It (8)....................291 ,NA,NA
system ,NA,NA
– ,NA,NA
Execute ,NA,NA
System ,NA,NA
Command ,NA,NA
in ,NA,NA
a ,NA,NA
Shell..................291 text – Draw text on the Graphics ,NA,NA
Output Area (8)..............292 volume – Adjust Amplitude of ,NA,NA
Sound Statement................292 wavplay – Play a WAV ,NA,NA
audio file in the background (12)....292 wavstop – Stop ,NA,NA
playing WAV audio file (12).......................293 wavwait – ,NA,NA
Wait for the WAV to finish (12)..........................293 while / ,NA,NA
end while – While Loop (7)......................................293 ,NA,NA
write ,NA,NA
– ,NA,NA
Write ,NA,NA
Data ,NA,NA
to ,NA,NA
the ,NA,NA
Currently ,NA,NA
Open ,NA,NA
File ,NA,NA
(16).............293 writeline – Write a Line to the Currently ,NA,NA
Open File (16)......294,NA,NA
Appendix C: Language Reference - Functions. 295 ,NA,NA
abs ,NA,NA
– ,NA,NA
Absolute ,NA,NA
Value ,NA,NA
(14)..................................................295 acos – Return ,NA,NA
the Arc-cosine (14)......................................296 asc – ,NA,NA
Return the Unicode Value for a Character (11)..........296 ,NA,NA
asin ,NA,NA
– ,NA,NA
Return ,NA,NA
the ,NA,NA
Arc-sine ,NA,NA
(14)...........................................297 atan – Return the ,NA,NA
Arc-tangent (14)....................................297 ceil – Round ,NA,NA
Up (14)...........................................................298 chr – ,NA,NA
Return a Character (11).............................................299 ,NA,NA
clickb- ,NA,NA
Return ,NA,NA
the ,NA,NA
Mouse ,NA,NA
Last ,NA,NA
Click ,NA,NA
Button ,NA,NA
Status ,NA,NA
(10)......299 clickx- Return the Mouse Last Click X Position ,NA,NA
(10)............300 clicky- Return the Mouse Last Click Y ,NA,NA
Position (10)............301,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
cos – Cosine ,NA,NA
(14)................................................................301 ,NA,NA
currentdir – Current Working Directory ,NA,NA
(16).......................302 day – Return the Current System ,NA,NA
Clock – Day (9)..............302 dbfloat – Get a Floating Point ,NA,NA
Value From a Database Set (19) ,NA,NA
.....................................................................................,NA,NA
.....303 dbint – Get an Integer Value From a Database Set ,NA,NA
(19).....303 dbrow – Advance Database Set to Next Row ,NA,NA
(19)..............304 dbstring – Get a String Value From a ,NA,NA
Database Set (19)....304 degrees – Convert a Radian Value ,NA,NA
to a Degree Value (14).305 eof – Allow Program to Check for ,NA,NA
End Of File Condition (16) ,NA,NA
.....................................................................................,NA,NA
.....305 exists – Check to See if a File Exists ,NA,NA
(16)...........................306 float – Convert a String Value to ,NA,NA
A Float Value (14)...........306 floor – Round Down ,NA,NA
(14).....................................................307 getcolor – ,NA,NA
Return the Current Drawing Color.....................308 ,NA,NA
getsetting – Get a Value from the Persistent ,NA,NA
Store............308 getslice – Capture Part of the Graphics ,NA,NA
Output..................309 graphheight – Return the Height of ,NA,NA
the Graphic Display (8) ,NA,NA
.....................................................................................,NA,NA
.....309 graphwidth – Return the Width of the Graphic ,NA,NA
Display (8). 310 hour – Return the Current System Clock - ,NA,NA
Hour (9)............310 instr – Return Position of One String in ,NA,NA
Another (15)..........311 int – Convert Value to an Integer ,NA,NA
(14)................................312 key – Return the Currently ,NA,NA
Pressed Keyboard Key (11)......313 lasterror – Return Last ,NA,NA
Error (18).......................................313 lasterrorextra – ,NA,NA
Return Last Error Extra Information(18)....314 lasterrorline – ,NA,NA
Return Program Line of Last Error (18)........314 ,NA,NA
lasterrormessage – Return Last Error as String ,NA,NA
(18)...........315 left – Extract Left Sub-string ,NA,NA
(15).......................................315 length – Length of a ,NA,NA
String (15).........................................315 lower – Change ,NA,NA
String to Lower Case (15)..........................316 md5 – ,NA,NA
Return MD5 Digest of a String.................................316,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
mid – Extract Part of a String ,NA,NA
(14)......................................317 minute - Return the ,NA,NA
Current System Clock - Minute (9)......317 month - Return ,NA,NA
the Current System Clock - Month (9).......318 mouseb- ,NA,NA
Return the Mouse Current Button Status (10)......319 ,NA,NA
mousex- Return the Mouse Current X Position ,NA,NA
(10)............320 mousey- Return the Mouse Current Y ,NA,NA
Position (10)............320 netaddress – What Is My IP ,NA,NA
Address (20)...........................321 netdata – Is There ,NA,NA
Network Data to Read (20)...................321 netread – Read ,NA,NA
Data from Network(20)..............................322 pixel – Get ,NA,NA
Color Value of a Pixel........................................322 portin ,NA,NA
– Read Data from a System Port..............................323 ,NA,NA
radians – Convert a Degree Value to a Radian Value ,NA,NA
(16)..323 rand – Random Number ,NA,NA
(6)................................................324 read – Read a ,NA,NA
Token from the Currently Open File (16).....325 readline – ,NA,NA
Read a Line of Text from a File (16)...................325 rgb – ,NA,NA
"Convert Red, Green, and Blue Values to RGB (12)....326 ",NA,NA
right – Extract Right Sub-string ,NA,NA
(15)...................................326 second - Return the ,NA,NA
Current System Clock - Second (9).....327 sin – Sine ,NA,NA
(16)....................................................................327 size ,NA,NA
– Return the size of the open file (15).........................328 ,NA,NA
spritecollide – Return the Collision State of Two Sprites (12) ,NA,NA
.....................................................................................,NA,NA
.....329 spriteh – Return the Height of Sprite ,NA,NA
(12)..........................329 Spritev – Return the Visible State ,NA,NA
of a Sprite (12)..............330 spritew – Return the Width of ,NA,NA
Sprite (12)...........................330 spritex – Return the X ,NA,NA
Position of Sprite (12).....................330 spritey – Return the ,NA,NA
Y Position of Sprite (12)......................331 string – Convert ,NA,NA
a Number to a String (14)........................331 tan – ,NA,NA
Tangent (16).............................................................332 ,NA,NA
upper – Change String to Upper Case ,NA,NA
(15).........................333 year - Return the Current System ,NA,NA
Clock - Year (9).............333,NA,NA
Appendix D: Language Reference – Operators ,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
and ,NA,NA
Constants..............................................335 ,NA,NA
Mathematical ,NA,NA
Operators:...................................................335 ,NA,NA
Mathematical ,NA,NA
Constants ,NA,NA
or ,NA,NA
Values:....................................335 ,NA,NA
Color ,NA,NA
Constants ,NA,NA
or ,NA,NA
Values:.................................................336 ,NA,NA
Logical ,NA,NA
Operators:..............................................................337 ,NA,NA
Logical ,NA,NA
Constants ,NA,NA
or ,NA,NA
Values:..............................................337 ,NA,NA
Bitwise ,NA,NA
Operators:..............................................................338,NA,NA
Appendix E: Color Names and Numbers..........341,NA,NA
Appendix F: Musical Tones............................343,NA,NA
Appendix G: Key Values................................345,NA,NA
Appendix H: Unicode Character Values – Latin ,NA,NA
(English).......................................................347,NA,NA
Appendix I: Reserved Words..........................349,NA,NA
Appendix J: Error Numbers............................351,NA,NA
Appendix K: Glossary....................................355,NA,NA
Index of Programs,NA,NA
Program ,NA,NA
1: ,NA,NA
Say ,NA,NA
Hello.................................................................3 Program ,NA,NA
2: Say a Number.........................................................6 ,NA,NA
Program ,NA,NA
3: ,NA,NA
Say ,NA,NA
the ,NA,NA
Answer.......................................................8 ,NA,NA
Program ,NA,NA
4: ,NA,NA
Say ,NA,NA
another ,NA,NA
Answer................................................8 ,NA,NA
Program ,NA,NA
5: ,NA,NA
Say ,NA,NA
Hello ,NA,NA
to ,NA,NA
Bob.....................................................9 Program 6: Say it ,NA,NA
One More Time..............................................9 Program 7: ,NA,NA
Print ,NA,NA
Hello ,NA,NA
There...................................................10 ,NA,NA
Program ,NA,NA
8: ,NA,NA
Many ,NA,NA
Prints ,NA,NA
One ,NA,NA
Line............................................11 ,NA,NA
Program ,NA,NA
9: ,NA,NA
Grey ,NA,NA
Spots............................................................13 ,NA,NA
Program ,NA,NA
10: ,NA,NA
Face ,NA,NA
with ,NA,NA
Rectangles..........................................21 ,NA,NA
Program ,NA,NA
11: ,NA,NA
Smiling ,NA,NA
Face ,NA,NA
with ,NA,NA
Circles....................................22 ,NA,NA
Program ,NA,NA
12: ,NA,NA
Draw ,NA,NA
a ,NA,NA
Triangle..................................................24 ,NA,NA
Program ,NA,NA
13: ,NA,NA
Draw ,NA,NA
a ,NA,NA
Cube.......................................................26 ,NA,NA
Program ,NA,NA
14: ,NA,NA
Use ,NA,NA
Plot ,NA,NA
to ,NA,NA
Draw ,NA,NA
Points.......................................27 Program 15: Big Program ,NA,NA
- Talking Face.................................30 Program 16: Play ,NA,NA
Three Individual Notes.................................32 Program 17: ,NA,NA
List ,NA,NA
of ,NA,NA
Sounds.....................................................32 ,NA,NA
Program ,NA,NA
18: ,NA,NA
Charge!...............................................................36 ,NA,NA
Program ,NA,NA
19: ,NA,NA
Simple ,NA,NA
Numeric ,NA,NA
Variables...................................37 Program 20: Charge! with ,NA,NA
Variables........................................38 ,NA,NA
Program ,NA,NA
21: ,NA,NA
Big ,NA,NA
Program - Little Fuge in G.............................39 Program 22: ,NA,NA
School ,NA,NA
Bus..........................................................43 ,NA,NA
Program ,NA,NA
23: ,NA,NA
I ,NA,NA
Like ,NA,NA
Jim.............................................................49 Program 24: ,NA,NA
I ,NA,NA
Like?.................................................................51 ,NA,NA
Program ,NA,NA
25: ,NA,NA
Math-,NA,NA
wiz.............................................................53 Program 26: ,NA,NA
Fancy ,NA,NA
– ,NA,NA
Say ,NA,NA
Name...............................................54 ,NA,NA
Program ,NA,NA
27: ,NA,NA
Big ,NA,NA
Program ,NA,NA
- ,NA,NA
Silly ,NA,NA
Story ,NA,NA
Generator....................55 ,NA,NA
Program ,NA,NA
28: ,NA,NA
Compare ,NA,NA
Two ,NA,NA
Ages.............................................59 ,NA,NA
Program ,NA,NA
29: ,NA,NA
Coin ,NA,NA
Flip..............................................................61 ,NA,NA
Program ,NA,NA
30: Rolling Dice.........................................................66,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Program ,NA,NA
31: ,NA,NA
Coin ,NA,NA
Flip ,NA,NA
– ,NA,NA
With ,NA,NA
Else............................................68 ,NA,NA
Program ,NA,NA
32: ,NA,NA
Big ,NA,NA
Program - Roll a Die and Draw It...................70 Program 33: ,NA,NA
For ,NA,NA
Statement.....................................................71 ,NA,NA
Program ,NA,NA
34: ,NA,NA
For ,NA,NA
Statement ,NA,NA
– ,NA,NA
With ,NA,NA
Step..................................72 ,NA,NA
Program ,NA,NA
35: ,NA,NA
Moiré ,NA,NA
Pattern......................................................73 Program 36: ,NA,NA
For Statement – Countdown................................74 Program ,NA,NA
37: Get a Number from 1 to 10.................................76 ,NA,NA
Program ,NA,NA
38: ,NA,NA
Do/Until ,NA,NA
Count ,NA,NA
to ,NA,NA
10...........................................76 ,NA,NA
Program ,NA,NA
39: ,NA,NA
Loop ,NA,NA
Forever.......................................................77 Program 40: ,NA,NA
While Count to 10...............................................78 Program ,NA,NA
41: ,NA,NA
Kalidescope........................................................80 ,NA,NA
Program ,NA,NA
42: ,NA,NA
Big ,NA,NA
Program ,NA,NA
- ,NA,NA
Bouncing ,NA,NA
Ball................................82 ,NA,NA
Program ,NA,NA
43: ,NA,NA
Hello ,NA,NA
on ,NA,NA
the ,NA,NA
Graphics Output Area......................85 Program 44: Re-size ,NA,NA
Graphics.................................................89 ,NA,NA
Program ,NA,NA
45: ,NA,NA
Big ,NA,NA
Red ,NA,NA
Arrow.....................................................91 ,NA,NA
Program ,NA,NA
46: ,NA,NA
Fill ,NA,NA
Screen ,NA,NA
with ,NA,NA
Triangles....................................94 ,NA,NA
Program ,NA,NA
47: ,NA,NA
One ,NA,NA
Hundred Random Triangles.........................97 Program 48: ,NA,NA
Big Program - A Flower For You.........................100 Program ,NA,NA
49: Goto With a Label.............................................101 ,NA,NA
Program ,NA,NA
50: ,NA,NA
Text ,NA,NA
Clock.........................................................103 Program 51: ,NA,NA
Gosub...............................................................105 ,NA,NA
Program ,NA,NA
52: ,NA,NA
Text ,NA,NA
Clock ,NA,NA
- ,NA,NA
Improved.......................................107 ,NA,NA
Program ,NA,NA
53: ,NA,NA
Big ,NA,NA
Program - Roll Two Dice Graphically...........110 Program 54: ,NA,NA
Mouse ,NA,NA
Tracking.................................................112 ,NA,NA
Program ,NA,NA
55: ,NA,NA
Mouse ,NA,NA
Clicking..................................................114 Program 56: ,NA,NA
Big Program - Color Chooser.............................118 Program ,NA,NA
57: ,NA,NA
Read ,NA,NA
Keyboard.................................................122 ,NA,NA
Program ,NA,NA
58: ,NA,NA
Move ,NA,NA
Ball..........................................................125 Program 59: ,NA,NA
Big Program - Falling Letter Game....................127 Program ,NA,NA
60: ,NA,NA
Imgload ,NA,NA
a ,NA,NA
Graphic.............................................129 ,NA,NA
Program ,NA,NA
61: ,NA,NA
Imgload ,NA,NA
a ,NA,NA
Graphic ,NA,NA
with ,NA,NA
Scaling ,NA,NA
and ,NA,NA
Rotation....131 ,NA,NA
Program ,NA,NA
62: ,NA,NA
Spinner ,NA,NA
with ,NA,NA
Sound ,NA,NA
Effect.................................133,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Program ,NA,NA
63: ,NA,NA
Bounce ,NA,NA
a ,NA,NA
Ball ,NA,NA
with ,NA,NA
Sprite ,NA,NA
and ,NA,NA
Sound ,NA,NA
Effects.....136 ,NA,NA
Program ,NA,NA
64: ,NA,NA
Sprite ,NA,NA
Collision..................................................140 Program 65: ,NA,NA
Paddleball with Sprites......................................143 Program ,NA,NA
66: ,NA,NA
One-dimensional ,NA,NA
Numeric ,NA,NA
Array.......................145 ,NA,NA
Program ,NA,NA
67: ,NA,NA
Bounce ,NA,NA
Many ,NA,NA
Balls............................................149 Program 68: Bounce ,NA,NA
Many Balls Using Sprites......................151 Program 69: List ,NA,NA
of My Friends..............................................152 Program 70: ,NA,NA
Assigning an Array With a List..........................153 Program ,NA,NA
71: ,NA,NA
Space ,NA,NA
Chirp ,NA,NA
Sound............................................154 ,NA,NA
Program ,NA,NA
72: ,NA,NA
Shadow ,NA,NA
Stamp..................................................156 ,NA,NA
Program ,NA,NA
73: ,NA,NA
Randomly Create a Polygon..............................157 Program ,NA,NA
74: ,NA,NA
Grade ,NA,NA
Calculator...............................................159 ,NA,NA
Program ,NA,NA
75: ,NA,NA
Get ,NA,NA
Array ,NA,NA
Size...................................................160 Program 76: Re-,NA,NA
Dimension an Array.....................................162 Program 77: ,NA,NA
Big Program - Space Warp Game......................165 Program ,NA,NA
78: ,NA,NA
The ,NA,NA
Modulo ,NA,NA
Operator........................................168 ,NA,NA
Program ,NA,NA
79: ,NA,NA
Move ,NA,NA
Ball ,NA,NA
- ,NA,NA
Use ,NA,NA
Modulo ,NA,NA
to ,NA,NA
Keep ,NA,NA
on ,NA,NA
Screen.......170 ,NA,NA
Program ,NA,NA
80: ,NA,NA
Check ,NA,NA
Your ,NA,NA
Long ,NA,NA
Division..................................171 Program 81: The Powers ,NA,NA
of ,NA,NA
Two............................................172 ,NA,NA
Program ,NA,NA
82: ,NA,NA
"Difference Between Int, Ceiling, and Floor........174 Program ",NA,NA
83: Big Program - Long Division..............................184 ,NA,NA
Program ,NA,NA
84: ,NA,NA
The ,NA,NA
String ,NA,NA
Function...........................................188 Program 85: The ,NA,NA
Length Function.........................................189 Program 86: ,NA,NA
"The Left, Right, and Mid Functions....................190 Program ",NA,NA
87: The Upper and Lower Functions........................192 ,NA,NA
Program ,NA,NA
88: ,NA,NA
The ,NA,NA
Instr ,NA,NA
Function.............................................193 Program 89: Big ,NA,NA
Program - Radix Conversion........................195 Program 90: ,NA,NA
Read Lines From a File......................................198 Program ,NA,NA
91: Clear File and Write Lines.................................202 ,NA,NA
Program ,NA,NA
92: ,NA,NA
Append ,NA,NA
Lines ,NA,NA
to ,NA,NA
a ,NA,NA
File.......................................204 Program 93: Big Program - ,NA,NA
Phone ,NA,NA
List...................................207 ,NA,NA
Program ,NA,NA
94: ,NA,NA
Stack.................................................................211,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Program ,NA,NA
95: ,NA,NA
Queue...............................................................214 ,NA,NA
Program ,NA,NA
96: ,NA,NA
Linked ,NA,NA
List........................................................221 Program 97: ,NA,NA
Bubble ,NA,NA
Sort.......................................................225 ,NA,NA
Program ,NA,NA
98: ,NA,NA
Insertion ,NA,NA
Sort....................................................228 ,NA,NA
Program ,NA,NA
99: ,NA,NA
Simple Runtime Error Trap................................229 Program ,NA,NA
100: Runtime Error Trap - With Messages...............231 ,NA,NA
Program ,NA,NA
101: ,NA,NA
Turning ,NA,NA
Off ,NA,NA
the ,NA,NA
Trap.......................................233 Program 102: Create a ,NA,NA
Database..........................................238 ,NA,NA
Program ,NA,NA
103: ,NA,NA
Insert Rows into Database..............................241 Program ,NA,NA
104: Update Row in a Database..............................242 ,NA,NA
Program ,NA,NA
105: ,NA,NA
Selecting ,NA,NA
Sets ,NA,NA
of ,NA,NA
Data ,NA,NA
from ,NA,NA
a ,NA,NA
Database..........244 ,NA,NA
Program ,NA,NA
106: ,NA,NA
Simple ,NA,NA
Network ,NA,NA
Server...................................248 ,NA,NA
Program ,NA,NA
107: ,NA,NA
Simple ,NA,NA
Network Client.....................................249 Program 108: ,NA,NA
Network Chat..................................................253 Program ,NA,NA
109: Network Tank Battle.......................................259,NA,NA
Index of Illustrations,NA,NA
Illustration 1: The BASIC-256 ,NA,NA
Screen.........................................1 Illustration 2: BASIC-256 ,NA,NA
- New Dialog.......................................5 Illustration 3: Color ,NA,NA
Names......................................................17 Illustration 4: ,NA,NA
The Cartesian Coordinate System of the Graphics Output ,NA,NA
Area............................................................................18 ,NA,NA
Illustration 5: ,NA,NA
Rectangle..........................................................18 ,NA,NA
Illustration 6: ,NA,NA
Circle.................................................................19 ,NA,NA
Illustration 7: Sound ,NA,NA
Waves.....................................................31 Illustration 8: ,NA,NA
Musical Notes....................................................34 ,NA,NA
Illustration 9: ,NA,NA
Charge!.............................................................34 ,NA,NA
Illustration 10: First Line of J.S. Bach's Little Fuge in ,NA,NA
G............39 Illustration 11: School ,NA,NA
Bus.......................................................42 Illustration 12: ,NA,NA
Breakfast - Flowchart.......................................46 Illustration ,NA,NA
13: Soda Machine - Flowchart................................47 ,NA,NA
Illustration 14: Compare Two Ages - ,NA,NA
Flowchart.......................60 Illustration 15: Common Windows ,NA,NA
Fonts.................................88 Illustration 16: Big Red ,NA,NA
Arrow..................................................91 Illustration 17: ,NA,NA
Equilateral Triangle.........................................93 Illustration ,NA,NA
18: Degrees and Radians.......................................96 ,NA,NA
Illustration 19: Big Program - A Flower For You - Flower Petal ,NA,NA
Stamp...............................................................................,NA,NA
......99 Illustration 20: Right ,NA,NA
Triangle................................................177 Illustration 21: ,NA,NA
Cos() Function...............................................177 ,NA,NA
Illustration 22: Sin() ,NA,NA
Function................................................178 Illustration 23: ,NA,NA
Tan() Function...............................................178 ,NA,NA
Illustration 24: Acos() ,NA,NA
Function..............................................179 Illustration 25: ,NA,NA
Asin() Function..............................................180 Illustration ,NA,NA
26: Atan() Function..............................................181 ,NA,NA
Illustration 27: What is a ,NA,NA
Stack..............................................209 Illustration 28: ,NA,NA
What is a Queue............................................212,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Illustration 29: Linked ,NA,NA
List.....................................................215 Illustration 30: ,NA,NA
Deleting an Item from a Linked List...............215 Illustration ,NA,NA
31: Inserting an Item into a Linked List................216 ,NA,NA
Illustration 32: Bubble Sort - ,NA,NA
Flowchart.................................223 Illustration 33: Insertion ,NA,NA
Sort - Step-by-step..........................226 Illustration 34: ,NA,NA
Entity Relationship Diagram of Chapter ,NA,NA
Database...........................................................................,NA,NA
....237 Illustration 35: Socket ,NA,NA
Communication..................................247 Illustration 36: ,NA,NA
BASIC-256 on Sourceforge.............................262 Illustration ,NA,NA
37: Saving Install File...........................................262 ,NA,NA
Illustration 38: File ,NA,NA
Downloaded............................................263 Illustration 39: ,NA,NA
Open File Warning.........................................264 Illustration ,NA,NA
40: Open File Security Warning...........................265 ,NA,NA
Illustration 41: Installer - Welcome ,NA,NA
Screen............................266 Illustration 42: Installer - GPL ,NA,NA
License Screen........................267 Illustration 43: Installer - ,NA,NA
What to Install................................268 Illustration 44: ,NA,NA
Installer - Where to Install..............................268 Illustration ,NA,NA
45: Installer - Complete.......................................269 ,NA,NA
Illustration 46: XP Start ,NA,NA
Button..............................................269 Illustration 47: ,NA,NA
BASIC-256 Menu from All Programs...............270,NA,NA
Chapter 1: Meeting BASIC-256 – Say ,NA,NA
Hello.,"This chapter will introduce the BASIC-256 environment using the 
 print
  and 
 say
  statements.  You will see the difference between 
 commands you send to the computer, strings of text, and numbers 
 that will be used by the program.  We will also explore simple 
 mathematics to show off just how talented your computer is.  Lastly 
 you will learn what a syntax-error is and how to fix them.",NA
The BASIC-256 Window:,"The BASIC-256 window is divided into five sections: the Menu Bar, 
 Tool Bar, Program Area, Text Output Area, and Graphics Output 
 Area (see Illustration 1: The BASIC-256 Screen below).
  
  
 Illustration 1: The BASIC-256 Screen
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Menu Bar:,"The menu bar contains several different drop down menus.  These 
 menus include: “File”, “Edit”, “View”, “Run”, and “About”.  The “File” 
 menu allows you to save, reload saved programs, print and exit.  
 The “Edit” menu allows you to cut, copy and paste text and images 
 from the program, text output, and graphics output areas. The 
 “View” menu will allow you to show or hide various parts of the 
 BASIC-256 window.  The “Run” menu will allow you to execute and 
 debug your programs. The “About” menu option will display a pop-
 up dialog with information about BASIC-256 and the version you 
 are using.",NA
Tool Bar:,"The menu options that you will use the most are also available on 
 the tool bar.
  
 •
  
  New – Start a new program
  
 •
  
  Open – Open a saved program
  
 •
  Save – Save the current program to the computer's hard disk 
  
 drive or your USB pen drive
  
 •
  Run – Execute the currently displayed program
  
 •
  Debug – Start executing program one line at a time
  
 •
  Step – When debugging – go to next line
  
 •
  Stop – Quit executing the current program
  
 •
  
  Undo – Undo last change to the program.
  
 •
  
  Redo – Redo last change that was undone.
  
 •
  
  Cut – Move highlighted program text to the clipboard
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Program Area:,"Programs are made up of instructions to tell the computer exactly 
 what to do and how to do it.  You will type your programs, modify 
 and fix your code, and load saved programs into this area of the 
 screen.",NA
Text Output Area:,"This area will display the output of your programs.  This may 
 include words and numbers.  If the program needs to ask you a 
 question, the question (and what you type) will be displayed 
 here.",NA
Graphics Output Area:,"BASIC-256 is a graphical language (as you will see).  Pictures, 
 shapes, and graphics you will create will be displayed here.",NA
Your first program – The ,NA,NA
say,NA,NA
 statement:,"Let's actually write a computer program.  Let us see if BASIC-256 
 will say hello to us.  In the Program Area type the following one-line 
 program:
  
 say “hello”
  
 Program 1: Say Hello
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
say ,NA,NA
expression,"The 
 say
  statement is used to make BASIC-256 read 
 an expression aloud, to the computer's speakers.
  
  
  
 “”
  
 BASIC-256 treats letters, numbers, and punctuation that 
 are inside a set of double-quotes as a block.  This block is 
 called a 
 string
 .
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
BASIC-256 is really good with numbers – Simple ,NA,NA
Arithmetic:,"The brain of the computer (called the Central Processing Unit or 
 CPU for short) works exclusively with numbers.  Everything it does 
 from graphics, sound, and all the rest is done by manipulating 
 numbers.
  
 The four basic operations of addition, subtraction, multiplication, 
 and division are carried out using the operators show in Table 1.
  
 Operator 
  
 Operation",NA
+,"Addition 
  
 expression1 + expression2",NA
-,"Subtraction 
  
 expression1 - expression2",NA
*,"Multiplication 
  
 expression1 * expression2",NA
/,"Division 
  
 expression1 / expression2
  
 Table 1: Basic Mathematical Operators
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
+,NA,NA
-,NA,NA
* ,NA,NA
/ ,NA,NA
(,NA,NA
),"The four basic mathematical operations: addition (+), 
 subtraction (-), division (/), and multiplication(*) work 
 with numbers to perform calculations.  A numeric value is 
 required on both sides of these operators.  You may also 
 use parenthesis to group operations together.
  
 Examples include: 1 + 1, 5 * 7, 3.14 * 6 + 2, (1 + 2) * 
 3 and 5 - 5
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Another use for + (Concatenation):,"The + operator also will add strings together.  This operation is 
 called concatenation, or “cat” for short.  When we concatenate we 
 are joining the strings together, like train cars, to make a longer 
 string.
  
 Let's try it out:
  
 say ""Hello "" + ""Bob.""
  
 Program 5: Say Hello to Bob
  
 The computer should have said hello to Bob.
  
 Try another.
  
 say 1 + "" more time"" 
  
 Program 6: Say it One More Time
  
 The + in the last example was used as the concatenate operator 
 because the second term was a string and the computer does not 
 know how to perform mathematics with a string (so it 'cats').
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
+ (concatenate),"Another use for the the plus sign (+) is to tell the 
  
 computer to concatenate (join) strings together.  If one or 
 both operands are a string, concatenation will be 
  
 performed; if both operands are numeric, then addition is 
 performed.
  
  
  
 Try several different programs using the 
 say
  statement 
 and the + (concatenate) operator.  Join strings and 
 numbers together with other strings and numbers.",NA
The text output area - The print statement:,"Programs that use the Text to Speech (TTS) 
 say
  statement can be 
 very useful and fun but is is also often necessary to write 
  
 information (strings and numbers) to the screen so that the output 
 can be read.  The 
 print
  statement does just that.  In the Program 
 Area type the following two-line program:
  
 print “hello”
  
 print “there”
  
 Program 7: Print Hello There
  
 Once you have this program typed in, use the mouse, and click on 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
print ,NA,NA
expression ,NA,NA
print ,NA,NA
expression,NA,NA
;,"The 
 print
  statement is used to display text and numbers 
 on the text output area of the BASIC-256 window.  
 Print 
 normally goes down to the next line but you may print 
 several things on the same line by using a ; (semicolon) at 
 the end of the 
 expression
 .
  
 The 
 print 
 statement, by default, advances the text area so that the 
 next 
 print
  is on the next line.  If you place a ; (semicolon) on the 
 end of the 
 expression
  being printed, it will suppress the line 
  
 advance so that the next 
 print
  will be on the same line.
  
 cls 
  
 print “Hello ”; 
  
 print “there, ”; 
  
 print “my friend.”
  
 Program 8: Many Prints One Line",NA
cls,"The 
 cls
  statement clears all of the old displayed 
 information from the text output area.
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
What is a “Syntax error”:,"Programmers are human and occasionally make mistakes.  “Syntax 
 errors” are one of the types of errors that we may encounter.  A 
 “Syntax error” is generated by BASIC-256 when it does not 
  
 understand the program you have typed in.  Usually syntax errors 
 are caused by misspellings, missing commas, incorrect spaces, 
 unclosed quotations, or unbalanced parenthesis.  BASIC-256 will tell 
 you what line your error is on and will even attempt to tell you 
 where on the line the error is.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 2: Drawing Basic Shapes.,"In this chapter we will be getting graphical.  You will learn how to 
 draw rectangles, circles, lines and points of various colors.  These 
 programs will get more and more complex, so you will also learn 
 how to save your programs to long term storage and how to load 
 them back in so you can run them again or change them.",NA
Drawing Rectangles and Circles:,"Let's start the graphics off by writing a graphical program for our 
 favorite sports team, the “Grey Spots”.  Their colors are blue and 
 grey.
  
 1 
 # c2_greyspots.kbs
  
 2 
 # a program for our team - the grey spots
  
 3 
 clg
  
 4 
 color blue
  
 5 
 rect 0,0,300,300
  
 6 
 color grey
  
 7 
 circle 149,149,100
  
 8 
 say ""Grey Spots, Grey Spots, Grey spots rule!""
  
 Program 9: Grey Spots
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
# ,NA,NA
rem,"The 
 #
  and 
 rem
  statements are called remarks.  A remark 
 statement allows the programmer to put comments about 
 the code they are working on into the program.  The 
 computer sees the 
 #
  or 
 rem
  statement and will ignore all 
 of the rest of the text on the line.
  
 On line two you see the 
 clg 
 statement.  It is much like the 
 cls 
 statement from Chapter 1, except that the 
 clg
  statement will clear 
 the graphic output area of the screen.",NA
clg,"The 
 clg
  statement erases the graphics output area so that 
 we have a clean place to do our drawings.
  
 Lines four and six contain the 
 color
  statement.  It tells BASIC-256 
 what color to use for the next drawing action.  You may define 
 colors either by using one of the eighteen standard color names or 
 you may define one of over 16 million different colors by mixing the 
 primary colors of light (red, green, and blue) together.
  
 When you are using the numeric method to define your custom 
 color be sure to limit the values from 0 to 255.  Zero (0) represents 
 no light of that component color and 255 means to shine the 
  
 maximum.  Bright white is represented by 255, 255, 255 (all colors 
 of light) where black is represented by 0, 0, 0 (no colors at all).  
 This numeric representation is known as the RGB triplet.  
 Illustration 3 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
color,NA,NA
color_name ,NA,NA
color ,NA,NA
red,NA,NA
", ",NA,NA
green,NA,NA
", ",NA,NA
blue ,NA,NA
color,NA,NA
RGB_number,"color
  can also be spelled 
 colour
 .
  
 The 
 color
  statement allows you to set the color that will 
 be drawn next.  You may follow the 
 color
  statement with 
 a color name (black, white, red, darkred, green, 
  
 darkgreen, blue, darkblue, cyan, darkcyan, purple, 
  
 darkpurple, yellow, darkyellow, orange, darkorange, 
 grey/gray, darkgrey/darkgray), with three numbers (0-
 255) representing how much red, blue, and green should 
 be used to make the color, or with a single value 
  
 representing red * 256 *256 + green * 256 + blue
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
rect,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
width,NA,NA
", ",NA,NA
height,"The 
 rect
  statement uses the current drawing color and 
 places a rectangle on the graphics output window.  The 
 top left corner of the rectangle is specified by the first two 
 numbers and the width and height is specified by the 
 other two arguments.
  
 Line 7 of Program 9 introduces the 
 circle
  statement to draw a 
 circle.  It takes three numeric arguments,  the first two represent 
 the Cartesian coordinates for the center of the circle and the third 
 the radius in pixels.
  
  
 Illustration 6: 
  
 Circle
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
circle ,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", r",NA,NA
adius,"The 
 circle
  statement uses the current drawing color and 
 draws a filled circle with its center at (x, y) with the 
 specified radius.
  
  
  
 Can you create a graphic screen using colors, rectangles 
 and circles for your school or favorite sports team?
  
 Here are a couple of sample programs that use the new statements 
 clg
 , 
 color
 , 
 rect
  and 
 circle
 .  Type the programs in and modify 
 them.  Make them a frowning face, alien face, or look like somebody 
 you know.
  
 1 
 # c2_rectanglesmile.kbs 
 2 
  
 3 
 # clear the screen 
  
 4 
 clg 
  
 5 
  
 6 
 # draw the face 
  
 7 
 color yellow 
  
 8 
 rect 0,0,299,299 
  
 9 
  
 10 
  
 # draw the mouth 
 11 
 color 
 black 
  
 12 
 rect 100,200,100,25 
  
 13
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Saving Your Program and Loading it Back:,"Now that the programs are getting more complex, you may want to 
 save them so that you can load them back in the future.
  
 You may store a program by using the Save button 
  
  on the tool 
 bar or Save option on the File menu.  A dialog will display asking 
 you for a file name, if it is a new program, or will save the changes 
 you have made (replacing the old file).
  
 If you do not want to replace the old version of the program 
 and you want to store it using a new name you may use the 
 Save As option on the File menu to save a copy with a different 
 name.
  
 To load a previously saved program you would use the Open button 
  
  on the tool bar or the Open option on the File menu.",NA
Drawing with Lines:,"The next drawing statement is 
 line
 .  It will draw a line one pixel 
 wide, of the current color, from one point to another point.  
 Program 12 shows an example of how to use the 
 line
  statement.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
line ,NA,NA
start_x,NA,NA
", ",NA,NA
start_y,NA,NA
", ",NA,NA
finish_x,NA,NA
", ",NA,NA
finish_y,"Draw a line one pixel wide from the starting point to the 
 ending point, using the current color.
  
  
  
 Use a piece of graph-paper to draw other shapes and then 
 write a program to draw them.  Try a right triangle, 
  
 pentagon, star, or other shapes.
  
 The next program is a sample of what you can do with complex 
 lines.  It draws a cube on the screen.
  
 1 
 # c2_cube.kbs - draw a cube 
 2 
  
 3 
 clg 
  
 4 
 color black 
  
 5 
  
 6 
 # draw back square 
  
 7 
 line 150, 150, 150, 250 
  
 8 
 line 150, 250, 250, 250 
  
 9 
 line 250, 250, 250, 150 
  
 10 
 line 250, 150, 150, 150 
  
 11 
  
 12 
 # draw front square 
  
 13 
 line 100, 100, 100, 200 
  
 14 
  
 line 100, 200, 200, 200 
 15 
 line 
 200, 200, 200, 100
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Setting Individual Points on the Screen:,"The last graphics statement covered in this chapter is 
 plot
 .  The 
 plot
  statement sets a single pixel (dot) on the screen.  For most of 
 us these are so small, they are hard to see.  Later we will write 
 programs that will draw groups of pixels to make very detailed 
 images.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
plot,NA,NA
x,NA,NA
", ",NA,NA
y,"Changes a single pixel to the current color.
  
  
  
 At the end of each chapter there will be one or more big 
 programs for you to look at, type in, and experiment with. 
  
 These programs will contain only topics that we have 
 covered so far in the book.
  
 This “Big Program” takes the idea of a face and makes it 
 talk. Before the program will say each word the lower half 
 of the face is redrawn with a different mouth shape.  This 
 creates a rough animation and makes the face more fun.
  
  
 1 
 # c2_talkingface.kbs
  
 2 
 # draw face background with eyes
  
 3 
 color yellow
  
 4 
 rect 0,0,300,300
  
 5 
 color black
  
 6 
 rect 75,75,50,50
  
 7 
 rect 175,75,50,50
  
 8
  
 9 
 #erase old mouth
  
 10 
 color yellow
  
 11 
 rect 0,150,300,150
  
 12 
 # draw new mouth
  
 13 
 color black
  
 14 
 rect 125,175,50,100
  
 15 
 # say word
  
 16 
 say ""i""
  
     
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 3: Sound and Music.,"Now that we have color and graphics, let's add sound and make 
 some music.  Basic concepts of the physics of sound, numeric 
 variables, and musical notation will be introduced.  You will be able 
 to translate a tune into frequencies and durations to have the 
 computer synthesize a voice.",NA
Sound Basics – Things you need to know about ,NA,NA
sound:,"Sound is created by vibrating air striking your ear-drum. These 
 vibrations are known as sound waves.  When the air is vibrating 
 quickly you will hear a high note and when the air is vibrating slowly 
 you will hear a low note.  The rate of the vibration is called 
  
 frequency.
  
  
 Illustration 7: Sound Waves
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
sound,NA,NA
frequency,NA,NA
", ",NA,NA
duration ,NA,NA
sound,NA,NA
 {,NA,NA
frequency1,NA,NA
", ",NA,NA
duration1,NA,NA
", ",NA,NA
frequency2,NA,NA
", ",NA,NA
duration2,NA,NA
 ...} ,NA,NA
sound,NA,NA
numeric_array,"The basic 
 sound
  statement takes two arguments; (1) the 
 frequency of the sound in Hz (cycles per second) and (2) 
 the length of the tone in milliseconds (ms).  The second 
 form of the sound statement uses curly braces and can 
 specify several tones and durations in a list.  The third 
 form of the sound statement uses an array containing 
 frequencies and durations.  Arrays are covered in Chapter 
 11.
  
 How do we get BASIC-256 to play a tune?  The first thing we need 
 to do is to convert the notes on a music staff to frequencies. 
  
 Illustration 7 shows two octaves of music notes, their names, and 
 the approximate frequency the note makes.  In music you will also 
 find a special mark called the rest.  The rest means not to play 
 anything for a certain duration.  If you are using a list of sounds you 
 can insert a rest by specifying a frequency of zero (0) and the 
 needed duration for the silence.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Note Duration,NA,NA
=,NA,NA
1000,NA,NA
∗,NA,NA
60,NA,NA
/,NA,NA
 Beats Per Minute,NA,NA
∗,NA,NA
Relative Length,"Formula 1: Calculating Note Duration
  
 Note Name
  
 Symbols 
 for Note 
 and Rest
  
 Relative 
 Length
  
  
 At 100 
  
 BPM 
  
 Duration 
    
 ms
  
 At 120 
   
 BPM 
  
 Duration 
   
 ms
  
 At 140 
  
 BPM 
  
 Duration 
   
 ms
  
 Dotted Whole
  
  
 6.000
  
 3600
  
 3000
  
 2571
  
 Whole
  
  
 4.000
  
 2400
  
 2000
  
 1714
  
 Dotted Half
  
  
 3.000
  
 1800
  
 1500
  
 1285
  
 Half
  
  
 2.000
  
 1200
  
 1000
  
 857
  
 Dotted 
  
 Quarter
  
  
 1.500
  
 900
  
 750
  
 642
  
 Quarter
  
  
 1.000
  
 600
  
 500
  
 428
  
 Dotted Eighth
  
  
 0.750
  
 450
  
 375
  
 321
  
 Eighth
  
  
 0.500
  
 300
  
 250
  
 214
  
 Dotted 
  
 Sixteenth
  
  
 0.375
  
 225
  
 187
  
 160
  
 Sixteenth
  
  
 0.250
  
 150
  
 125
  
 107
  
 Table 2: Musical Notes and Typical Durations
  
 Now with the formula and table to calculate note durations, we can 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Numeric Variables:,"Computers are really good at remembering things, where we 
 humans sometimes have trouble.  The BASIC language allows us to 
 give names to places in the computer's memory and then store 
 information in them.  These places are called variables.
  
 There are four types of variables: numeric variables, string 
  
 variables, numeric array variables, and string array variables.  You 
 will learn how to use numeric variables in this chapter and the 
 others in later chapters.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 4: Thinking Like a Programmer,"One of the hardest things to learn is how to think like a 
  
 programmer.  A programmer is not created by simple books or 
 classes but grows from within an individual.  To become a “good” 
 programmer takes passion for technology, self learning, basic 
 intelligence, and a drive to create and explore.
  
 You are like the great explorers Christopher Columbus, Neil 
  
 Armstrong, and Yuri Gagarin (the first human in space).  You have 
 an unlimited universe to explore and to create within the computer. 
 The only restrictions on where you can go will be your creativity and 
 willingness to learn.
  
 A program to develop a game or interesting application can often 
 exceed several thousand lines of computer code.  This can very 
 quickly become overwhelming, even to the most experienced 
 programmer.  Often we programmers will approach a complex 
 problem using a three step process, like:
  
 1. 
  
 Think about the problem.
  
 2. 
  
 Break the problem up into pieces and write them down 
 formally.
  
 3. 
  
 Convert the pieces into the computer language you are using.",NA
Pseudocode:,"Pseudocode is a fancy word for writing out, step by step, what your 
 program needs to be doing.  The word pseudocode comes from the 
 Greek prefix “pseudo-” meaning fake and “code” for the actual 
 computer programming statements.  It is not created for the 
 computer to use directly but it is made to help you understand the 
 complexity of a problem and to break it down into meaningful 
 pieces.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Flowcharting:,"Another technique that programmers use to understand a problem 
 is called flowcharting.  Following the old adage of “a picture is worth 
 a thousand words”, programmers will sometimes draw a diagram 
 representing the logic of a program.  Flowcharting is one of the 
 oldest and commonly used methods of drawing this structure.
  
 This brief introduction to flowcharts will only cover a small part of 
 what that can be done with them, but with a few simple symbols 
 and connectors you will be able to model very complex processes. 
  
 This technique will serve you well not only in programming but in 
 solving many problems you will come across.  Here are a few of the 
 basic symbols:
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Flowcharting Example One:,"You just rolled out of bed and your mom has given you two choices 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Flowcharting Example Two:,"Another food example.  You are thirsty and want a soda from the 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 5: Your Program Asks for ,NA,NA
Advice.,"This chapter introduces a new type of variables (string variables) 
 and how to get text and numeric responses from the user.",NA
Another Type of Variable – The String Variable:,"In Chapter 3 you got to see numeric variables, which can only store 
 whole or decimal numbers.  Sometimes you will want to store a 
 string, text surrounded by “”, in the computer's memory.  To do this 
 we use a new type of variable called the string variable.  A string 
 variable is denoted by appending a dollar sign 
 $
  on a variable name.
  
 You may assign and retrieve values from a string variable the same 
 way you use a numeric variable.  Remember, the variable name, 
 case sensitivity, and reserved word rules are the same with string 
 and numeric variables.
  
 1 
 # ilikejim.kbs
  
 2 
 name$ = ""Jim""
  
 3 
 firstmessage$ = name$ + "" is my friend.""
  
 4 
 secondmessage$ = ""I like "" + name$ + "".""
  
 5 
 print firstmessage$
  
 6 
 say firstmessage$
  
 7 
 print secondmessage$
  
 8 
 say secondmessage$
  
 Program 23: I Like Jim
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Input – Getting Text or Numbers From the User:,"So far we have told the program everything it needs to know in the 
 programming code.  The next statement to introduce is 
 input
 .  The 
 input
  statement captures either a string or a number that the user 
 types into the text area and stores that value in a variable.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
input,NA,NA
“prompt”,NA,NA
", ",NA,NA
stringvariable$ ,NA,NA
input,NA,NA
“prompt”,NA,NA
", ",NA,NA
numericvariable ,NA,NA
input,NA,NA
stringvariable$ ,NA,NA
input,NA,NA
numericvariable,"The 
 input
  statement will retrieve a string or a number 
 that the user types into the text output area of the screen. 
  
 The result will be stored in a variable that may be used 
 later in the program.
  
 A prompt message, if specified, will display on the text 
 output area and the cursor will directly follow the prompt.
  
 If a numeric result is desired (numeric variable specified in 
 the statement) and the user types a string that can not be 
 converted to a number the input statement will set the 
 variable to zero (0).
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
"Chapter 6: Decisions, Decisions, ",NA,NA
Decisions.,"The computer is a whiz at comparing things.  In this chapter we will 
 explore how to compare two expressions, how to work with complex 
 comparisons, and how to optionally execute statements depending 
 on the results of our comparisons.  We will also look at how to 
 generate random numbers.",NA
True and False:,"The BASIC-256 language has one more special type of data that can 
 be stored in numeric variables.  It is the Boolean data type. 
  
 Boolean values are either true or false and are usually the result of 
 comparisons and logical operations.  Also to make them easier to 
 work with there are two Boolean constants that you can use in 
 expressions, they are: 
 true
  and 
 false
 . 
  
  
 true 
  
 false
  
 The two Boolean constants 
 true
  and 
 false
  can be used in 
 any numeric or logical expression but are usually the 
 result of a comparison or logical operator.  Actually, the 
 constant 
 true
  is stored as the number one (1) and 
 false
  is 
 stored as the number zero (0).",NA
Comparison Operators:,"Previously we have discussed the basic arithmetic operators,  it is 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
<,"Less Than 
  
 expression1 < expression2 
  
 Return true if expression1 is less than expression2, else 
 return false.",NA
<=,"Less Than or Equal 
  
 expression1 <= expression2 
  
 Return true if expression1 is less than or equal to 
 expression2, else return false.",NA
>,"Greater Than 
  
 expression1 > expression2 
  
 Return true if expression1 is greater than expression2, else 
 return false.",NA
>=,"Greater Than or Equal 
  
 expression1 >= expression2 
  
 Return true if expression1 is greater than or equal to 
 expression2, else return false.",NA
=,"Equal 
  
 expression1 = expression2 
  
 Return true if expression1 is equal to expression2, else return 
 false.",NA
<>,"Not Equal 
  
 Expression1 <> expression2 
  
 Return true if expression1 is not equal to expression2, else 
 return false.
  
 Table 6: Comparison Operators
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Making Simple Decisions – The If Statement:,"The 
 if
  statement can use the result of a comparison to optionally 
 execute a statement or block of statements.  This first program 
 (Program 28) uses three 
 if
  statements to display whether your 
 friend is older, the same age, or younger. 
  
 1 
 # compareages.kbs - compare two ages
  
 2 
 input ""how old are you?"", yourage
  
 3 
 input ""how old is your friend?"", friendage
  
 4
  
 5 
  
 6
  
 7
  
 8 
  
 9
  
 print ""You are ""; 
  
 if yourage < friendage then print ""younger 
  
 than""; 
  
 if yourage = friendage then print ""the same age 
 as""; 
  
 if yourage > friendage then print ""older than""; 
 print "" your friend""
  
  
 Program 28: Compare Two Ages
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
if,NA,NA
condition,NA,NA
then,NA,NA
statement,"If the condition evaluates to 
 true
  then execute the 
 statement following the 
 then
  clause.",NA
Random Numbers:,"When we are developing games and simulations it may become 
 necessary for us to simulate dice rolls, spinners, and other random 
 happenings.  BASIC-256 has a built in random number generator to 
 do these things for us.",NA
rand,"A random number is returned when rand is used in an 
 expression.  The returned number ranges from zero to 
 one, but will never be one (
  0
 ≥
 n
 1.0
  ).
  
 Often you will want to generate an integer from 1 to r, the 
 following statement can be used n = int(rand * r) + 1
  
  
 1 
  
 # coinflip.kbs
  
 2 
  
 coin = rand
  
 3 
  
 if coin < .5 then print ""Heads.""
  
 4 
  
 if coin >= .5 then print ""Tails.""
  
 Program 29: Coin Flip
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Logical Operators:,"Sometimes it is necessary to join simple comparisons together. This 
 can be done with the four logical operators: 
 and
 , 
 or
 , 
 xor
 , and 
 not
 .  
 The logical operators work very similarly to the way 
  
 conjunctions work in the English language, except that “or” is used 
 as one or the other or both. 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
AND,"Logical And 
  
 expression1 AND expression2 
  
 If both expression1 and experssion2 are true then return a 
 true value, else return false.
  
 AND
  
 expression1
  
 TRUE
  
 FALSE
  
 expression 
 2
  
 TRUE
  
 TRUE
  
 FALSE
  
 FALSE
  
 FALSE
  
 FALSE",NA
OR,"Logical Or 
  
 expression1 OR expression2 
  
 If either expression1 or experssion2 are true then return a 
 true value, else return false.
  
 OR
  
 expression1
  
 TRUE
  
 FALSE
  
 expression 
 2
  
 TRUE
  
 TRUE
  
 TRUE
  
 FALSE
  
 TRUE
  
 FALSE
  
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
XOR,"Logical Exclusive Or 
  
 expression1 XOR expression2 
  
 If only one of the two expressions is true then return a true 
 value, else return false.  The XOR operator works like “or” 
 often does in the English language - “You can have your cake 
 xor you can eat it:.
  
 OR
  
 expression1
  
 TRUE
  
 FALSE
  
 expression 
 2
  
 TRUE
  
 FALSE
  
 TRUE
  
 FALSE
  
 TRUE
  
 FALSE",NA
NOT,"Logical Negation (Not) 
  
 NOT expression1 
  
 Return the opposite of expression1.  If expression 1 was true 
 then return false.  If experssion1 was false then return a 
 true.
  
 NOT
  
  
 expressio 
 n1
  
 TRUE
  
 FALSE
  
 FALS E
  
 TRUE",NA
andorxornot,"The four logical operations: logical and, logical or, logical 
 exclusive or, and logical negation (not) join or modify 
 comparisons.  You may also use parenthesis to group 
 operations together.
  
    
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Making Decisions with Complex Results – If/End ,NA,NA
If:,"When we are writing programs it sometimes becomes necessary to 
 do multiple statements when a condition is true.  This is done with 
 the alternate format of the 
 if
  statement.  With this statement you do 
 not place a statement on the same line as the if, but you place 
 multiple (one or more) statements on lines following the if 
  
 statement and then close the block of statements with the 
 end if 
 statement.",NA
if,NA,NA
condition,NA,NA
then ,NA,NA
statement(s) to execute when true ,NA,NA
end ,NA,NA
if,"The 
 if
 /
 end if
  statements allow you to create a block of 
 programming code to execute when a condition is true.  It 
 is often customary to indent the statements with in the 
 if/end if
  statements so they are not confusing to read.
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Deciding Both Ways – If/Else/End If:,"The third and last form of the 
 if
  statement is the 
 if/else/end if
 .  This 
 extends the if/end if statements by allowing you to create a block of 
 code to execute if the condition is true and another block to 
  
 execute when the condition is false.",NA
if,NA,NA
condition,NA,NA
then,NA,NA
 statement(s) to execute when true ,NA,NA
else,NA,NA
 statement(s) to execute when false ,NA,NA
end if,"The 
 if
 , 
 else
 , and 
 end if
  statements allow you to define 
 two blocks of programming code.  The first block, after 
 the 
 then
  clause, executes if the condition is true and the 
 second block, after the 
 else
  clause, will execute when the 
 condition if false.
  
 Program 31 re-writes Program 29 using the 
 else
  statement.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Nesting Decisions:,"One last thing.  With the 
 if/end if
  and the 
 if/else/end if
  statements it 
 is possible to nest an 
 if
  inside the code of another.  This can become 
 confusing but you will see this happening in future chapters.
  
  
 This chapter's big program is a program to roll a single 6-
 sided die and then draw on the graphics display the 
 number of dots.
  
  
 1 
 # dieroll.kbs
  
 2 
 # hw - height and width of the dots on the dice
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 7: Looping and Counting - Do ,NA,NA
it Again and Again.,"So far our program has started, gone step by step through our 
 instructions, and quit.  While this is OK for simple programs, most 
 programs will have tasks that need to be repeated, things counted, 
 or both.  This chapter will show you the three looping statements, 
 how to speed up your graphics, and how to slow the program 
 down.",NA
The For Loop:,"The most common loop is the 
 for
  loop.  The 
 for
  loop repeatedly 
 executes a block of statements a specified number of times, and 
 keeps track of the count.  The count can begin at any number, end 
 at any number, and can step by any increment.  Program 33 shows 
 a simple for statement used to say the numbers 1 to 10 
  
 (inclusively).  Program 34 will count by 2 starting at zero and ending 
 at 10.
  
 1 
  
 # for.kbs
  
 2 
  
 for t = 1 to 10
  
 3
  
  print t
  
 4
  
  say t
  
 5 
  
 next t
  
 Program 33: For Statement
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
for,NA,NA
variable,NA,NA
=,NA,NA
expr1,NA,NA
to,NA,NA
expr2,NA,NA
 [,NA,NA
step,NA,NA
expr3,NA,NA
],NA,NA
 ,NA,NA
statement(s) ,NA,NA
next,NA,NA
variable,"Execute a specified block of code a specified number of 
 times.  The 
 variable
  will begin with the value of 
 expr1
 . The 
 variable
  will be incremented by 
 expr3
  (or one if step is not 
 specified) the second and subsequent time through the 
 loop.  Loop terminates if 
 variable
  exceeds 
 expr2
 . 
  
 Using a loop we can easily draw very interesting graphics.  Program 
 35 will draw a Moiré Pattern.  This really interesting graphic is 
 caused by the computer being unable to draw perfectly straight 
 lines.  What is actually drawn are pixels in a stair step fashion to 
 approximate a straight line.  If you look closely at the lines we have 
 drawn you can see that they actually are jagged.
  
 1 
  
 # moire.kbs
  
 2 
  
 clg
  
 3 
  
 color black
  
 4 
  
 for t = 1 to 300 step 3
  
 5
  
  line 0,0,300,t
  
 6
  
  line 0,0,t,300
  
 7 
  
 next t
  
 Program 35: Moir
 é
  Pattern
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
pause,NA,NA
seconds,"The pause statement tells BASIC-256 to stop executing 
 the current program for a specified number of seconds. 
 The number of seconds may be a decimal number if a 
 fractional second pause is required.",NA
Do Something Until I Tell You To Stop:,"The next type of loop is the 
 do/until
 .  The 
 do/until 
 repeats a block 
 of code one or more times.  At the end of each iteration a logical 
 condition is tested.  The loop repeats as long as the condition is 
 false
 .  Program 37 uses the do/until loop to repeat until the user 
 enters a number from 1 to 10.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
do ,NA,NA
statement(s) ,NA,NA
until,NA,NA
condition,"Do the statements in the block over and over again while 
 the condition is false.  The statements will be executed 
 one or more times.
  
 Program 38 uses a 
 do/until
  loop to count from 1 to 10 like Program 
 33 did with a 
 for
  statement.
  
 1 
  
 # dountilfor.kbs
  
 2 
  
 t = 1
  
 3 
  
 do
  
 4
  print t
  
 5
  t = t + 1
  
 6 
  
 until t >= 11
  
 Program 38: Do/Until Count to 10
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Do Something While I Tell You To Do It:,"The third type of loop is the 
 while/end while
 .  It tests a 
 condition before executing each iteration and if it evaluates to 
 true then executes the code in the loop.  The 
 while/end while
  
 loop may execute the code inside the loop zero or more times.
  
 Sometimes we will want a program to loop forever, until the user 
 stops the program.  This can easily be accomplished using the 
 Boolean 
 true
  constant (see Program 39).
  
 1 
  
 # whiletrue.kbs
  
 2 
  
 while true
  
 3
  
  print “nevermore “;
  
 4 
  
 end while
  
 Program 39: Loop Forever
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
while,NA,NA
condition ,NA,NA
statement(s) ,NA,NA
end while,"Do the statements in the block over and over again while 
 the condition is true.  The statements will be executed 
 zero or more times.
  
 Program 40 uses a while loop to count from 1 to 10 like Program 33 
 did with a 
 for
  statement.
  
 1 
 # whilefor.kbs
  
 2 
 t = 1
  
 3 
 while t <= 10
  
 4
  print t
  
 5
  t = t + 1
  
 6 
 end while
  
 Program 40: While Count to 10
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Fast Graphics:,"When we need to execute many graphics quickly, like with 
  
 animations or games, BASIC-256 offers us a fast graphics system. 
 To turn on this mode you execute the 
 fastgraphics
  statement.  Once 
 fastgraphics
  mode is started the graphics output will only be 
  
 updated once you execute the 
 refresh
  statement.",NA
fastgraphics ,NA,NA
refresh,"Start the 
 fastgraphics
  mode.  In fast graphics the screen 
 will only be updated when the 
 refresh
  statement is 
  
 executed.
  
 Once a program executes the 
 fastgraphics
  statement it 
 can not return to the standard graphics (slow) mode.
  
  
 1 
  
 # kalidescope.kbs
  
 2 
  
 clg
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 8: Custom Graphics – Creating ,NA,NA
Your Own Shapes.,"This chapter we will show you how to draw colorful words and 
 special shapes on your graphics window.  Several topics will be 
 covered, including: fancy text; drawing polygons on the graphics 
 output area; and stamps, where we can position, re-size, and rotate 
 polygons.  You also will be introduced to angles and how to 
  
 measure them in radians.",NA
Fancy Text for Graphics Output:,"You have been introduced to the 
 print
  statement (Chapter 1) and 
 can output strings and numbers to the text output area.  The 
 text 
 and 
 font
  commands allow you to place numbers and text on the 
 graphics output area.
  
 1 
 # graphichello.kbs
  
 2 
 clg
  
 3 
 color red
  
 4 
 font ""Tahoma"",33,100
  
 5 
 text 100,100,""Hello.""
  
 6 
 font ""Impact"",33,50
  
 7 
 text 100,150,""Hello.""
  
 8 
 font ""Courier New"",33,50
  
 9 
 text 100,250,""Hello.""
  
 Program 43: Hello on the Graphics Output Area
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
font,NA,NA
font_name,NA,NA
", ",NA,NA
size_in_point,NA,NA
", ",NA,NA
weight,"Set the font, size, and weight for the next 
 text
  statement 
 to use to render text on the graphics output area.
  
 Argument
  
 Description
  
 font_name
  
 String containing the system font name to 
 use.  A font must be previously loaded in 
 the system before it may be used. 
  
 Common font names under Windows 
 include: ""Verdana"", ""Courier New"", 
 ""Tahoma"", ""Arial"", and ""Times New 
 Roman"".
  
 size_in_point 
  
 Height of text to be rendered in a 
  
 measurement known as point.  There are 
 72 points in an inch.
  
 weight
  
 Number from 1 to 100 representing how 
 dark letter should be.  Use 25 for light, 50 
 for normal, and 75 for bold.",NA
text,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
expression,"Draw the contents of the 
 expression
  on the graphics 
 output area with it's top left corner specified by 
 x
  and 
 y
 . 
 Use the font, size, and weight specified in the last 
 font 
 statement.
  
    
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Resizing the Graphics Output Area:,"By default the graphics output area is 300x300 pixels.  While this is 
 sufficient for many programs, it may be too large or too small for 
 others.  The graphsize statement will re-size the graphics output 
 area to what ever custom size you require.  Your program may also 
 use the graphwidth and graphheight functions to see what the 
 current graphics size is set to.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
graphsize,NA,NA
width,NA,NA
", ",NA,NA
height,"Set the graphics output area to the specified 
 height
  and 
 width
 .",NA
graphwidth,NA,NA
 or ,NA,NA
graphwidth,NA,NA
() ,NA,NA
graphheight,NA,NA
 or ,NA,NA
graphheight,NA,NA
(),"Functions that return the current graphics height and 
 width for you to use in your program.",NA
Creating a Custom Polygon:,"In previous chapters we learned how to draw rectangles and circles. 
 Often we want to draw other shapes.  The 
 poly
  statement will allow 
 us to draw a custom polygon anywhere on the screen.
  
 Let's draw a big red arrow in the middle of the graphics output area. 
 First, draw it on a piece of paper so we can visualize the coordinates 
 of the vertices of the arrow shape.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
poly,NA,NA
 {,NA,NA
x1,NA,NA
", ",NA,NA
y1,NA,NA
", ",NA,NA
x2,NA,NA
", ",NA,NA
y2,NA,NA
 ...} ,NA,NA
poly,NA,NA
numeric_array,Draw a polygon.,NA
Stamping a Polygon:,"The 
 poly
  statement allowed ue to place a polygon at a specific 
 location on the screen but it would be difficult to move it around or 
 adjust it.  These problems are solved with the 
 stamp
  statement. 
  
 The stamp statement takes a location on the screen, optional 
 scaling (re-sizing), optional rotation, and a polygon definition to 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
stamp,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", {",NA,NA
x1,NA,NA
", ",NA,NA
y1,NA,NA
", ",NA,NA
x2,NA,NA
", ",NA,NA
y2,NA,NA
 ...} ,NA,NA
stamp,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
numeric_array ,NA,NA
stamp,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
scale,NA,NA
", {",NA,NA
x1,NA,NA
", ",NA,NA
y1,NA,NA
", ",NA,NA
x2,NA,NA
", ",NA,NA
y2,NA,NA
 ...} ,NA,NA
stamp,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
scale,NA,NA
", ",NA,NA
numeric_array,NA,NA
...} ,NA,NA
stamp,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
scale,NA,NA
", ",NA,NA
rotate,NA,NA
", ",NA,NA
numeric_array,NA,NA
stamp,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
scale,NA,NA
", ",NA,NA
rotate,NA,NA
", {",NA,NA
x1,NA,NA
", ",NA,NA
y1,NA,NA
", ",NA,NA
x2,NA,NA
", ",NA,NA
y2 ,"Draw a polygon with it's origin (0,0) at the screen position 
 (x,y).  Optionally scale (re-size) it by the decimal scale 
 where 1 is full size.  Also you may also rotate the stamp 
 clockwise around it's origin by specifying how far to rotate 
 as an angle expressed in radians (0 to 2
 
 ). 
  
  
  
 Radians 0 to 2
 
  
 Angles in BASIC-256 are expressed in a unit of measure 
 known as a radian.  Radians range from 0 to 2
 
 .  A right 
 angle is 
 
 /2 radians and an about face is 
 
  radians.  You 
 can convert degrees to radians with the formula 
  
 r
 =
 d
  /180∗
  .
  
    
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
pi,"The constant 
 pi
  can be used in expressions so that you do 
 not have to remember the value of 
 
 .  
 
  is approximately 
 3.1415.
  
  
  
 In Program 47, add statements to make the color random. 
 Also create your own polygon to stamp.
  
  
  
 Let's send flowers to somebody special.  The following 
 program draws a flower using rotation and a stamp.
  
     
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 9: Subroutines – Reusing Code.,"This chapter introduces the concept of setting labels within your 
 code and then jumping to those labels.  This will allow a program to 
 execute the code in a more complex order.  You will also see the 
 subroutine.  A 
 gosub
  acts like a jump with the ability to jump back.",NA
Labels and Goto:,"In Chapter 7 we saw how to use language structures to perform 
 looping.  In Program 49 we can see an example of looping forever 
 using a label and a 
 goto
  statement.
  
 1 
 # gotodemo.kbs
  
 2 
 top:
  
 3 
 print ""hi""
  
 4 
 goto top
  
 Program 49: Goto With a Label
  
 hi 
  
 hi 
  
 hi 
  
 hi 
  
 ... repeats forever
  
 Sample Output 49: Goto With a Label
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
label,NA,NA
:,"A label allows you to name a place in your program so you 
 may jump to that location later in the program.  You may 
 have multiple labels in a single program.
  
 A label name is followed with a colon (:); must be on a 
 line with no other statements; must begin with a letter; 
 may contain letters and numbers; and are case sensitive.  
 Also, you can not use words reserved by the BASIC-256 
  
 language when naming your variables (see Appendix I).
  
 Examples of valid labels include: top:, far999:, and 
 About:.",NA
goto,NA,NA
label,"The 
 goto
  statement causes the execution to jump to the 
 statement directly following the label.
  
 Some programmers use labels with 
 goto
  statements throughout 
 their programs.  While it is sometimes easier to program with 
 goto 
 statements they can add complexity to large programs, making the 
 program more difficult to debug and maintain.  It is recommended 
 that you keep the use of 
 goto
  statements to an absolute minimum.
  
 Let's take a look at another example of a label and 
 goto
  statement. 
 In Program 50 we create a colorful clock.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
hour,NA,NA
  or ,NA,NA
hour,NA,NA
() ,NA,NA
minute,NA,NA
 or ,NA,NA
minute,NA,NA
() ,NA,NA
second,NA,NA
  or ,NA,NA
second,NA,NA
() ,NA,NA
month,NA,NA
 or ,NA,NA
month,NA,NA
() ,NA,NA
day,NA,NA
  or ,NA,NA
day,NA,NA
() ,NA,NA
year,NA,NA
 or ,NA,NA
year,NA,NA
(),"The functions 
 year
 , 
 month
 , 
 day
 , 
 hour
 , 
 minute
 , and 
 second
  return the components of the system clock.  They 
 allow your program to tell what time it is.
  
 year
  
 Returns the system 4 digit year.
  
 month
  
 Returns month number 0 to 11.  0 – 
 January, 1-February...
  
 day
  
 Returns the day of the month 1 to 28,29,30, 
 or 31.
  
 hour
  
 Returns the hour 0 to 23 in 24 hour format. 
 0 – 12 AM, 1- 1 AM, … 13 – 12 PM, 14 – 1 
 PM, ...
  
 minute
  
 Returns the minute 0 to 59 in the current 
 hour.
  
 second
  
 Returns the second 0 to 59 in the current 
 minute.",NA
Reusing Blocks of Code – The Gosub Statement:,"Throughout many programs we will find lines or even whole 
  
 sections of code being needed over and over again.  To help with 
 this problem BASIC-256 includes the concept of a subroutine.  A 
 subroutine is a block of code that can be called by other parts of the 
 program to do a task or part of a task.  When a subroutine is 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
gosub,NA,NA
label,"The 
 gosub
  statement causes the execution to jump to the 
 subroutine defined by the 
 label
 .
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
return,"Execute the 
 return
  statement within a subroutine to send 
 control back to where it was called from.",NA
end,"Terminates the program (stop).
  
 Now that we have seen the subroutine in action let's write a new 
 digital clock program using a subroutine to format the time and 
 date better (Program 52). 
  
 1 
 # textclockimproved.kbs 
  
 2 
  
 3 
 fastgraphics 
  
 4 
  
 5 
 while true 
  
 6
  
  
  color blue 
  
 7
  
  
  rect 0, 0, graphwidth, graphheight 
 8
  
  
  color white 
  
 9
  
  
  font ""Times New Roman"", 40, 100 
 10 
  
 11
  
  
  line$ = """"
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 10: Mouse Control – Moving ,NA,NA
Things Around.,"This chapter will show you how to make your program respond to a 
 mouse.  There are two different ways to use the mouse: tracking 
 mode and clicking mode.  Both are discussed with sample 
  
 programs.",NA
Tracking Mode:,"In mouse tracking mode, there are three numeric functions 
  
 (
 mousex
 , 
 mousey
 , and 
 mouseb
 ) that will return the coordinates 
 of the mouse pointer over the graphics output area.  If the mouse is 
 not over the graphics display area then the mouse movements will 
 not be recorded (the last location will be returned).
  
 1 
  
 2
  
 3
  
 # mousetrack.kbs 
  
 print ""Move the mouse around the graphics 
 window."" 
  
 print ""Click left mouse button to quit.""
  
 4 
  
 5 
 fastgraphics 
  
 6
  
 7
  
 8 
  
 9 
  
 10 
 11 
 12 
 13 
 14 
 15 
 16
  
 # do it over and over until the user clicks 
 left 
  
 while mouseb <> 1
  
  # erase screen
  
  color white
  
  rect 0, 0, graphwidth, graphheight
  
  # draw new ball
  
  color red
  
  circle mousex, mousey, 10
  
  refresh 
  
 end while
  
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
mousex,NA,NA
 ,NA,NA
or ,NA,NA
mousex,NA,NA
() ,NA,NA
mousey,NA,NA
 ,NA,NA
or ,NA,NA
mousey,NA,NA
() ,NA,NA
mouseb,NA,NA
 ,NA,NA
or ,NA,NA
mouseb,NA,NA
(),"The three mouse functions will return the current location 
 of the mouse as it is moved over the graphics display 
 area.  Any mouse motions outside the graphics display 
 area are not recorded, but the last known coordinates will 
 be returned.
  
 mousex
  
  
 Returns the x coordinate of the mouse pointer 
 position.  Ranges from 0 to 
 graphwidth
  -1.
  
 mousey
  
  
 Returns the y coordinate of the mouse pointer 
 position.  Ranges from 0 to 
 graphheight
  -1.
  
 mouseb
  
  
 0
  
 Returns this value when no mouse 
 button is being pressed.
  
 1
  
 Returns this value when the “left” 
 mouse button is being pressed.
  
 2
  
 Returns this value when the “right” 
 mouse button is being pressed.
  
 4
  
 Returns this value when the “center” 
 mouse button is being pressed.
  
 If multiple mouse buttons are being pressed at 
 the same time then the value returned will be 
 the button values added together.",NA
Clicking Mode:,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
clickx,NA,NA
 ,NA,NA
 ,NA,NA
or ,NA,NA
clickx,NA,NA
() ,NA,NA
clicky,NA,NA
 ,NA,NA
 ,NA,NA
or ,NA,NA
clicky,NA,NA
() ,NA,NA
clickb,NA,NA
 or ,NA,NA
clickb,NA,NA
(),"The values of the three click functions are updated each 
 time a mouse button is clicked when the pointer is on the 
 graphics output area.  The last location of the mouse when 
 the last click was received are available from these three 
 functions.
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
clickclear,"The 
 clickclear
  statement resets the 
 clickx
 , 
 clicky
 , and 
 clickb
  functions to zero so that a new click will register 
 when 
 clickb
  <> 0.
  
  
  
 The big program this chapter uses the mouse to move 
 color sliders so that we can see all 16,777,216 different 
 colors on the screen.
  
  
 1 
 # colorchooser.kbs 
  
 2 
 fastgraphics 
  
 3
  
 4 
  
 5
  
 print ""colorchooser - find a color"" 
  
 print ""click and drag red, green and blue 
 sliders""
  
 6 
  
 7 
 # variables to store the color parts 
 8 
 r = 128 
  
 9 
 g = 128 
  
 10 
  
 b = 128 
 11 
  
 12 
 gosub display 
  
 13 
  
 14 
 while true 
  
 15
  
  
  
  # wait for click 
 16
  
  
  while 
 mouseb = 0
  
     
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 11: Keyboard Control – Using ,NA,NA
the Keyboard to Do Things.,"This chapter will show you how to make your program respond to 
 the user when a key is pressed (arrows, letters, and special keys) on 
 the keyboard.",NA
Getting the Last Key Press:,"The 
 key
  function returns the last raw keyboard code generated by 
 the system when a key was pressed.  Certain keys (like control-c 
 and function-1) are captured by the BASIC256 window and will not 
 be returned by key.  After the last key press value has been 
 returned the function value will be set to zero (0) until another 
 keyboard key has been pressed.
  
 The key values for printable characters (0-9, symbols, letters) are 
 the same as their upper case Unicode values regardless of the 
 status of the caps-lock or shift keys.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
key ,NA,NA
key,NA,NA
(),"The 
 key
  function returns the value of the last keyboard 
 key the user has pressed.  Once the key value is read by 
 the function, it is set to zero to denote that no key has 
 been pressed.
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
asc,NA,NA
(,NA,NA
expression,NA,NA
),"The 
 asc
  function returns an integer representing the 
 Unicode value of the first character of the string 
 expression
 .",NA
chr,NA,NA
(,NA,NA
expression,NA,NA
),"The 
 chr
  function returns a string, containing a single 
 character with the Unicode value of the integer 
  
 expression
 .
  
 How about we look at a more complex example?  Program 58 Draws 
 a red ball on the screen and the user can move it around using the 
 keyboard.
  
 1 
  
 # moveball.kbs
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
"Chapter 12: Images, WAVs, and Sprites","This chapter will introduce the really advanced multimedia and 
 graphical statements.  Loading images from files, playing sounds 
 asynchronously from WAV files, and really cool animation using 
 sprites.",NA
Images From a File:,"So far we have seen how to create shapes and graphics using the 
 built in drawing statements.  The 
 imgload
  statement allows you to 
 load a picture from a file and display it in your BASIC-256 
 programs.
  
 1
  
  
 2
  
  
 3
  
  
 4
  
 5
  
 # imgload_ball.kbs - Show Imgload 
  
 clg 
  
 for i = 1 to 50
  
  imgload rand * graphwidth, rand * 
 graphheight, ""greenball.png"" 
  
 next i
  
  
 Program 60: Imgload a Graphic
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
imgload,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
filename ,NA,NA
imgload,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
scale,NA,NA
", ",NA,NA
filename ,NA,NA
imgload,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
scale,NA,NA
", ",NA,NA
rotation,NA,NA
", ",NA,NA
filename,"Read in the picture found in the file and display it on the 
 graphics output area.  The values of 
 x
  and 
 y
  represent the 
 location to place the CENTER of the image. 
  
 Images may be loaded from many different file formats, 
 including: BMP, PNG, GIF, JPG, and JPEG.
  
 Optionally scale (re-size) it by the decimal scale where 1 
 is full size. Also you may also rotate the image clockwise 
 around it's center by specifying how far to rotate as an 
 angle expressed in radians (0 to 2
 
 ).
  
 The 
 imgload
  statement also allows optional scaling and rotation 
 like the 
 stamp
  statement does.  Look at Program 61 for an 
 example.
  
 1
  
 2
  
  
 3
  
  
 4
  
  
 5
  
 6 
  
 7
  
 # imgload_picasso.kbs - Show Imgload with 
 rotation and scaling 
  
 graphsize 500,500 
  
 clg 
  
 for i = 1 to 50
  
  imgload graphwidth/2, graphheight/2, i/50, 
 2*pi*i/50, ""picasso_selfport1907.jpg"" 
  
 next i 
  
 say ""hello Picasso.""
  
  
 Program 61: Imgload a Graphic with Scaling and Rotation
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Playing Sounds From a WAV file:,"So far we have explored making sounds and music using the 
 sound 
 command and text to speech with the 
 say
  statement.  BASIC-256 
 will also play sounds stored in WAV files.  The playback of a sound 
 from a WAV file will happen in the background.  Once the sound 
 starts the program will continue to the next statement and the 
 sound will continue to play.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
wavplay,NA,NA
filename ,NA,NA
wavwait ,NA,NA
wavstop,"The 
 wavplay
  statement loads a wave audio file (.wav) 
 from the current working folder and plays it.  The playback 
 will be synchronous meaning that the next statement in 
 the program will begin immediately as soon as the audio 
 begins playing.
  
 Wavstop
  will cause the currently playing wave audio file 
 to stop the synchronous playback and 
 wavwait
  will cause 
 the program to stop and wait for the currently playing 
 sound to complete.
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Moving Images - Sprites:,"Sprites are special graphical objects that can be moved around the 
 screen without having to redraw the entire screen.  In addition to 
 being mobile you can detect when one sprite overlaps (collides) 
 with another.  Sprites make programming complex games and 
 animations much easier.
  
 1 
  
 # sprite_1ball.kbs 
  
 2 
  
 3 
  
 color white 
  
 4 
  
 rect 0, 0, graphwidth, graphheight 
 5 
  
 6 
  
 spritedim 1 
  
 7 
  
 8 
  
 spriteload 0, ""blueball.png"" 
  
 9 
  
 spriteplace 0, 100,100 
  
 10 
  
  
 spriteshow 0 
 11 
  
 12 
  
 dx = rand * 10 
  
 13 
  
 dy = rand * 10 
  
 14
  
 15 
 16
  
 17 
 18
  
 19 
 20
  
 21 
 22
  
 23
  
 while true
  
  if spritex(0) <=0 or spritex(0) >= 
 graphwidth -1 then
  
  
  dx = dx * -1
  
  
  wavplay 
  
 ""4359__NoiseCollector__PongBlipF4.wav"" 
 end if
  
  if spritey(0) <= 0 or spritey(0) >= 
 graphheight -1 then
  
  
  dy = dy * -1
  
  
  wavplay 
  
 ""4361__NoiseCollector__pongblipA_3.wav"" 
 endif
  
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
spritedim,NA,NA
numberofsprites,"The 
 spritedim
  statement initializes, or allocates in 
 memory, places to store the specified number of sprites. 
  
 You may allocate as many sprites as your program may 
 require but your program may slow down if you create too 
 many sprites.",NA
spriteload,NA,NA
spritenumber,NA,NA
", ",NA,NA
filename,"This statement reads an image file (GIF, BMP, PNG, JPG, 
 or JPEG) from the specified path and creates a sprite.
  
 By default the sprite will be placed with its center at 0,0 
 and it will be hidden.  You should move the sprite to the 
 desired position on the screen (
 spritemove
  or 
  
 spriteplace
 ) and then show it (
 spriteshow
 ).",NA
spritehide,NA,NA
spritenumber ,NA,NA
spriteshow,NA,NA
spritenumber,"The 
 spriteshow
  statement causes a loaded, created, or 
 hidden sprite to be displayed on the graphics output area. 
  
 Spritehide
  will cause the specified sprite to not be drawn 
 on the screen.  It will still exist and may be shown again 
 later.
  
     
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
spriteplace,NA,NA
spritenumber,NA,NA
", ",NA,NA
x,NA,NA
", ",NA,NA
y,"The 
 spriteplace
  statement allows you to place a sprite's 
 center at a specific location on the graphics output area.",NA
spritemove,NA,NA
spritenumber,NA,NA
", ",NA,NA
dx,NA,NA
", dy","Move the specified sprite 
 x
  pixels to the right and 
 y
  pixels 
 down.  Negative numbers can also be specified to move 
 the sprite left and up.
  
 A sprite's center will not move beyond the edge of the 
 current graphics output window (0,0) to (
 graphwidth
 -1, 
 graphheight
 -1).
  
 You may move a hidden sprite but it will not be displayed 
 until you show the sprite using the 
 showsprite 
  
 statement.",NA
spritev,NA,NA
(,NA,NA
spritenumber,NA,NA
),"This function returns a true value if a loaded sprite is 
 currently displayed on the graphics output area.  False will 
 be returned if it is not visible.
  
     
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
spriteh,NA,NA
(,NA,NA
spritenumber,NA,NA
) ,NA,NA
spritew,NA,NA
(,NA,NA
spritenumber,NA,NA
) ,NA,NA
spritex,NA,NA
(,NA,NA
spritenumber,NA,NA
) ,NA,NA
spritey,NA,NA
(,NA,NA
spritenumber,NA,NA
),"These functions return various pieces of information about 
 a loaded sprite.",NA
spriteh,Returns the height of a sprite in pixels.,NA
spritew,Returns the width of a sprite in pixels.,NA
spritex,"Returns the position on the x axis of the 
 center of the sprite.",NA
spritey,"Returns the position on the y axis of the 
 center of the sprite.
  
  
 The second sprite example (Program 64) we now have two sprites. 
  
 The first one (number zero) is stationary and the second one 
 (number one) will bounce off of the walls and the stationary sprite.
  
 1 
 # sprite_bumper.kbs 
  
 2 
  
 3 
 color white 
  
 4 
 rect 0, 0, graphwidth, graphheight 
  
 5 
  
 6 
 spritedim 2 
  
 7 
  
 8 
 # stationary bumber 
  
 9 
 spriteload 0, ""paddle.png"" 
  
 10 
  
 spriteplace 0,graphwidth/2,graphheight/2 
 11 
 spriteshow 0 
  
 12 
  
 13 
 # moving ball 
  
 14 
 spriteload 1, ""blueball.png""
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
spritecollide,NA,NA
(,NA,NA
spritenumber1,NA,NA
", ",NA,NA
spritenumber2,NA,NA
),"This function returns true of the two sprites collide with or 
 overlap each other.
  
  
  
 The “Big Program” for this chapter uses sprites and 
 sounds to create a paddle ball game.
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 13: Arrays – Collections of ,NA,NA
Information.,"We have used simple string and numeric variables in many 
  
 programs, but they can only contain one value at a time.  Often we 
 need to work with collections or lists of values.  We can do this with 
 either one-dimensioned or two-dimensioned arrays.  This chapter 
 will show you how to create, initialize, use, and re-size arrays.",NA
One-Dimensional Arrays of Numbers:,"A one-dimensional array allows us to create a list in memory and to 
 access the items in that list by a numeric address (called an index). 
  
 Arrays can be either numeric or string depending on the type of 
 variable used in the 
 dim
  statement.
  
 1 
  
 # numeric1d.kbs 
  
 2 
  
 3 
  
 dim a(10) 
  
 4 
  
 5 
  
 a[0] = 100 
  
 6 
  
 a[1] = 200 
  
 7 
  
 a[3] = a[1] + a[2] 
  
 8 
  
 9 
  
 input ""Enter a number"", a[9] 
  
 10 
  
  
 a[8] = a[9] - a[3] 
 11 
  
 12 
  
 for t = 0 to 9 
  
 13
  
  print ""a["" + t + ""] = "" + a[t] 
 14 
  
 next t
  
 Program 66: One-dimensional Numeric Array
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
dim,NA,NA
variable,NA,NA
(,NA,NA
items,NA,NA
) ,NA,NA
dim,NA,NA
variable,NA,NA
$(,NA,NA
items,NA,NA
) ,NA,NA
dim,NA,NA
variable,NA,NA
(,NA,NA
rows,NA,NA
", ",NA,NA
columns,NA,NA
) ,NA,NA
dim,NA,NA
variable,NA,NA
$(,NA,NA
rows,NA,NA
", ",NA,NA
columns,NA,NA
),"The 
 dim
  statement creates an array in the computer's 
 memory the size that was specified in the parenthesis. 
 Sizes (items, rows, and columns) must be integer values 
 greater than one (1).
  
 The 
 dim
  statement will initialize the elements in the new 
 array with either zero (0) if numeric or the empty string 
 (“”), depending on the type of variable. 
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
variable,NA,NA
[,NA,NA
index,NA,NA
] ,NA,NA
variable,NA,NA
[,NA,NA
rowindex,NA,NA
", ",NA,NA
columnindex,NA,NA
] ,NA,NA
variable,NA,NA
$[,NA,NA
index,NA,NA
] ,NA,NA
variable,NA,NA
$[,NA,NA
rowindex,NA,NA
", ",NA,NA
columnindex,NA,NA
],"You can use an array reference (variable with index(s) in 
 square brackets) in your program almost anywhere you 
 can use a simple variable.  The index or indexes must be 
 integer values between zero (0) and one less than the size 
 used in the 
 dim
  statement.
  
 It may be confusing, but BASIC-256 uses zero (0) for the 
 first element in an array and the last element has an 
 index one less than the size.  Computer people call this a 
 zero-indexed array.
  
 We can use arrays of numbers to draw many balls bouncing on the 
 screen at once.  Program 66 uses 5 arrays to store the location of 
 each of the balls, it's direction, and color.  Loops are then used to 
 initialize the arrays and to animate the balls.  This program also 
 uses the 
 rgb()
  function to calculate and save the color values for 
 each of the balls.
  
 1 
  
 # manyballbounce.kbs 
  
 2 
  
 fastgraphics 
  
 3 
  
 4 
  
 r = 10  # size of ball 
  
 5 
  
  
 balls = 50  # number of balls 
 6 
  
 7 
  
 dim x(balls) 
  
 8 
  
 dim y(balls) 
  
 9 
  
 dim dx(balls) 
  
 10 
  
 dim dy(balls) 
  
 11 
  
 dim colors(balls)
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
rgb,NA,NA
(,NA,NA
redexp,NA,NA
", ",NA,NA
greenexp,NA,NA
", ",NA,NA
blueexp,NA,NA
),"The 
 rgb
  function returns a single number that represents 
 a color expressed by the three values.  Remember that 
 color component values have the range from 0 to 255.
  
 Another example of a ball bouncing can be seen in Program 68. 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Arrays of Strings:,"Arrays can also be used to store string values.  To create a string 
 array use a string variable in the 
 dim
  statement.  All of the rules 
 about numeric arrays apply to a string array except the data type is 
 different.  You can see the use of a string array in Program 69.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Assigning Arrays:,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
array,NA,NA
 = {,NA,NA
value0,NA,NA
", ",NA,NA
value1,NA,NA
", … } ",NA,NA
array,NA,NA
$ = {,NA,NA
value0,NA,NA
", ",NA,NA
value1,NA,NA
", … }","An array may be assigned values (starting with index 0) 
 from a list of values enclosed in curly braces.  This works 
 for numeric and string arrays.",NA
Sound and Arrays:,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Graphics and Arrays:,"In Chapter 8 we also saw the use of lists for creating polygons and 
 stamps.  Arrays may also be used to draw stamps and polygons. 
  
 This may help simplify your code by allowing the same stamp or 
 polygon to be defined once, stored in an array, and used in various 
 places in your program.
  
 In an array used for stamps and polygons, the even elements (0, 2, 
 4, …) contain the x value for each of the points and the odd 
  
 element (1, 3, 5, …) contain the y value for the points.  The array 
 will have two values for each point in the shape.
  
 In Program 72 we will use the stamp from the mouse chapter to 
 draw a big X with a shadow.  This is accomplished by stamping a 
 gray shape shifted in the direction of the desired shadow and then 
 stamping the object that is projecting the shadow.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Advanced - Two Dimensional Arrays:,"So far in this chapter we have explored arrays as lists of numbers or 
 strings.  We call these simple arrays one-dimensional arrays 
  
 because they resemble a line of values.  Arrays may also be created 
 with two-dimensions representing rows and columns of data. 
  
 Program 74 uses both one and two-dimensional arrays to calculate 
 student's average grade.
  
 1 
  
 # grades.kbs 
  
 2 
  
 # calculate average grades for each student 
 3 
  
 # and whole class 
  
 4 
  
 5 
  
  
 nstudents = 3 # number of students 
 6 
  
 nscores = 4 # number of scores per student 
 7 
  
 8 
  
 dim students$(nstudents) 
  
 9
  
 10 
 11
  
 1
 2 
 1
 3 
 1
 4 
 1
 5 
 1
 6 
 1
 7 
 1
 8 
 1
 9 
 2
 0 
 dim grades(nstudents, nscores) 
  
 # store the scores as columns and the students 
 as rows 
  
 # first student 
  
 students$[0] = ""Jim"" 
  
 grades[0,0] = 90 
  
 grades[0,1] = 92 
  
 grades[0,2] = 81 
  
 grades[0,3] = 55 
  
 # second student 
  
 students$[1] = ""Sue"" 
  
 grades[1,0] = 66 
  
 grades[1,1] = 99 
  
 grades[1,2] = 98 
  
 grades[1,3] = 88 
  
 # third student 
  
 students$[2] = ""Tony""
  
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Really Advanced - Array Sizes:,"Sometimes we need to create programming code that would work 
 with an array of any size.  If you specify a question mark as a 
 index, row, or column number in the square bracket reference of an 
 array 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
array,NA,NA
[?] ,NA,NA
array,NA,NA
$[?] ,NA,NA
array,NA,NA
"[?,] ",NA,NA
array,NA,NA
"$[?,] ",NA,NA
array,NA,NA
"[,?] ",NA,NA
array,NA,NA
"$[,?]","The [?] reference returns the length of a one-dimensional 
 array or the total number of elements (rows * column) in 
 a two-dimensional array.  The [?,] reference returns the 
 number of rows and the [,?] reference returns the number 
 of columns of a two dimensional array.",NA
Really Really Advanced - Resizing Arrays:,"BASIC-256 will also allow you to re-dimension an existing array. 
  
 The 
 redim
  statement will allow you to re-size an array and will 
 preserve the existing data.  If the new array is larger, the new 
 elements will be filled with zero (0) or the empty string (“”).  If the 
 new array is smaller, the values beyond the new size will be 
 truncated (cut off).
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
redim,NA,NA
variable,NA,NA
(,NA,NA
items,NA,NA
) ,NA,NA
redim,NA,NA
variable,NA,NA
$(,NA,NA
items,NA,NA
) ,NA,NA
redim,NA,NA
variable,NA,NA
(,NA,NA
rows,NA,NA
", ",NA,NA
columns,NA,NA
) ,NA,NA
redim,NA,NA
variable,NA,NA
$(,NA,NA
rows,NA,NA
", ",NA,NA
columns,NA,NA
),"The 
 redim
  statement re-sizes an array in the computer's 
 memory.  Data previously stored in the array will be kept, 
 if it fits.
  
 When resizing two-dimensional arrays the values are 
 copied in a linear manner.  Data may be shifted in an 
 unwanted manner if you are changing the number of 
 columns.
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 14: Mathematics – More Fun ,NA,NA
With Numbers.,"In this chapter we will look at some additional mathematical 
 operators and functions that work with numbers.  Topics will be 
 broken down into four sections: 1) new operators; 2) new integer 
 functions, 3) new floating point functions, and 4) trigonometric 
 functions.",NA
New Operators:,"In addition to the basic mathematical operations we have been 
 using since the first chapter, there are three more operators in 
 BASIC-256.  Operations similar to these three operations exist 
 in most computer languages.  They are the operations of 
 modulo, integer division, and power.
  
 Operation
  
 Operator
  
 Description
  
 Modulo
  
 %
  
 Return the remainder of an integer 
 division.
  
 Integer Division
  
 \
  
 Return the whole number of times one 
 integer can be divided into another.
  
 Power
  
 ^
  
 Raise a number to the power of another 
 number.",NA
Modulo Operator:,"The modulo operation returns the remainder part of integer 
  
 division.  When you do long division with whole numbers, you get a 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
expression1,NA,NA
%,NA,NA
expression2,"The Modulo (%) operator performs integer division of 
 expression1
  divided by 
 expression2
  and returns the 
 remainder of that process.
  
 If one or both of the expressions are not integer values 
 (whole numbers) they will be converted to an integer 
 value by truncating the decimal (like in the 
 int()
  function) 
 portion before the operation is performed.
  
 You might not think it, but the modulo operator (%) is used quite 
 often by programmers.  Two common uses are; 1) to test if one 
 number divides into another (Program 78) and 2) to limit a number 
 to a specific range (Program 79).
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Integer Division Operator:,"The Integer Division (\) operator does normal division but it works 
 only with integers (whole numbers) and returns an integer value. 
 As an example, 13 divided by 4 is 3 remainder 1 – so the result of 
 the integer division is 3.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
expression1,NA,NA
\,NA,NA
expression2,"The Integer Division (\) operator performs division of 
 expression1
  / 
 expression2
  and returns the whole number 
 of times 
 expression1
  goes into 
 expression2
 .
  
 If one or both of the expressions are not integer values 
 (whole numbers), they will be converted to an integer 
 value by truncating the decimal (like in the 
 int()
  function) 
 portion before the operation is performed.",NA
Power Operator:,"The power operator will raise one number to the power of another 
 number.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
expression1,NA,NA
^,NA,NA
expression2,"The Power (^) operator raises 
 expression1
  to the 
 expression2
  power.
  
 The mathematical expression 
 a
 =
 b
 c
  would be written in 
 BASIC-256 as a = b ^ c.
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
New Integer Functions:,"The three new integer functions in this chapter all deal with how to 
 convert strings and floating point numbers to integer values.  All 
 three functions handle the decimal part of the conversion 
  
 differently.
  
 In the 
 int()
  function the decimal part is just thrown away, this has 
 the same effect of subtracting the decimal part from positive 
 numbers and adding it to negative numbers.  This can cause 
 troubles if we are trying to round and there are numbers less than 
 zero (0).
  
 The 
 ceil()
  and 
 floor()
  functions sort of fix the problem with 
 int()
 . 
 Ceil() always adds enough to every floating point number to bring it 
 up to the next whole number while floor(0) always subtracts enough 
 to bring the floating point number down to the closest integer.
  
 We have been taught to round a number by simply adding 0.5 and 
 drop the decimal part.  If we use the int() function, it will work for 
 positive numbers but not for negative numbers.  In BASIC-256 to 
 round we should always use a formula like 
 a
 =
  floorb
 0.5
  .
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
int,NA,NA
(,NA,NA
expression,NA,NA
),"Convert an expression (string, 
 integer, or decimal value) to an 
 integer (whole number).  When 
 converting a floating point value 
 the decimal part is truncated 
  
 (ignored).  If a string does not 
 contain a number a zero is 
  
 returned.",NA
ceil,NA,NA
(,NA,NA
expression,NA,NA
),"Converts a floating point value to 
 the next highest integer value.",NA
floor,NA,NA
(,NA,NA
expression ,NA,NA
),"Converts a floating point 
  
 expression to the next lowers 
  
 integer value.  You should use this 
 function for rounding 
  
 a
 =
  floorb
 0.5
  .
  
  
 1 
 # intceilfloor.kbs
  
 2 
 for t = 1 to 10
  
 3
  
  n = rand * 100 - 50
  
 4
  
  print n;
  
 5
  
  print ""  int="" + int(n);
  
 6
  
  print ""  ceil="" + ceil(n);
  
 7
  
  print ""  floor="" + floor(n)
  
 8 
 next t
  
 Program 82: Difference Between Int, Ceiling, and Floor
  
 -46.850173  int=-46  ceil=-46  floor=-
 47-43.071987  int=-43  ceil=-43  floor=-
 44 23.380133  int=23  ceil=24  floor=23 
  
 4.620722  int=4  ceil=5  floor=4 
  
 3.413543  int=3  ceil=4  floor=3
  
 -26.608505  int=-26  ceil=-26  floor=-27
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
New Floating Point Functions:,"The mathematical functions that wrap up this chapter are ones you 
 may need to use to write some programs.  In the vast majority of 
 programs these functions will not be needed.
  
  
 Function
  
 Description",NA
float,NA,NA
(,NA,NA
expression ,NA,NA
),"Convert expression (string, 
  
 integer, or decimal value) to a 
  
 decimal value.  Useful in changing 
 strings to numbers.  If a string 
  
 does not contain a number a zero 
 is returned.",NA
abs,NA,NA
(,NA,NA
expression,NA,NA
),"Converts a floating point or 
  
 integer expression to an absolute 
 value.",NA
log,NA,NA
(,NA,NA
expression,NA,NA
),"Returns the natural logarithm 
 (base 
 e
 ) of a number.",NA
log10,NA,NA
(,NA,NA
expression ,NA,NA
),"Returns the base 10 logarithm of 
 a number.",NA
Advanced - Trigonometric Functions:,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
cos,NA,NA
(,NA,NA
expression,NA,NA
),Return the cosine of an angle.,NA
sin,NA,NA
(,NA,NA
expression,NA,NA
),Return the sine of an angle.,NA
tan,NA,NA
(,NA,NA
expression,NA,NA
),Return the tangent of an angle.,NA
degrees,NA,NA
(,NA,NA
expression ,NA,NA
),"Convert Radians (0 – 2
 
 ) to 
 Degrees (0-360).",NA
radians,NA,NA
(,NA,NA
expression ,NA,NA
),"Convert Degrees (0-360) to 
 Radians (0 – 2
 
 ).",NA
acos,NA,NA
(,NA,NA
expression,NA,NA
),Return the inverse cosine.,NA
asin,NA,NA
(,NA,NA
expression,NA,NA
),Return the inverse sine.,NA
atan,NA,NA
(,NA,NA
expression,NA,NA
),"Return the inverse tangent.
  
 The discussion of the first three functions will refer to the sides of a 
 right triangle.  Illustration 20 shows one of these with it's sides and 
 angles labeled.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Cosine:,"A cosine is the ratio of the length of the adjacent leg over the length 
  
 of the hypotenuse 
 cos
  A
 =
 b
  
 c 
  
 .  The cosine repeats itself every 2
  
  
 radians and has a range from -1 to 1.  Illustration 20 graphs a 
  
 cosine wave from 0 to 2
 
  radians.
  
  
 Illustration 21: Cos() Function",NA
Sine:,"The sine is the ratio of the adjacent side over the hypotenuse 
  
 sin
  A
 =
 a
  
 c 
  
 .  The sine repeats itself every 2
 
  radians and has a range 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Tangent:,"The tangent is the ratio of the adjacent side over the opposite side 
  
 tan
  A
 =
 a b
  
 .  The sine repeats itself every 
 
  radians and has a range 
  
 from -∞ to ∞.  The tangent has this range because when the angle 
 gets very small the length of the opposite side becomes very 
 small.
  
  
 Illustration 23: Tan() Function",NA
Degrees Function:,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Radians Function:,"The 
 radians
 () function will convert degrees to radians using the 
 formula 
 radians
 =
 degrees
 /
 360
 ∗
 2
  .  Remember all of the 
  
 trigonometric functions in BASIC-256 use radians and not degrees 
 to measure angles.",NA
Inverse Cosine:,"The inverse cosine function 
 acos
 () will return an angle 
 measurement in radians for the specified cosine value.  This 
 function performs the opposite of the 
 cos()
  function.
  
  
 Illustration 24: Acos() Function",NA
Inverse Sine:,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Inverse Tangent:,"The inverse tangent  function 
 atan
 () will return an angle 
 measurement in radians for the specified tangent value.  This 
 function performs the opposite of the 
 tan
 () function.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 15: Working with Strings.,"We have used strings to store non-numeric information, build 
 output, and capture input.  We have also seen, in Chapter 11, using 
 the Unicode values of single characters to build strings.
  
 This chapter shows several new functions that will allow you to 
 manipulate string values.",NA
The String Functions:,"BASIC-256 includes eight common functions for the manipulation of 
 strings.  Table 7 includes a summary of them.
  
 Function
  
 Description",NA
string,NA,NA
(,NA,NA
expression,NA,NA
),"Convert expression (string, integer, 
 or decimal value) to a string value.",NA
length,NA,NA
(,NA,NA
string,NA,NA
),Returns the length of a string.,NA
left,NA,NA
(,NA,NA
string,NA,NA
", ",NA,NA
length,NA,NA
),"Returns a string of length 
  
 characters starting from the left.",NA
right,NA,NA
(,NA,NA
string,NA,NA
", ",NA,NA
length,NA,NA
),"Returns a string of length 
  
 characters starting from the right.",NA
mid,NA,NA
(,NA,NA
string,NA,NA
", ",NA,NA
start,NA,NA
", ",NA,NA
length,NA,NA
),"Returns a string of length 
  
 characters starting from the middle 
 of a string.",NA
upper,NA,NA
(,NA,NA
expression,NA,NA
),Returns an upper case string.,NA
lower,NA,NA
(,NA,NA
expression,NA,NA
),"Returns a lower case string.
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
instr,NA,NA
(,NA,NA
haystack,NA,NA
", ",NA,NA
needle,NA,NA
),"Searches the string “haystack” for 
 the “needle” and returns it's 
  
 location.
  
 Table 7: Summary of String Functions",NA
String() Function:,"The 
 string
 () function will take an expression of any format and will 
 return a string.  This function is a convenient way to convert an 
 integer or floating point number into characters so that it may be 
 manipulated as a string.
  
 1 
  
 # string.kbs
  
 2 
  
 a$ = string(10 + 13)
  
 3 
  
 print a$
  
 4 
  
 b$ = string(2 * pi)
  
 5 
  
 print b$
  
 Program 84: The String Function
  
 23 
  
 6.283185
  
 Sample Output 84: The String Function
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
string,NA,NA
(,NA,NA
expression,NA,NA
),"Convert expression (string, integer, or decimal value) to a 
 string value.",NA
Length() Function:,"The 
 length()
  function will take a string expression and return it's 
 length in characters (or letters).
  
 1 
  
 # length.kbs
  
 2 
  
 # prints 6, 0, and 17
  
 3 
  
 print length(""Hello."")
  
 4 
  
 print length("""")
  
 5 
  
 print length(""Programming Rulz!"")
  
 Program 85: The Length Function
  
 6 
  
 0 
  
 17
  
 Sample Output 85: The Length Function
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
length,NA,NA
(,NA,NA
expression,NA,NA
),"Returns the length of the string expression.  Will return 
 zero (0) for the empty string “”.",NA
"Left(), Right() and Mid() Functions:","The 
 left
 (), 
 right
 (), and 
 mid
 () functions will extract sub-strings (or 
 parts of a string) from a larger string.
  
 1 
  
 # leftrightmid.kbs
  
 2 
  
 a$ = ""abcdefghijklm""
  
 3 
  
 # prints ""abcd""
  
 4 
  
 print left(a$,4)
  
 5 
  
 # prints ""lm""
  
 6 
  
 print right(a$,2)
  
 7 
  
 # prints ""def"" and ""jklm""
  
 8 
  
 print mid(a$,4,3)
  
 9 
  
 print mid(a$,10,9)
  
 Program 86: The Left, Right, and Mid Functions
  
 abcd 
  
 kl 
  
 def 
  
 jklm
  
 Sample Output 86: The Left, Right, and Mid Functions
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
left,NA,NA
(,NA,NA
string,NA,NA
", ",NA,NA
length,NA,NA
),"Return a sub-string from the left end of a string.  If length 
 is equal or greater then the actual length of the string the 
 entire string will be returned.",NA
right,NA,NA
(,NA,NA
string,NA,NA
", ",NA,NA
length,NA,NA
),"Return a sub-string from the right end of a string.  If 
 length is equal or greater then the actual length of the 
 string the entire string will be returned.",NA
mid,NA,NA
(,NA,NA
string,NA,NA
", ",NA,NA
start,NA,NA
", ",NA,NA
length,NA,NA
),"Return a sub-string of specified length from somewhere 
 on the middle of a string.  The start parameter specifies 
 where the sub-string begins (1 = beginning of string).",NA
Upper() and Lower() Functions:,"The 
 upper
 () and 
 lower
 () functions simply will return a string of 
 upper case or lower case letters.  These functions are especially 
 helpful when you are trying to perform a comparison of two strings 
 and you do not care what case they actually are.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
lower,NA,NA
(,NA,NA
string,NA,NA
) ,NA,NA
upper,NA,NA
(,NA,NA
string,NA,NA
),"Returns an all upper case or lower case copy of the string 
 expression. Non-alphabetic characters will not be 
  
 modified.",NA
Instr() Function:,"The 
 instr
 () function searches a string for the first occurrence of 
 another string.  The return value is the location in the big string of 
 the smaller string.  If the substring is not found then the function 
 will return a zero (0).
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
instr,NA,NA
(,NA,NA
haystack,NA,NA
", ",NA,NA
needle,NA,NA
),"Find the sub-string (
 needle)
  in another string expression 
 (
 haystack
 ).  Return the character position of the start.  If 
 sub-string is not found return a zero (0).
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 16: Files – Storing Information ,NA,NA
For Later.,"We have explored the computer's short term memory with variables 
 and arrays but how do we store those values for later?  There are 
 many different techniques for long term data storage.
  
 BASIC-256 supports writing and reading information from files on 
 your hard disk. That process of input and output is often written as 
 I/O.
  
 This chapter will show you how to read values from a file and then 
 write them for long term storage.",NA
Reading Lines From a File:,"Our first program using files is going to show you many of the 
 statements and constants you will need to use to manipulate file 
 data.  There are several new statements and functions in this 
 program.
  
 1 
 #readlfile.kbs
  
 2 
 input ""file name>"", fn$
  
 3 
 if not exists(fn$) then
  
 4
  print fn$ + "" does not exist.""
  
 5
  end
  
 6 
 end if
  
 7 
 #
  
 8 
 n = 0
  
 9 
 open fn$
  
 10 
 while not eof
  
 11
  
  l$ = readline
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
exist,NA,NA
(,NA,NA
expression,NA,NA
),"Look on the computer for a file name specified by the 
 string 
 expression
 . Drive and path may be specified as part 
 of the file name, but if they are omitted then the current 
 working directory will be the search location.
  
 Returns 
 true
  if the file exists; else returns 
 false
 .
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
open,NA,NA
expression ,NA,NA
open,NA,NA
 (,NA,NA
expression,NA,NA
) ,NA,NA
open,NA,NA
filenumber,NA,NA
", ",NA,NA
expression ,NA,NA
open,NA,NA
 (,NA,NA
filenumber,NA,NA
", ",NA,NA
expression,NA,NA
),"Open the file specified by the 
 expression
  for reading and 
 writing to the specified file number.  If the file does not 
 exist it will be created so that information may be added 
 (see 
 write
  and 
 writeline
 ).  Be sure to execute the 
 close 
 statement when the program is finished with the file.
  
 BASIC-256 may have a total of eight (8) files open 0 to 
 7. If no file number is specified then the file will be 
 opened as file number zero (0).",NA
eof ,NA,NA
eof,NA,NA
() ,NA,NA
eof,NA,NA
(,NA,NA
filenumber,NA,NA
),"The 
 eof
  function returns a value of 
 true
  if we are at the 
 end of the file for reading or 
 false
  if there is still more data 
 to be read.
  
 If filenumber is not specified then file number zero (0) will 
 be used.
  
    
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
readline ,NA,NA
readline,NA,NA
() ,NA,NA
readline,NA,NA
(,NA,NA
filenumber,NA,NA
),"Return a string containing the contents of an open file up 
 to the end of the current line.  If we are at the end of the 
 file [ 
 eof(filenumber) = true
  ] then this function will return 
 the empty string (“”).
  
 If filenumber is not specified then file number zero (0) will 
 be used.",NA
size ,NA,NA
size,NA,NA
() ,NA,NA
size,NA,NA
(,NA,NA
filenumber,NA,NA
),"This function returns the length of an open file in bytes. If 
 filenumber is not specified then file number zero (0) will 
 be used.",NA
close ,NA,NA
close,NA,NA
() ,NA,NA
close,NA,NA
filenumber ,NA,NA
close,NA,NA
(,NA,NA
filenumber,NA,NA
),"The 
 close
  statement will complete any pending I/O to the 
 file and allow for another file to be opened with the same 
 number.
  
 If filenumber is not specified then file number zero (0) will 
 be used.
  
     
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Writing Lines to a File:,"In Program 90 we saw how to read lines from a file.  The next two 
 programs show different variations of how to write information to a 
 file. In Program 91 we open and clear any data that may have been 
 in the file to add our new lines and in Program 92 we append our 
 new lines to the end (saving the previous data).
  
 1 
 # resetwrite.kbs 
  
 2 
 open ""resetwrite.dat"" 
  
 3 
  
 4 
 print ""enter a blank line to close file"" 
 5 
  
 6 
 # clear file (reset) and start over 
  
 7 
 reset 
  
 8 
 repeat: 
  
 9 
 input "">"", l$ 
  
 10 
 if l$ <> """" then 
  
 11
  
  writeline l$ 
  
 12
  
  goto repeat 
  
 13 
 end if 
  
 14 
  
 15 
 # go the the start and display contents 
 16 
 seek 0 
  
 17 
 k = 0 
  
 18 
  
 while not eof() 
 19
  
  k = k + 1 
  
 20
  
  print k + "" "" + readline() 
  
 21 
 end while 
  
 22 
  
 23 
 close 
  
 24 
 end
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
reset,NA,NA
 or ,NA,NA
reset,NA,NA
() or ,NA,NA
reset,NA,NA
filenumber ,NA,NA
reset,NA,NA
(,NA,NA
filenumber,NA,NA
),"Clear any data in an open file and move the file pointer to 
 the beginning.
  
 If filenumber is not specified then file number zero (0) will 
 be used.
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
seek,NA,NA
expression ,NA,NA
seek,NA,NA
(,NA,NA
expression,NA,NA
) ,NA,NA
seek,NA,NA
filenumber,NA,NA
",",NA,NA
expression ,NA,NA
seek,NA,NA
 (,NA,NA
filenumber,NA,NA
",",NA,NA
expression,NA,NA
),"Move the file pointer for the next read or write operation 
 to a specific location in the file.  To move the current 
 pointer to the beginning of the file use the value zero (0). 
 To seek to the end of a file use the 
 size
 () function as the 
 argument to the see statement.
  
 If filenumber is not specified then file number zero (0) will 
 be used.",NA
writeline,NA,NA
expression ,NA,NA
writeline,NA,NA
(,NA,NA
expression,NA,NA
) ,NA,NA
writeline,NA,NA
filenumber,NA,NA
",",NA,NA
expression ,NA,NA
writeline,NA,NA
 (,NA,NA
filenumber,NA,NA
",",NA,NA
expression,NA,NA
),"Output the contents of the expression to an open file and 
 then append an end of line mark to the data.  The file 
 pointer will be positioned at the end of the write so that 
 the next write statement will directly follow.
  
 If filenumber is not specified then file number zero (0) will 
 be used.
  
  
 1 
  
 # appendwrite.kbs 
  
 2 
  
 open ""appendwrite.dat"" 
  
 3 
  
 4 
  
 print ""enter a blank line to close file"" 
  
 5 
  
 6 
  
 # move file pointer to end of file and append
  
     
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Read() Function and Write Statement:,"In the first three programs of this chapter we have discussed the 
 readline
 () function and 
 writeline
  statement.  There are two other 
 statements that will read and write a file. They are the 
 read
 () 
 function and 
 write
  statement.",NA
read ,NA,NA
read,NA,NA
() ,NA,NA
read,NA,NA
(,NA,NA
filenumber,NA,NA
),"Read the next word or number (token) from a file.  Tokens 
 are delimited by spaces, tab characters, or end of lines. 
 Multiple delimiters between tokens will be treated as one.
  
 If filenumber is not specified then file number zero (0) will 
 be used.",NA
write,NA,NA
expression ,NA,NA
write,NA,NA
 (,NA,NA
expression,NA,NA
) ,NA,NA
write,NA,NA
filenumber,NA,NA
",",NA,NA
expression ,NA,NA
write,NA,NA
 (,NA,NA
filenumber,NA,NA
",",NA,NA
expression,NA,NA
),"Write the string expression to a file file.  Do not add an 
 end of line or a delimiter.
  
 If filenumber is not specified then file number zero (0) will 
 be used.
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
"Chapter 17: Stacks, Queues, Lists, and ",NA,NA
Sorting,"This chapter introduces a few advanced topics that are commonly 
 covered in the first Computer Science class at the University level. 
  
 The first three topics (Stack, Queue, and Linked List) are very 
 common ways that information is stored in a computer system.  The 
 last two are algorithms for sorting information.",NA
Stack:,"A stack is one of the common data structures used by programmers 
 to do many tasks.  A stack works like the “discard pile” when you 
 play the card game “crazy-eights”.  When you add a piece of data to 
 a stack it is done on the top (called a “push”) and these items stack 
 upon each other.  When you want a piece of information you take 
 the top one off the stack and reveal the next one down (called a 
 “pop”).  Illustration 27 shows a graphical example.
  
 Item
  
 Push
  
 Pop
  
 Item
  
 (Add One)
  
 (Take One)
  
 Item
  
 Item
  
 Item
  
 Illustration 27: What is a Stack
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Queue:,"The queue (pronounced like the letter Q) is another very common 
 data structure.  The queue, in its simplest form, is like the lunch line 
 at school.  The first one in the line is the first one to get to eat. 
 Illustration 28 shows a block diagram of a queue.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Linked List:,"In most books the discussion of this material starts with the linked 
 list.  Because BASIC-256 handles memory differently than many 
 other languages this discussion was saved after introducing stacks 
 and queues.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
X,"Data
  
 Head
  
 Tail
  
 to the 
  
 Head
  
 Illustration 30: Deleting an Item from a Linked List
  
 Inserting a new node is also as simple as creating the new node, 
 linking the new node to the next node, and linking the previous 
 node to the first node.  Illustration 31 Shows inserting a new 
 node into the second position.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Slow and Inefficient Sort - Bubble Sort:,"The “Bubble Sort” is probably the worst algorithm ever devised to 
 sort a list of values.  It is very slow and inefficient except for 
 small sets of items.  This is a classic example of a bad algorithm.
  
 The only real positive thing that can be said about this algorithm is 
 that it is simple to explain and to implement.  Illustration 32 shows 
 a flow-chart of the algorithm.  The bubble sort goes through the 
 array over and over again swapping the order of adjacent items 
 until the sort is complete,
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Better Sort – Insertion Sort:,"The insertion sort is another algorithm for sorting a list of items.  
 It is usually faster than the bubble sort, but in the worst case case 
 could take as long.
  
 The insertion sort gets it's name from how it works.  The sort goes 
 through the elements of the array (index = 1 to length -1) and 
 inserts the value in the correct location in the previous array 
 elements.  Illustration 33 shows a step-by-step example.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 18 – Runtime Error Trapping,"As you have worked through the examples and created your own 
 programs you have seen errors that happen while the program is 
 running.  These errors are called “runtime errors”.  BASIC-256 
 includes a group of special commands that allow your program to 
 recover from or handle these errors.
  
 Trapping errors, when you do not mean too, can cause problems. 
 Error trapping should only be used when needed and disabled when 
 not.",NA
Error Trap:,"When error trapping is turned on, with the 
 onerror
  statement, the 
 program will jump to a specified subroutine when an error occurs. 
  
 If we look at Program 99 we will see that the program calls the 
 subroutine when it tries to read the value of z (an undefined 
 variable).  If we try to run the same program with line one 
  
 commented out or removed the program will terminate when the 
 error happens.
  
 1 
  
 onerror errortrap 
  
 2 
  
 3 
  
 print ""z = "" + z 
  
 4 
  
 print ""Still running after error"" 
 5 
  
  
 end 
 6 
  
 7 
  
 errortrap: 
  
 8 
  
 print ""I trapped an error."" 
  
 9 
  
 return
  
 Program 99: Simple Runtime Error Trap
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
onerror,NA,NA
 label,"Create an error trap that will automatically jump to the 
 subroutine at the specified label when an error occurs.",NA
Finding Out Which Error:,"Sometimes just knowing that an error happened is not enough. 
  
 There are functions that will return the error number (
 lasterror
 ), 
 the line where the error happened in the program (
 lasterrorline
 ), a 
 text message describing the error (
 lasterrormessage
 ), and extra 
 command specific error messages (
 lasterrorextra
 ).
  
 Program 100 modifies the previous program to print details of what 
 error actually happened.  More complex logic could be added to your 
 error trap, specifically to change the behavior with different errors 
 happen.
  
 1 
  
 onerror errortrap
  
 2
  
 3 
  
 print ""z = "" + z
  
 4 
  
 print ""Still running after error""
  
 5 
  
 end
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
lasterror,NA,NA
 or ,NA,NA
lasterror,NA,NA
() ,NA,NA
lasterrorline,NA,NA
 or ,NA,NA
lasterrorline,NA,NA
() ,NA,NA
lasterrormessage,NA,NA
 or ,NA,NA
lasterrormessage,NA,NA
() ,NA,NA
lasterrorextra,NA,NA
 or ,NA,NA
lasterrorextra,NA,NA
(),"The four “last error” functions will return information 
 about the last trapped error.  These values will remain 
 unchanged until another error is encountered.
  
 lasterror
  
 Returns the number of the last 
  
 trapped error.  If no errors have 
  
 been trapped this function will 
  
 return a zero.  See Appendix J: 
 Error Numbers for a complete list of 
  
 trappable errors.
  
 lasterrorline
  
 Returns the line number, of the 
 program, where the last error was 
 trapped.
  
 l
 asterrormessage
  
  
 Returns a string describing the last 
 error.
  
 lasterrorextra
  
 Returns a string with additional error 
 information.  For most errors this 
  
 function will not return any 
  
 information.
  
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Turning Off Error Trapping:,"Sometimes in a program we will want to trap errors during part of 
 the program and not trap other errors.  You will see examples of 
 this type of error trapping logic in subsequent chapters.
  
 The 
 offerror
  statement turns error trapping off.  This causes all 
 errors encountered to stop the program.
  
 1 
 onerror errortrap 
  
 2 
 print ""z = "" + z 
  
 3 
 print ""Still running after first error"" 
 4 
  
 5 
  
 offerror 
 6 
 print ""z = "" + z 
  
 7 
 print ""Still running after second error"" 
 8 
  
 9 
 end 
  
 10 
  
 11 
 errortrap: 
  
 12 
 print ""Error Trap - Activated"" 
  
 13 
 return
  
 Program 101: Turning Off the Trap
  
 Error Trap - Activated 
  
 z = 0 
  
 Still running after first error 
 ERROR on line 6: Unknown variable 
  
 Sample Output 101: Turning Off the Trap
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 19: Database Programming,"This chapter will show how BASIC-256 can connect to a simple 
 relational database and use it to store and retrieve useful 
 information.",NA
What is a Database:,"A database is simply an organized collection of numbers, string, and 
 other types of information.  The most common type of database is 
 the “Relational Database”.  Relational Databases are made up of 
 four major parts: tables, rows, columns, and relationships (see 
 Table 8).
  
 Table
  
 A table consists of a predefined number or 
  
 columns any any number of rows with information 
 about a specific object or subject. Also known as a 
 relation.
  
 Row
  
 Also called a tuple.
  
 Column
  
 This can also be referred to as an attribute.
  
 Relationship
  
 A reference of the key of one table as a column of 
 another table.  This creates a connection between 
 tables.
  
 Table 8: Major Components of a Relational Database",NA
The SQL Language:,"Most relational databases, today, use a language called SQL to 
 actually extract and manipulate data.  SQL is actually an acronym 
 for Structured Query Language.  The original SQL language was 
 developed by IBM in the 1970s and has become the primary 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Creating and Adding Data to a Database:,"The SQLite library does not require the installation of a database 
 sever or the setting up of a complex system.  The database and all 
 of its parts are stored in a simple file on your computer.  This file 
 can even be copied to another computer and used, without 
  
 problem.
  
 The first program (Program 102: Create a Database) creates a new 
 sample database file and tables.  The tables are represented by the 
 Entity Relationship Diagram (ERD) as shown in Illustration 34.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
owner_id ,NA,NA
integer,NA,NA
ownernam e ,NA,NA
text,NA,NA
phonenum ber ,NA,NA
text,pet,NA
pet_id ,NA,NA
integer,NA,NA
owner_id ,NA,NA
integer,NA,NA
petnam e ,NA,NA
text,NA,NA
type ,NA,NA
text,"Illustration 34: Entity Relationship Diagram of 
  
 Chapter Database
  
 1
  
 2
  
  
 3
  
  
 4
  
  
 5
  
 # delete old database and create a database 
 with two tables 
  
 errors = 0 
  
 file$ = ""pets.sqlite3"" 
  
 if exists(file$) then kill(file$) 
  
 dbopen file$
  
 6
  
 7
  
 8
  
 stmt$ =  ""CREATE TABLE owner (owner_id 
 INTEGER, ownername TEXT, phonenumber TEXT, 
 PRIMARY KEY (owner_id));"" 
  
 gosub execute
  
 9
  
 10
  
 11
  
 stmt$ =  ""CREATE TABLE pet (pet_id INTEGER, 
 owner_id INTEGER, petname TEXT, type TEXT, 
 PRIMARY KEY (pet_id), FOREIGN KEY (owner_id) 
 REFERENCES owner (owner_id));"" 
  
 gosub execute
  
 12
  
 13 
  
 # wrap everything up
  
 14 
  
 dbclose
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
dbopen,NA,NA
 filename,"Open an SQLite database file.  If the database does not 
 exist then create a new empty database file.",NA
dbexecute,NA,NA
 sqlstatement,"Perform the SQL statement on the currently open SQLite 
 database file.  No value will be returned but a trappable 
 runtime error will occur if there were any problems 
 executing the statement on the database.",NA
dbclose,"Close the currently open SQLite database file.  This 
 statement insures that all data is written out to the 
 database file.
  
 These same three statements can also be used to execute other 
 SQL statements.  The INSERT INTO statement (Program 103) adds 
 new rows of data to the tables and the UPDATE statement (Program 
 104) will change an existing row's information.
  
 1 
  
 # add rows to the database
  
 2
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Retrieving Information from a Database:,"So far we have seen how to open, close, and execute a SQL 
 statement that does not return any values.  A database would be 
 pretty useless if we could not get information out of it.
  
 The SELECT statement, in the SQL language, allows us to retrieve 
 the desired data.  After a SELECT is executed a “record set” is 
 created that contains the rows and columns of data that was 
 extracted from the database.  Program 105 shows three different 
 SELECT statements and how the data is read into your BASIC-256 
 program.
  
 # Get data from the pets database 
 1 
  
 2 
 dbopen ""pets.sqlite3"" 
  
 3
  
 4
  
  
 5
  
  
 6
  
 7 
  
 8 
  
 9 
  
 1
 0
  
 # show owners and their phone numbers 
  
 print ""Owners and Phone Numbers"" 
  
 dbopenset ""SELECT ownername, phonenumber FROM 
 owner ORDER BY ownername;"" 
  
 while dbrow()
  
  print dbstring(0) + "" "" + dbstring(1) 
  
 end while 
  
 dbcloseset
  
 11 
  
 12 
 print 
  
 13
  
 1
 4 
 1
 5 
 1
 6
  
 # show owners and their pets 
  
 print ""Owners with Pets"" 
  
 dbopenset ""SELECT owner.ownername, pet.pet_id, 
 pet.petname, pet.type FROM owner JOIN pet ON 
 pet.owner_id = owner.owner_id ORDER BY 
  
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
dbopenset,NA,NA
 sqlstatement,"Execute a SELECT statement on the database and create a 
 “record set” to allow the program to read in the result. 
 The “record set” may contain 0 or more rows as extracted 
 by the SELECT.",NA
dbrow,NA,NA
  or  ,NA,NA
dbrow,NA,NA
 (),"Function to advance the result of the last 
 dbopenset
  to 
 the next row.  Returns false if we are at the end of the 
 selected data.
  
 You need to advance to the first row, using 
 dbrow
 , after a 
 dbopenset
  statement before you can read any data.
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
dbint ,NA,NA
( column ) ,NA,NA
dbfloat ,NA,NA
( column ) ,NA,NA
dbstring ,NA,NA
( column ),"These functions will return data from the current row of 
 the record set.  You must know the zero based numeric 
 column number of the desired data.
  
 dbint
  
 Return the cell data as an integer.
  
 dbfloat
  
 Return the cell data as a floating 
 point number.
  
 dbstring
  
 Return the cell data as a string.",NA
dbcloseset,"Close and discard the results of the last 
 dbopenset 
 statement.
  
    
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Chapter 20: Connecting with a Network,"This chapter discusses how to use the BASIC-256 networking 
  
 statements.  Networking in BASIC-256 will allow for a simple 
  
 “socket” connection using TCP (Transmission Control Protocol).  This 
 chapter is not meant to be a full introduction to TCP/IP socket 
  
 programming.",NA
Socket Connection:,"TCP stream sockets create a connection between two computers or 
 programs.  Packets of information may be sent and received in a bi-
 directional (or two way) manner over the connection.
  
 To start a connection we need one computer or program to act as a 
 server (to wait for the incoming telephone call) and the other to be 
 a client (to make the telephone call).  Illustration 35 shows 
  
 graphically how a stream connection is made.
  
  
  
 Server
  
  
 1.
  
 2.
  
 3.
  
 Client
  
 1. Server listens for client to connect 2. Client 
 connects to port 
  
 3. Bi-directional (2-way) communication 
 between client and server.
  
 Illustration 35: Socket Communication
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
A Simple Server and Client:,"1 
  
 2
  
 3 
  
 4
  
 5
  
 # simple_server.kbs 
  
 print ""listening to port 9999 on "" + 
 netaddress() 
  
 NetListen 9999 
  
 NetWrite ""The simple server sent this 
 message."" 
  
 NetClose
  
  
 Program 106: Simple Network Server
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
netaddress ,NA,NA
netaddress,NA,NA
 ( ),"Function that returns a string containing the numeric IPv4 
 network address for this machine.
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
netlisten,NA,NA
 portnumber ,NA,NA
netlisten,NA,NA
 ( portnumbrer ) ,NA,NA
netlisten,NA,NA
" socketnumber, portnumber ",NA,NA
netlisten,NA,NA
" ( socketnumber, portnumber )","Open up a network connection (server) on a specific port 
 address and wait for another program to connect. If 
  
 socketnumber
  is not specified socket number zero (0) will 
 be used.",NA
netclose ,NA,NA
netclose,NA,NA
 ( ) ,NA,NA
netclose,NA,NA
 socketnumber ,NA,NA
netclose,NA,NA
 ( socketnumber ),"Close the specified network connection (socket). If 
  
 socketnumber
  is not specified socket number zero (0) will 
 be closed.",NA
netwrite,NA,NA
 string ,NA,NA
netwrite,NA,NA
 ( string ) ,NA,NA
netwrite,NA,NA
" socketnumber, string ",NA,NA
netwrite,NA,NA
" ( socketnumber, string )","Send a string to the specified open network connection. If 
 socketnumber
  is not specified socket number zero (0) will 
 be written to. 
  
     
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
netconnect,NA,NA
" servername, portnumber ",NA,NA
netconnect,NA,NA
" ( servername, portnumber ) ",NA,NA
netconnect,NA,NA
" socketnumber, servername, ",NA,NA
portnumber ,NA,NA
netconnect,NA,NA
" ( socketnumber, servername, ",NA,NA
portnumber ) ,"Open a network connection (client) to a server. The IP 
 address or host name of a server are specified in the 
 servername
  argument, and the specific network port 
 number. If 
 socketnumber
  is not specified socket number 
 zero (0) will be used for the connection.",NA
netread ,NA,NA
netread,NA,NA
 ( ) ,NA,NA
netread,NA,NA
 ( ,NA,NA
socketnumber,NA,NA
 ),"Read data from the specified network connection and 
 return it as a string. This function is blocking (it will wait 
 until data is received). If 
 socketnumber
  is not specified 
 socket number zero (0) will be read from.",NA
Network Chat:,"This example adds one new function (
 netdata
 ) to the networking 
 statements we have already introduced.  Use of this new function 
 will allow our network clients to process other events, like 
  
 keystrokes, and then read network data only when there is data to 
 be read.
  
 The network chat program (Program 108) combines the client and 
 server program into one.  If you start the application and it is unable 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
netdata,NA,NA
 or ,NA,NA
netdata,NA,NA
(),"Returns true if there is network data waiting to be read. 
 This allows for the program to continue operations without 
 waiting for a network packet to arrive.
  
  
  
 The big program this chapter creates a two player 
  
 networked tank battle game.  Each player is the white 
 tank on their screen and the other player is the black 
 tank.  Use the arrow keys to rotate and move.  Shoot with 
 the space bar.
  
  
 1 
  
 # battle.kbs
  
 2 
  
 # uses port 9998 for server
  
 3
  
 4 
  
 kspace = 32
  
 5 
  
 kleft = 16777234
  
 6 
  
 kright = 16777236
  
 7 
  
 kup = 16777235
  
 8 
  
 kdown = 16777237
  
 9 
  
 dr = pi / 16 
  
 # direction change
  
    
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Appendix A: Loading BASIC-256 on ,NA,NA
your PC or USB Pen Drive,"This chapter will walk you step by step through downloading and 
 installing BASIC-256 on your Microsoft Windows PC.  The 
  
 instructions are written for Windows XP with Firefox 3.x as your Web 
 browser.  Your specific configuration and installation may be 
  
 different but the general steps should be similar.",NA
1 – Download:,"Connect to the Internet and navigate to the Web site 
  
 http://www.basic256.org
  and follow the download link.  Once you 
 are at the Sourceforge project page click on the green “Download 
 Now!”button (Illustration 36) to start the download process.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
2 – Installing:,"Once the file has finished downloading (Illustration 38) use your 
 mouse and click on the file from the download list.  You will then 
 see one or two dialogs asking if you really want to execute this file 
 (Illustration 39) (Illustration 40).  You need to click the “OK” or 
 “Run” buttons on these dialogs.
  
  
 Illustration 39: Open File Warning
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
3 – Starting BASIC-256,"The installation is complete.  You may now click on the Windows 
 “Start” button and then “All Programs >” (Illustration 46).
  
  
 Illustration 46: XP Start 
  
 Button
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Appendix B: Language Reference - ,NA,NA
Statements,"Chapter number where this statement is introduced is shown in 
 parentheses.",NA
circle – Draw a Circle on the Graphics Output ,NA,NA
Area (2),NA,NA
circle,NA,NA
 x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
radius,"The circle command draws a filled circle on the graphics output 
 area.  The center of the circle is defined by the x and y parameters 
 and the size is defined as radius.
  
 Example:
  
 clg 
  
 color 255,128,128 
  
 circle 150,150,150 
  
 color red 
  
 circle 150,150,100",NA
changedir – Change Your Current Working ,NA,NA
Directory (16),NA,NA
changedir,NA,NA
path,"The 
 changedir
  command allows you to change the current working 
 directory for you application.  When you specify a file without a full 
 path (in 
 imgload
 , 
 open
 , 
 spriteload
 , or other statement that 
 requests a file name) the application uses this directory.  You can 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
clg – Clear Graphics Output Area (2),NA,NA
clg,"This command clears the graphics output area.  The graphics output 
 area is not cleared automatically when an program is run.  This will 
 sometimes leave undesired graphics visible.  If you are using 
  
 graphics it is advised that you always clear the output window, first.",NA
clickclear – Clear the Last Mouse Click (10),NA,NA
clickclear,"When the mouse is being read in click mode the x position, y 
 position, and button click information are stored when the mouse 
 button is clicked.  These values can be retrieved with the clickx(), 
 clicky(), and clickb() functions.  The stored values can be reset to 
 zero (0) using clickclear.",NA
close – Close the Currently Open File (16),NA,NA
close ,NA,NA
close,NA,NA
() ,NA,NA
close,NA,NA
filenumber ,NA,NA
close,NA,NA
 (,NA,NA
filenumber,NA,NA
),"Closes open file.  This will flush any pending disk output.  If file 
 number parameter is not specified then file number zero (0) will be 
 used.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
cls – Clear Text Output Window (1),NA,NA
cls,"This command clears the Text Output window.  The Text Output 
 window is automatically cleared when a program is run.",NA
color ,NA,NA
or,NA,NA
 colour– Set Color for Drawing (2),NA,NA
color,NA,NA
colorname ,NA,NA
color,NA,NA
rgbvalue ,NA,NA
color,NA,NA
red,NA,NA
", ",NA,NA
green,NA,NA
", ",NA,NA
blue,"Sets the foreground color for all graphical commands.  The color 
 may be specified by the color name (see Appendix E), an integer 
 representing the RGB value, or by three numbers representing the 
 RGB value as separate component colors.
  
 A special color named CLEAR or represented by -1 tells the drawing 
 commands to erase the pixels from the drawing and make them 
 transparent.
  
 Example:
  
 clg 
  
 color black 
  
 rect 100,100,100,100 
  
 color 255,128,128 
  
 circle 150,150,75",NA
dbclose (19),NA,NA
dbclose,"Close the currently open SQLite database file. 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
dbcloseset (19),NA,NA
dbcloseset,"Close the currently open record set opened by 
 DBOpenSet
 .",NA
dbexecute (19),NA,NA
dbexecute,NA,NA
statement ,NA,NA
dbexecute ,NA,NA
( statement ),"Execute an SQL statement on the open SQLite database file. This 
 statement does not create a record set but will return an error if the 
 statement did not execute.",NA
dbopen (19),NA,NA
dbopen,NA,NA
filename ,NA,NA
dbopen ,NA,NA
( filename ),"Open an SQLite database file. If the file does not exist then create 
 it.",NA
dbopenset (19),NA,NA
dbopenset,NA,NA
statement ,NA,NA
dbopenset ,NA,NA
( statement ),"Perform an SQL statement and create a record set so that the 
 program may loop through and use the results. 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
decimal (),NA,NA
decimal,NA,NA
n ,NA,NA
decimal ,NA,NA
( n ),Description...,NA
dim – Dimension a New Array (13),NA,NA
dim,NA,NA
variable,NA,NA
(,NA,NA
items,NA,NA
) ,NA,NA
dim,NA,NA
variable$,NA,NA
(,NA,NA
items,NA,NA
) ,NA,NA
dim,NA,NA
 variable(,NA,NA
rows,NA,NA
", ",NA,NA
columns,NA,NA
) ,NA,NA
dim,NA,NA
variable$,NA,NA
(,NA,NA
rows,NA,NA
", ",NA,NA
columns,NA,NA
),"The 
 dim
  statement creates an array in the computer's memory the 
 size that was specified in the parenthesis.  Sizes (
 items
 , 
 rows
 , and 
 columns
 ) must be integer values greater than or equal to one (1). 
 The 
 dim
  statement will initialize the elements in the new array with 
 either zero (0) if numeric or the empty string (“”), depending on the 
 type of variable.",NA
do / until – Do / Until Loop (7),NA,NA
do ,NA,NA
statement(s) ,NA,NA
until,NA,NA
condition,"Repeat the statements in the block over and over again.  Stop 
 repeating when the condition is true. The statements will be 
 executed one or more times.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
end – Stop Running the Program (9),NA,NA
end,Terminates the program (stop).,NA
fastgraphics – Turn Fast Graphics Mode On (8),NA,NA
fastgraphics,"The 
 fastgraphics
  statement will switch BASIC-256 into fast 
  
 graphics mode.  In this mode the graphics output area is only 
  
 refreshed (drawn), when the program requests.  This speeds up 
 graphically intense programs.  The 
 refresh
  statement signals that 
 draw process.  Once fast graphics mode is entered in a program you 
 may not return to the default slow graphics.",NA
"font – Set Font, Size, and Weight (8)",NA,NA
font,NA,NA
fontname,NA,NA
", ",NA,NA
point,NA,NA
", ",NA,NA
weight,"The 
 font
  command sets the font that will be used by the next 
 text 
 command.  You must specify the name of the font or font family, 
 the point size, and the weight.
  
 Each computer may have several different fonts available but 
 ""Helvetica"", ""Times"", ""Courier"", ""System"", ""Symbol"" should be 
 available on most computers.  The point size represents how tall the 
 letters will be drawn.  Weight is used to specify how dark the letters 
 will be drawn (25-light, 50-normal, 63-demi bold, 75-bold, 100-
 black).
  
 Example:
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
for/next – Loop and Count (7),NA,NA
for,NA,NA
variable,NA,NA
=,NA,NA
expr1,NA,NA
to,NA,NA
expr2,NA,NA
 [,NA,NA
step,NA,NA
expr3,NA,NA
] ,NA,NA
statement(s) ,NA,NA
next,NA,NA
variable,Execute a block of code a specified number of times. The,NA
variable ,will begin with the value of,NA
expr1,NA,NA
 and be incremented and the ,NA,NA
looping will continue until the variable is greater than ,NA,NA
expr2,NA,NA
.  If ,NA,NA
the ,NA,NA
step,NA,NA
 clause is included in the statement the increment will ,NA,NA
be ,NA,NA
expr3,NA,NA
 and not the default value of one (1).,NA,NA
goto – Jump to a Label (9),NA,NA
goto,NA,NA
label,"The 
 goto
  statement causes the execution to jump to the statement 
 directly following the label.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
gosub/return – Jump to a Subroutine and Return ,NA,NA
(9),NA,NA
gosub,NA,NA
label ,NA,NA
return,"The 
 gosub
  statement causes the execution to jump to the 
 subroutine defined by the label.  Execute the",NA
return,"statement 
 within a subroutine to send control back to where it was called 
 from.",NA
graphsize – Set Graphic Display Size (8),NA,NA
graphsize,NA,NA
width,NA,NA
", ",NA,NA
height,"Set the graphics output area to the specified 
 height
  and 
 width
 .",NA
if then – Test if Something is True - Single ,NA,NA
Line(6),NA,NA
if,NA,NA
condition,NA,NA
then,NA,NA
statement,If the condition evaluates to,NA
true ,"then execute the statement 
 following the",NA
then,clause.,NA
if  then / end if – Test if Something is True ,NA,NA
– Multiple Line (6),NA,NA
if,NA,NA
condition,NA,NA
then ,NA,NA
statement(s) to execute when true ,NA,NA
end if,"The 
 if
  and 
 end if
  statements allow you to create a block of 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
if,NA,NA
/,NA,NA
end if,"statements 
 so they are not confusing to read.",NA
if then / else / end if – Test if Something is True ,NA,NA
– ,NA,NA
Multiple Line with Else (6),NA,NA
if,NA,NA
condition,NA,NA
then ,NA,NA
statement(s) to execute when true ,NA,NA
else ,NA,NA
statement(s) to execute when false ,NA,NA
end if,"The 
 if
 , 
 else
 , and 
 end if
  statements allow you to define two blocks 
 of programming code.  The first block, after the 
 then
  clause, 
 executes if the condition is true and the second block, after the 
 else
  clause, will execute when the condition is false.",NA
imgload – Load an image from a file and display ,NA,NA
(12),NA,NA
imgload,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
filename ,NA,NA
imgload,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
scale,NA,NA
", ",NA,NA
filename ,NA,NA
imgload,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
scale,NA,NA
", ",NA,NA
rotation,NA,NA
", ",NA,NA
filename,"Read in the picture found in the file and display it on the graphics 
 output area.  The values of x and y represent the location to place 
 the CENTER of the image. 
  
 Images may be loaded from many different file formats, including: 
 BMP, PNG, GIF, JPG, and JPEG.
  
 Optionally scale (re-size) it by the decimal scale where 1 is full size. 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
imgsave – Save the Graphics Output Area,NA,NA
imgsave,NA,NA
filename ,NA,NA
imgsave ,NA,NA
"filename, type ",NA,NA
imgsave,NA,NA
 ( filename ) ,NA,NA
imgsave ,NA,NA
"( filename, type )","This statement saves the graphics output area to an image file.  By 
 default the image is saved in the Portable Network Graphics (PNG) 
 file format.  The second 
 type
  argument, a string, may be specified 
 with one of the following types: “BMP”, “JPG”, “JPEG”, or “PNG”.",NA
input – Get a String Value from the User (7),NA,NA
input,NA,NA
" “prompt”, ",NA,NA
stringvariable$ ,NA,NA
input,NA,NA
" “prompt”, ",NA,NA
numericvariable ,NA,NA
input,NA,NA
stringvariable$ ,NA,NA
input,NA,NA
numericvariable,"The 
 input
  statement will retrieve a string or a number that the user 
 types into the text output area of the screen. The result will be 
 stored in a variable that may be used later in the program.
  
 A prompt message, if specified, will display on the text output area 
 and the cursor will directly follow the prompt.
  
 If a numeric result is desired (numeric variable specified in the 
 statement) and the user types a string that can not be converted to 
 a number the input statement will set the variable to zero (0).
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
kill – Delete a File (),NA,NA
kill,NA,NA
filename ,NA,NA
kill,NA,NA
 ( filename ),Delete a file from the file system,NA
line – Draw a Line on the Graphics Output Area ,NA,NA
(2),NA,NA
line,NA,NA
start_x,NA,NA
", ",NA,NA
start_y,NA,NA
", ",NA,NA
finish_x,NA,NA
", ",NA,NA
finish_y,"Draw a line one pixel wide from the starting point to the ending 
 point, using the current color.",NA
netclose (20),NA,NA
netclose ,NA,NA
netclose,NA,NA
 ( ) ,NA,NA
netclose,NA,NA
 socket ,NA,NA
netclose,NA,NA
 ( socket ),"Close the specified network connection (socket). If socket number is 
 not number zero (0) will be used.",NA
netconnect (20),NA,NA
netconnect,NA,NA
"server, port ",NA,NA
netconnect,NA,NA
 ( ,NA,NA
"server, port ) ",NA,NA
netconnect,NA,NA
" socket, ",NA,NA
"server, port ",NA,NA
netconnect,NA,NA
" ( socket, ",NA,NA
"server, port )","So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
netlisten (20),NA,NA
netlisten,NA,NA
 port ,NA,NA
netlisten,NA,NA
 ( port ) ,NA,NA
netlisten,NA,NA
" socket, port ",NA,NA
netlisten,NA,NA
" ( socket, port )","Open up a network connection (server) on a specific port address 
 and wait for another program to connect. If socket number is not 
 specified zero (0) will be used.",NA
netwrite (20),NA,NA
netwrite,NA,NA
string ,NA,NA
netwrite,NA,NA
 ( string ) ,NA,NA
netwrite,NA,NA
" socket, ",NA,NA
string ,NA,NA
netwrite,NA,NA
" ( socket, string )","Send a string to the specified open network connection. If socket 
 number is not specified zero (0) will be used.",NA
offerror (18),NA,NA
offerror,"Turns off error trapping and restores the default error behavior. 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
onerror (18),NA,NA
onerror,NA,NA
label,"Causes the subroutine at 
 label
  to be executed when an runtime 
 error occurs. Program control may be resumed at the next 
 statement with a 
 return
  statement in the subroutine.",NA
open – Open a file for Reading and Writing (16),NA,NA
open,NA,NA
filename ,NA,NA
open ,NA,NA
filenumber,NA,NA
", ",NA,NA
filename,"Open the file specified for reading and writing. If the file does not 
 exist it will be created so that information may be added (see 
 write 
 and 
 writeline
 ). Be sure to execute the",NA
close,"statement when the 
 program is finished with the file.
  
 BASIC-256 may have up to eight (8) files opened at any one time. 
 The files will be numbered from zero(0) to seven(7).  If a file 
 number is not specified then file number zero (0) will be used.",NA
pause – Pause the Program (7),NA,NA
pause,NA,NA
seconds,"The 
 pause
  statement tells BASIC-256 to stop executing the current 
 program for a specified number of seconds. The number of seconds 
 may be a decimal number if a fractional second pause is required.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
plot – Put a Point on the Graphics Output Area ,NA,NA
(2),NA,NA
plot,NA,NA
x,NA,NA
", ",NA,NA
y,Changes a single pixel to the current color.,NA
poly – Draw a Polygon on the Graphics Output ,NA,NA
Area (8),NA,NA
poly,NA,NA
 {,NA,NA
x1,NA,NA
", ",NA,NA
y1,NA,NA
", ",NA,NA
x2,NA,NA
", ",NA,NA
y2,NA,NA
 ...} ,NA,NA
poly,NA,NA
numeric_array,"Draw a polygon.  The array or list should contain an even number of 
 elements so that the each vertex of the polygon is represented by 
 first two values.",NA
portout – Output Data to a System Port,NA,NA
portout,NA,NA
" ioport, outbyte ",NA,NA
portout,NA,NA
" ( ioport, outbyte )","Writes value (0-255) to system I/O port.
  
 Reading and writing system I/O ports can be dangerous and can 
 cause unpredictable results. This statement may be disabled 
 because of potential system security issues.
  
 Functionality only available in Windows.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
print – Display a String on the Text Output ,NA,NA
Window (1),NA,NA
print,NA,NA
expression ,NA,NA
print,NA,NA
expression,NA,NA
;,The,NA
print,"statement is used to display text and numbers on the 
 text output area of the BASIC-256 window.",NA
Print ,"normally goes 
 down to the next line but you may output several things on the 
 same line by using a ; (semicolon) at the end of the",NA
expression,.,NA
putslice – Display a Captured Part of the ,NA,NA
Graphics Output,NA,NA
putslice,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
slice ,NA,NA
putslice,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
slice,NA,NA
", ",NA,NA
rgbcolor,This statement will draw the captured slice (see the,NA
getslice ,NA,NA
function) back onto the graphics output area.  If an RGB color is ,NA,NA
specified then the slice will be drawn with pixels of that color ,NA,NA
being omitted (transparent).,NA,NA
rect – Draw a Rectangle on the Graphics Output ,NA,NA
Area (2),NA,NA
rect,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
width,NA,NA
", ",NA,NA
height,"The rect command draws a filled rectangle on the graphics output 
 area.  The top left corner will be placed at the point (x, y).
  
 Example:
  
 clg
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
redim – Re-Dimension an Array (12),NA,NA
redim,NA,NA
variable,NA,NA
(,NA,NA
items,NA,NA
) ,NA,NA
redim,NA,NA
variable$,NA,NA
(,NA,NA
items,NA,NA
) ,NA,NA
redim,NA,NA
variable,NA,NA
(,NA,NA
rows,NA,NA
", ",NA,NA
columns,NA,NA
) ,NA,NA
redim,NA,NA
variable$,NA,NA
(,NA,NA
rows,NA,NA
", ",NA,NA
columns,NA,NA
),The,NA
redim,"statement re-sizes an array in the computer's memory. 
 Data previously stored in the array will be kept, if it fits.
  
 When resizing two-dimensional arrays the values are copied in a 
 linear manner. Data may be shifted in an unwanted manner if you 
 are changing the number of columns.",NA
refresh – Update Graphics Output Area (8),NA,NA
refresh,"In fast graphics mode (see 
 fastgraphics
 ) the graphics output area 
 is only refreshed, drawn, when the program requests.  This speeds 
 up graphically intense programs.  The refresh statement signals 
 that draw process.",NA
rem – Remark or Comment (2),NA,NA
rem,NA,NA
comment text ,NA,NA
#,NA,NA
comment text,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
reset – Clear an Open File (16),NA,NA
reset ,NA,NA
reset,NA,NA
() ,NA,NA
reset,NA,NA
filenumber,"Clear any data from an open file and move the file pointer to the 
 beginning.
  
 If file number is not specified then file number zero (0) will be used.",NA
say – Use Text-To-Speech to Speak (1),NA,NA
say,NA,NA
expression,"The 
 say
  statement is used to make BASIC-256 read an expression 
 aloud, 
  
 to the computer's speakers.",NA
seek – Move the File I/O Pointer (16),NA,NA
seek,NA,NA
expression ,NA,NA
seek,NA,NA
 (,NA,NA
expression,NA,NA
) ,NA,NA
seek,NA,NA
filenumber,NA,NA
", ",NA,NA
expression ,NA,NA
seek,NA,NA
 (,NA,NA
filenumber,NA,NA
", ",NA,NA
expression,NA,NA
),"Move the file pointer for the next read or write operation to a 
 specific location in the file. To move the current pointer to the 
 beginning of the file use the value zero (0). To seek to the end of a 
 file use the",NA
size() ,"function as the argument to the seek statement.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
setsetting – Save a Value to a Persistent Store,NA,NA
setsetting,NA,NA
" program_name, key_name, setting_value ",NA,NA
setsetting,NA,NA
" ( program_name, key_name, ",NA,NA
setting_value ),"Save a setting_value to the system registry (or other persistent 
 storage). The 
 program_name
  and 
 key_name
  are used to categorize 
 and to make sure that settings accessed when needed and not 
 accidentally changed by another program.
  
 The saved value will be available to other BASIC-256 programs and 
 should remain available for an extended period.",NA
spritedim – Initialize Sprites for Drawing (12),NA,NA
spritedim,NA,NA
numberofsprites,"The 
 spritedim
  statement initializes, or allocates in memory, places 
 to store the specified number of sprites.  Each sprite will need to be 
 loaded (
 spriteload
 ) or created (
 spriteslice
 ) before it may be 
 displayed.  You may allocate as many sprites as your program may 
 require but your program may be slow if you create many sprites.
  
 Sprites are drawn on the graphics output area in order by their 
 assigned sprite number.  A sprite will be drawn under any sprite 
 with a higher number and over all sprites with a lower number.
  
 Sprites are numbered from zero (0) to one less than the number 
 specified in this command (numberofsprites -1).
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
spritehide – Hide a Sprite (12),NA,NA
spritehide,NA,NA
spritenumber,"This statement will cause the specified sprite to not be drawn on 
 the screen.  It will still exist and may be shown using the 
  
 spriteshow
  statement.",NA
spriteload – Load an Image File Into a Sprite (12),NA,NA
spriteload,NA,NA
spritenumber,NA,NA
", ",NA,NA
filename,"This statement reads an image file (GIF, BMP, PNG, JPG, or JPEG) 
 from the specified path and creates a sprite.  The sprite muse be 
 allocated using the 
 spritedim
  statement before you may load it.
  
 By default the sprite will be placed with its center at 0,0 and it will 
 be hidden.  You should move the sprite to the desired position on 
 the screen (
 spritemove
  or 
 spriteplace
 ) and then show it 
  
 (
 spriteshow
 ).",NA
spritemove – Move a Sprite from Its Current ,NA,NA
Location (12),NA,NA
spritemove,NA,NA
spritenumber,NA,NA
", ",NA,NA
dx,NA,NA
", ",NA,NA
dy,"Move the specified sprite x pixels to the right and y pixels down. 
 Negative numbers can also be specified to move the sprite left and 
 up.  A sprite's center will not move beyond the edge of the current 
 graphics output window.
  
 You may use the 
 spritex
  and 
 spritey
  functions to determine the 
 current location of the sprite.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
spriteplace – Place a Sprite at a Specific Location ,NA,NA
(12),NA,NA
spriteplace,NA,NA
spritenumber,NA,NA
", ",NA,NA
x,NA,NA
", ",NA,NA
y,"The spriteplace statement allows you to place a sprite's center at a 
 specific location on the graphics output area.",NA
spriteshow – Show a Sprite (12),NA,NA
spriteshow,NA,NA
spritenumber,"The 
 spriteshow
  statement causes a loaded, created, or hidden 
 sprite to be displayed on the graphics output area.",NA
spriteslice – Capture a Sprite (12),NA,NA
spriteslice,NA,NA
spritenumber,NA,NA
", ",NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
width,NA,NA
", ",NA,NA
height,"This statement will allow you to create a sprite by copying it from 
 the graphics output area.  The arguments 
 x
 , 
 y
 , 
 width
 , and 
 height 
 specify a rectangular area to capture and use for the sprite.  Pixels 
 that have not been drawn since the last 
 cls
  statement or that were 
 drawn using the color 
 clear
  will be transparent when drawn.
  
 By default the sprite will be placed with its center at 0,0 and it will 
 be hidden.  You should move the sprite to the desired position on 
 the screen (
 spritemove
  or 
 spriteplace
 ) and then show it 
  
 (
 spriteshow
 ). 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
sound – Play a beep on the PC Speaker (3),NA,NA
sound,NA,NA
frequency,NA,NA
", ",NA,NA
duration ,NA,NA
sound,NA,NA
 {,NA,NA
frequency1,NA,NA
", ",NA,NA
duration1,NA,NA
", ",NA,NA
frequency2,NA,NA
", ",NA,NA
duration2,NA,NA
 ...} ,NA,NA
sound,NA,NA
numeric_array,The first form of the,NA
sound,"statement takes two arguments; (1) the 
 frequency of the sound in Hz (cycles per second) and (2) the length 
 of the tone in milliseconds (ms). The second uses curly braces and 
 can specify several tones and durations in a list. The third form uses 
 an array containing frequencies and durations.",NA
stamp – Put a Polygon Where You Want It (8),NA,NA
stamp,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", {",NA,NA
x1,NA,NA
", ",NA,NA
y1,NA,NA
", ",NA,NA
x2,NA,NA
", ",NA,NA
y2,NA,NA
 ...} ,NA,NA
stamp,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
numeric_array ,NA,NA
stamp,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
scale,NA,NA
", {",NA,NA
x1,NA,NA
", ",NA,NA
y1,NA,NA
", ",NA,NA
x2,NA,NA
", ",NA,NA
y2,NA,NA
 ...} ,NA,NA
stamp,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
scale,NA,NA
", ",NA,NA
numeric_array ,NA,NA
stamp,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
scale,NA,NA
", ",NA,NA
rotate,NA,NA
", {",NA,NA
x1,NA,NA
", ",NA,NA
y1,NA,NA
", ",NA,NA
x2,NA,NA
", ",NA,NA
y2,NA,NA
 ...} ,NA,NA
stamp,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
scale,NA,NA
", ",NA,NA
rotate,NA,NA
", ",NA,NA
numeric_array,"Draw a polygon with it's origin (0,0) at the screen position (x,y). 
 Optionally scale (re-size) it by the decimal scale where 1 is full size. 
 Also you may also rotate the stamp clockwise around it's origin by 
 specifying how far to rotate as an angle expressed in radians (0 to 
 2
 
 ).",NA
system – Execute System Command in a Shell,NA,NA
system,NA,NA
expression,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
text – Draw text on the Graphics Output Area (8),NA,NA
text,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
output,"The 
 text
  command will draw characters on the graphics output 
 area.  The 
 x
  and 
 y
  arguments represent the top left corner and will 
 draw the text with the current color and font.
  
 Example:
  
 clg 
  
 font “Helvetica”, 32, 50 
 color red 
  
 text 100, 100, “Hi Mom.”",NA
volume – Adjust Amplitude of Sound Statement,NA,NA
volume,NA,NA
expression,"Adjust the height of the waveform generated by the sound 
 statement.",NA
wavplay – Play a WAV audio file in the ,NA,NA
background (12),NA,NA
wavplay,NA,NA
filename,"Load .wav (wave) audio file data from the file name and play.  The 
 playback will be synchronous and the next statement in the 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
wavstop – Stop playing WAV audio file (12),NA,NA
wavstop,"If there is a currently playing audio file (see 
 wavplay
 ) then stop 
 the synchronous playback.",NA
wavwait – Wait for the WAV to finish (12),NA,NA
wavwait,"If there is a currently playing audio file (see 
 wavplay
 ) then wait for 
 it to finish playing.",NA
while / end while – While Loop (7),NA,NA
while,NA,NA
condition ,NA,NA
statement(s) ,NA,NA
end while,"Do the statements in the block over and over again while the 
 condition is true. The statements will be executed zero or more 
 times.",NA
write – Write Data to the Currently Open File (16),NA,NA
write,NA,NA
expression ,NA,NA
write,NA,NA
 (,NA,NA
expression,NA,NA
),"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
write,NA,NA
filenumber,NA,NA
", ",NA,NA
expression ,NA,NA
write,NA,NA
 (,NA,NA
filenumber,NA,NA
", ",NA,NA
expression,NA,NA
),"Write the string expression to an open file. Do not add an end of 
 line or a delimiter. 
  
 If file number parameter is not specified then file number zero (0) 
 will be used.",NA
writeline – Write a Line to the Currently Open ,NA,NA
File (16),NA,NA
writeline,NA,NA
expression ,NA,NA
writeline,NA,NA
 (,NA,NA
expression,NA,NA
) ,NA,NA
writeline,NA,NA
filenumber,NA,NA
", ",NA,NA
expression ,NA,NA
writeline,NA,NA
 (,NA,NA
filenumber,NA,NA
", ",NA,NA
expression,NA,NA
),"Output the contents of the expression to an open file and then 
 append an end of line mark to the data. The file pointer will be 
 positioned at the end of the write so that the next write statement 
 will directly follow.
  
 If file number parameter is not specified then file number zero (0) 
 will be used.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Appendix C: Language Reference - ,NA,NA
Functions,"Functions perform calculations, get system values, and return them to the 
 program.
  
 Each function will return a value of a specific type (integer, Boolean, 
 floating point, or string) and potentially a specific range of values. 
  
 Chapter number where this function is introduced is shown in 
 parentheses.",NA
abs – Absolute Value (14),NA,NA
abs,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 floating point
  
 Return Value 
 Type:
  
 floating point
  
 Return Value 
 Range:
  
 0.0 to ...
  
 This function returns the absolute value of the expression or 
 numeric value passed to it.
  
 Example:
  
 a = -3 
  
 print string(a) + “ “ + string(abs(a))
  
 will display the following on the text output area
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
acos – Return the Arc-cosine (14),NA,NA
acos,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 floating point
  
 Return Value 
 Type:
  
 floating point
  
 Return Value 
 Range:
  
 0 to 
 
  
 The inverse cosine function",NA
acos(),"will return an angle 
 measurement in radians for the specified cosine value.",NA
asc – Return the Unicode Value for a Character ,NA,NA
(11),NA,NA
asc,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 string
  
 Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to 65535
  
 The asc() function will extract the first character of the string 
 expression
  and return the character's Unicode value.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
asin – Return the Arc-sine (14),NA,NA
asin,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 floating point
  
 Return Value 
 Type:
  
 floating point
  
 Return Value 
 Range:
  
 - ½ 
 
  to ½ 
 
  
 The inverse sine function",NA
asin(),"will return an angle measurement 
 in radians for the specified sine value.",NA
atan – Return the Arc-tangent (14),NA,NA
atan,NA,NA
(,NA,NA
expression,NA,NA
),"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
atan(),"will return an angle 
 measurement in radians for the specified tangent value.",NA
ceil – Round Up (14),NA,NA
ceil,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 floating point
  
 Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
  
 This function returns an equal or next highest integer value.  This 
 method will round up if necessary.
  
 Example:
  
 a = ceil(-3.14) 
  
 b = ceil(7) 
  
 print a 
  
 print b 
  
 print ceil(9.2)
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
chr – Return a Character (11),NA,NA
chr,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 integer
  
 Return Value 
 Type:
  
 string
  
 The chr() function will return a single character string that contains 
 the letter or character that corresponds to the Unicode value in the 
 expression
 .
  
 Example:
  
 print chr(34) + ""In quotes."" + chr(34)
  
 will display:
  
 ""In quotes.""",NA
clickb- Return the Mouse Last Click Button Status ,NA,NA
(10),NA,NA
clickb,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
clickb,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to 7
  
 Returns the state of the last mouse button or combination of 
  
 buttons that was pressed.  If multiple buttons were being pressed at 
 a single time then the returned value will be sum of the button 
 values that were pressed.
  
 Button 
 Value
  
 Description
  
 0
  
 Returns this value when no mouse button has 
 been pressed, since the last 
 clickclear 
  
 statement.
  
 1
  
 Returns this value when the “left” mouse 
 button was pressed.
  
 2
  
 Returns this value when the “right” mouse 
 button was pressed.
  
 4
  
 Returns this value when the “center” mouse 
 button was pressed.",NA
clickx- Return the Mouse Last Click X Position ,NA,NA
(10),NA,NA
clickx ,NA,NA
clickx,NA,NA
(),"Return Value 
 Type:
  
 integer
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
clicky- Return the Mouse Last Click Y Position ,NA,NA
(10),NA,NA
clicky ,NA,NA
clicky,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to 
 graphheight()
  - 1
  
 Returns the y coordinate of the mouse pointer position on the 
 graphics output window when the mouse button was last clicked.",NA
cos – Cosine (14),NA,NA
cos,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 floating point
  
 Return Value 
 Type:
  
 floating point
  
 Return Value 
 Range:
  
 -1.0 to 1.0
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
currentdir – Current Working Directory (16),NA,NA
currentdir ,NA,NA
currentdir,NA,NA
(),"Return Value 
 Type:
  
 string
  
 This function returns a string containing the full path of the 
 application's working directory.",NA
day – Return the Current System Clock – Day (9),NA,NA
day ,NA,NA
day,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Return Value 
  
 1 to 31
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
dbfloat – Get a Floating Point Value From a ,NA,NA
Database Set (19),NA,NA
dbfloat,NA,NA
(,NA,NA
column,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 column
  
 integer
  
 Return Value 
 Type:
  
 floating point
  
 Return a floating point (decimal value) from the specified column of 
 the current row of the open recordset.",NA
dbint – Get an Integer Value From a Database Set ,NA,NA
(19),NA,NA
dbint,NA,NA
(,NA,NA
column,NA,NA
),"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
dbrow – Advance Database Set to Next Row (19),NA,NA
dbrow ,NA,NA
dbrow,NA,NA
(),"Return Value 
 Type:
  
 boolean
  
 Function that advances the record set to the next row. Returns a 
 true value if there is a row or false if we are at the end of the record 
 set.",NA
dbstring – Get a String Value From a Database ,NA,NA
Set (19),NA,NA
dbstring,NA,NA
(,NA,NA
column,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 column
  
 integer
  
 Return Value 
 Type:
  
 string
  
 Return a string from the specified column of the current row of the 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
degrees – Convert a Radian Value to a Degree ,NA,NA
Value (14),NA,NA
degrees,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 floating point
  
 Return Value 
 Type:
  
 floating point
  
 The",NA
degrees() ,"function does the quick mathematical calculation to 
 convert an angle in radians to an angle in degrees. The formula 
 used is 
 degrees
 =
 radians
 /
  2
 ×
 360
  .",NA
eof – Allow Program to Check for End Of File ,NA,NA
Condition (16),NA,NA
eof ,NA,NA
eof,NA,NA
() ,NA,NA
eof,NA,NA
(,NA,NA
filenumber,NA,NA
),"Return Value 
 Type:
  
 Boolean
  
 Return Value 
 Range:
  
 true or false
  
 Returns a Boolean true if the open file pointer is at the end of the 
 file.  If file number parameter is not specified then file number zero 
 (0) will be used.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
exists – Check to See if a File Exists (16),NA,NA
exists,NA,NA
(,NA,NA
filename,NA,NA
) ,NA,NA
exists ,NA,NA
filename,"Argument(s):
  
 Name:
  
 Type:
  
 filename
  
 string
  
 Return Value 
 Type:
  
 Boolean
  
 Return Value 
 Range:
  
 true or false
  
 Returns a Boolean value of true if the file exists and false if it does 
 not exist. 
  
 Example:
  
 if not exists(“myfile.dat”) then goto 
 fileerror",NA
float – Convert a String Value to A Float Value ,NA,NA
(14),NA,NA
float,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 string or integer
  
 Return Value 
 Type:
  
 floating point
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
floor – Round Down (14),NA,NA
floor,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 floating point
  
 Return Value 
 Type:
  
 integer
  
 This function returns an equal or next lowest integer value.  This 
 method will round down if necessary.
  
 Example:
  
 a = floor(-3.14) 
  
 b = floor(7) 
  
 print a 
  
 print b 
  
 print floor(9.2)
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
getcolor – Return the Current Drawing Color,NA,NA
getcolor ,NA,NA
getcolor,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to 16777215 or -1
  
 Returns the RGB value of the current drawing color (set by the 
 color 
 statement).  If the color has been set to CLEAR then this function 
 will return a value of -1.",NA
getsetting – Get a Value from the Persistent ,NA,NA
Store,NA,NA
getsetting,NA,NA
 ( ,NA,NA
program_name,NA,NA
", ",NA,NA
key_name,NA,NA
 ),"Argument(s):
  
 Name:
  
 Type:
  
 program_name
  
 string
  
 key_name
  
 string
  
 Return Value 
 Type:
  
 string
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
getslice – Capture Part of the Graphics Output,NA,NA
getslice,NA,NA
(,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
", ",NA,NA
width,NA,NA
", ",NA,NA
height,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 x
  
 integer
  
 y
  
 integer
  
 width
  
 integer
  
 height
  
 integer
  
 Return Value 
 Type:
  
 string
  
 This function returns a string of hexadecimal digits that represent 
 the pixels in the rectangle specified in the parameters.  The slice 
 can then be placed back on the screen at it's original location or a 
 new location with the 
 putslice
  statement.",NA
graphheight – Return the Height of the Graphic ,NA,NA
Display (8),NA,NA
graphheight ,NA,NA
graphheight,NA,NA
(),"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
graphwidth – Return the Width of the Graphic ,NA,NA
Display (8),NA,NA
graphwidth ,NA,NA
graphwidth,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to ...
  
 The 
 graphwidth()
  function will return the width, in pixels, of the 
 current graphics output area.",NA
hour – Return the Current System Clock - Hour ,NA,NA
(9),NA,NA
hour ,NA,NA
hour,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Return Value 
  
 0 to 23
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
instr – Return Position of One String in Another ,NA,NA
(15),NA,NA
instr,NA,NA
(,NA,NA
haystack,NA,NA
", ",NA,NA
needle,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 needle
  
 string
  
 haystack
  
 string
  
 Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to length(haystack)
  
 Return the position of the string 
 needle
  within the string 
 haystack
 . 
 If the 
 needle 
 does not exist in the 
 haystack
  then the function will 
 return 0 (zero).
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
int – Convert Value to an Integer (14),NA,NA
int,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 floating point or string
  
 Return Value 
 Type:
  
 integer
  
 This function will convert a decimal number or a string into an 
 integer value.  When converting a decimal number it will truncate 
 the decimal part and just return the integer part.
  
 When converting a string value the function will return the integer 
 value in the beginning of the string. If an integer value is not found, 
 the function will return 0 (zero).
  
 Example:
  
 print int(9) 
  
 print int(9.9999) 
  
 print int(-8.765) 
  
 print int(“ 321 555 foo”) 
  
 print int(“I have 42 bananas.”)
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
key – Return the Currently Pressed Keyboard Key ,NA,NA
(11),NA,NA
key ,NA,NA
key,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to ...
  
 Return the key code for the last keyboard key pressed.  If no key 
 has been pressed since the last call to the 
 key
  function a zero (0) 
 will be returned.  Each key on the keyboard has a unique key code 
 that typically is the upper-case Unicode value for the letter on the 
 key.",NA
lasterror – Return Last Error (18),NA,NA
lasterror ,NA,NA
lasterror,NA,NA
(),"Return Value 
 Type:
  
 integer
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
lasterrorextra – Return Last Error Extra ,NA,NA
Information(18),NA,NA
lasterrorextra ,NA,NA
lasterrorextra,NA,NA
(),"Return Value 
 Type:
  
 string
  
 Returns statement specific “extra” information about the last 
 runtime error.",NA
lasterrorline – Return Program Line of Last Error ,NA,NA
(18),NA,NA
lasterrorline ,NA,NA
lasterrorline,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Returns the line number in the program where the runtime error 
 happened. 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
lasterrormessage – Return Last Error as String ,NA,NA
(18),NA,NA
lasterrormessage ,NA,NA
lasterrormessage,NA,NA
(),"Return Value 
 Type:
  
 string
  
 Returns a string representing the last runtime error.",NA
left – Extract Left Sub-string (15),NA,NA
left,NA,NA
(,NA,NA
expression,NA,NA
", ",NA,NA
length,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 string
  
 length
  
 integer
  
 Return Value 
 Type:
  
 string
  
 Returns a sub-string, the number of characters specified by length, 
 from the left end of the string 
 expression
 .  If length is greater than 
 the length of the string 
 expression
  then the entire string is 
 returned.",NA
length – Length of a String (15),NA,NA
length,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
lower – Change String to Lower Case (15),NA,NA
lower,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 string
  
 Return Value 
 Type:
  
 string
  
 This function will return a string with the upper case characters 
 changed to lower case characters.
  
 Example:
  
 print lower(“Hello.”)
  
 will display:
  
 hello.",NA
md5 – Return MD5 Digest of a String,NA,NA
md5,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
mid – Extract Part of a String (14),NA,NA
mid,NA,NA
(,NA,NA
expression,NA,NA
", ",NA,NA
start,NA,NA
", ",NA,NA
length,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 string
  
 start
  
 integer
  
 length
  
 integer
  
 Return Value 
 Type:
  
 string
  
 Return a sub-string from somewhere on the middle of a string. The 
 start parameter specifies where the sub-string begins (1 = 
  
 beginning of string) and the length parameter specifies how many 
 characters to extract.",NA
minute - Return the Current System Clock - ,NA,NA
Minute (9),NA,NA
minute,"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
minute,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to 59
  
 This function returns the number of minutes from the current 
 system clock.  Values range from 0 to 59.
  
 Example:
  
 print minute
  
 will display at 6:47PM:
  
 47",NA
month - Return the Current System Clock - Month ,NA,NA
(9),NA,NA
month ,NA,NA
month,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to 11
  
 This function returns the month number from the current system 
 clock.  It returns the month number from 0 to 11.  January is 0, 
 February is 1, March is 2, April is 3, May is 4, June is 5, July is 6, 
 August is 7, September is 8, October is 9, November is 10, and 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
mouseb- Return the Mouse Current Button ,NA,NA
Status (10),NA,NA
mouseb ,NA,NA
mouseb,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to 7
  
 Returns the state of the mouse button or buttons being pressed.  If 
 multiple buttons are being pressed at a single time then the 
  
 returned value will be sum of the button values being pressed.
  
 Button 
 Value
  
 Description
  
 0
  
 Returns this value when no mouse button is 
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
mousex- Return the Mouse Current X Position ,NA,NA
(10),NA,NA
mousex ,NA,NA
mousex,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to 
 graphwidth()
  - 1
  
 Returns the x coordinate of the mouse pointer position on the 
 graphics output window.",NA
mousey- Return the Mouse Current Y Position ,NA,NA
(10),NA,NA
mousey ,NA,NA
mousey,NA,NA
(),"Return Value 
 Type:
  
 integer
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
netaddress – What Is My IP Address (20),NA,NA
netaddress ,NA,NA
netaddress,NA,NA
(),"Return Value 
 Type:
  
 string
  
 Returns a string with the current IPv4 address of this computer.  If 
 there are multiple address assigned to this machine only the first 
 one will be returned.",NA
netdata – Is There Network Data to Read (20),NA,NA
netdata ,NA,NA
netdata,NA,NA
() ,NA,NA
netdata,NA,NA
(socket),"Argument(s):
  
 Name:
  
 Type:
  
 socket
  
 integer
  
 Return Value 
 Type:
  
 boolean
  
 Returns true of there is data to be read from the specified network 
 connection.  If there is no data on the socket waiting then false will 
 be returned.  If the socket number is omitted the default socket 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
netread – Read Data from Network(20),NA,NA
netread ,NA,NA
netread,NA,NA
() ,NA,NA
netread,NA,NA
(socket),"Argument(s):
  
 Name:
  
 Type:
  
 socket
  
 integer
  
 Return Value 
 Type:
  
 string
  
 Reads the last packed received on the specified network 
  
 connection.  If there is no data on the socket waiting to be read the 
 program will wait until a message is received.  You may use the 
 netdata
  function to detect of there is data waiting to be read.  If 
 the socket number is omitted the default socket number of zero (0) 
 will be used.",NA
pixel – Get Color Value of a Pixel,NA,NA
pixel,NA,NA
(,NA,NA
x,NA,NA
", ",NA,NA
y,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 x
  
 integer
  
 y
  
 integer
  
 Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to 16777215 or -1
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
portin – Read Data from a System Port,NA,NA
portin,NA,NA
(,NA,NA
ioport,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 ioport
  
 integer
  
 Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to 255
  
 Read value (0-255) from a system I/O port.
  
 Reading and writing system I/O ports can be dangerous and can 
 cause unpredictable results. This statement may be disabled 
 because of potential system security issues.
  
 Port I/O is typically used to read and write data to a parallel printer 
 port.  This functionality is only available in Windows.",NA
radians – Convert a Degree Value to a Radian ,NA,NA
Value (16),NA,NA
radians,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
rand – Random Number (6),NA,NA
rand ,NA,NA
rand,NA,NA
(),"Return Value 
 Type:
  
 floating point
  
 Return Value 
 Range:
  
 0.0 to 0.999999
  
 This function returns a random decimal number between 0 and 1. 
 To generate random integer values, convert to integer the product 
 of rand and the desired integer value. 
  
 Example:
  
 print rand 
  
 # display a number from 1 to 100 
 print int(rand*100)+1
  
 will display something like:
  
 0.35 
  
 22
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
read – Read a Token from the Currently Open File ,NA,NA
(16),NA,NA
read ,NA,NA
read,NA,NA
() ,NA,NA
read,NA,NA
(,NA,NA
filenumber,NA,NA
),"Return Value 
 Type:
  
 string
  
 Return Value 
 Range:
  
  
 Read the next word or number (token) from a file. Tokens are 
 delimited by spaces, tab characters, or end of lines. Multiple 
 delimiters between tokens will be treated as one.  If file number 
 parameter is not specified then file number zero (0) will be used.",NA
readline – Read a Line of Text from a File (16),NA,NA
readline ,NA,NA
readline,NA,NA
() ,NA,NA
readline,NA,NA
(,NA,NA
filenumber,NA,NA
),"Return Value 
 Type:
  
 string
  
 Return Value 
 Range:
  
  
 Return a string containing the contents of an open file up to the end 
 of the current line. If we are at the end of the file [ eof()",NA
 = ,NA,NA
true,"] 
 then this function will return the empty string (“”).  If file number 
 parameter is not specified then file number zero (0) will be used.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
"rgb – Convert Red, Green, and Blue Values to ",NA,NA
RGB (12),NA,NA
rgb,NA,NA
(,NA,NA
red,NA,NA
", ",NA,NA
green,NA,NA
", ",NA,NA
blue,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 red
  
 integer (0 to 255)
  
 green
  
 integer (0 to 255)
  
 blue
  
 integer (0 to 255)
  
 Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to 16777215
  
 The",NA
rgb ,"function returns a single number that represents a color 
 expressed by the three color component values. Remember that 
 color component values have the range from 0 to 255.  RGB color is 
 calculated by the formula 
 RGB
 =
 RED
 ×
 256
 2
 GREEN
 ×
 256BLUE
  .",NA
right – Extract Right Sub-string (15),NA,NA
right,NA,NA
(,NA,NA
expression,NA,NA
", ",NA,NA
length,NA,NA
),"Syntax:
  
  
 Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 string
  
 length
  
 integer
  
 Return Value 
 Type:
  
 string
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
second - Return the Current System Clock - ,NA,NA
Second (9),NA,NA
second ,NA,NA
second,NA,NA
(),"Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to 59
  
 This function returns the number of seconds from the current 
 system clock.  Values range from 0 to 59.
  
 Example:
  
 print hour + “:“ + minute + “:“ + second
  
 will display at 5:23:56 PM:
  
 17:23:56",NA
sin – Sine (16),NA,NA
sin,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
size – Return the size of the open file (15),NA,NA
size ,NA,NA
size,NA,NA
() ,NA,NA
size,NA,NA
(filenumber),"Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to ...
  
 This function returns the length of an open file in bytes.  If file 
 number parameter is not specified then file number zero (0) will be 
 used.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
spritecollide – Return the Collision State of Two ,NA,NA
Sprites (12),NA,NA
spritecollide,NA,NA
(,NA,NA
expression1,NA,NA
", ",NA,NA
exression2,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression 
 1
  
 integer
  
 expression 
 2
  
 integer
  
 Return Value 
 Type:
  
 boolean
  
 This function returns true of the two sprites collide with or overlap 
 each other.  The collision detection is done by",NA
spriteh – Return the Height of Sprite (12),NA,NA
spriteh,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 integer
  
 Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to ...
  
 This function returns the height, in pixels, of a loaded sprite.  Pass 
 the sprite number in expression.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Spritev – Return the Visible State of a Sprite (12),NA,NA
spritev,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 integer
  
 Return Value 
 Type:
  
 boolean
  
 This function returns a true value if a loaded sprite is currently 
 displayed on the graphics output area.  Pass the sprite number in 
 expression.",NA
spritew – Return the Width of Sprite (12),NA,NA
spritew,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 integer
  
 Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to ...
  
 This function returns the width, in pixels, of a loaded sprite.  Pass 
 the sprite number in expression.",NA
spritex – Return the X Position of Sprite (12),NA,NA
spritex,NA,NA
(expression),"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
spritey – Return the Y Position of Sprite (12),NA,NA
spritey,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 integer
  
 Return Value 
 Type:
  
 integer
  
 Return Value 
 Range:
  
 0 to ...
  
 This function returns the position on the y axis of the center, in 
 pixels, of a loaded sprite.  Pass the sprite number in expression.",NA
string – Convert a Number to a String (14),NA,NA
string,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
   
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
tan – Tangent (16),NA,NA
tan,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 floating point
  
 Return Value 
 Type:
  
 floating point
  
 This function returns the tangent of the expression.  The angle 
 should be represented in radians.  The result is approximate and 
 may not exactly match expected results.
  
 Example:
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
upper – Change String to Upper Case (15),NA,NA
upper,NA,NA
(,NA,NA
expression,NA,NA
),"Argument(s):
  
 Name:
  
 Type:
  
 expression
  
 string
  
 Return Value 
 Type:
  
 string
  
 This function will return a string with the lower case characters 
 changed to upper case characters.
  
 Example:
  
 print upper(“Hello.”)
  
 will display:
  
 HELLO.",NA
year - Return the Current System Clock - Year (9),NA,NA
year ,NA,NA
year,NA,NA
(),"So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Appendix D: Language Reference – ,NA,NA
Operators and Constants,NA,NA
Mathematical Operators: ,"Mathematical operators take one or more numeric values, do something, 
 and return a number.
  
 + - Adds Two Numbers or Concatenates Two Strings 
 (1)- - Subtracts Two Numbers (1) 
  
 * - Multiplies Two Numbers (1) 
  
 / - Divides Two Numbers (1) 
  
 % - Returns the Remainder of Integer Division of Two 
 Numbers (13) 
  
 \ - Integer Division (14) 
  
 ^ - Exponent (14) 
  
 () - Groups Operators (1)",NA
Mathematical Constants or Values:,"A mathematical constant is sort of like a variable.  It returns a 
 predefined value so that you do not need to remember what it is.
  
 Constant:
  
 Value:
  
 pi
  
 3.141593
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Color Constants or Values:,"BASIC-256 also includes a list of constants defining a simple pallet 
 of colors.  The color constants are integers that represent the RGB 
 value required to draw that color on the screen.
  
 Constant:
  
 Value:
  
 Same as:
  
 black
  
 0
  
 0 rgb(0, 0, 0)
  
 white
  
 16,316,664
  
  rgb(248, 248, 248)
  
 red
  
 16,711,680
  
  rgb(255, 0, 0)
  
 darkred
  
 8,388,608
  
  rgb(128, 0, 0)
  
 green
  
 65,280
  
  rgb(0, 255, 0)
  
 darkgreen
  
 32,768
  
  rgb(0, 128, 0)
  
 blue
  
 255
  
 255 rgb(0, 0, 255)
  
 darkblue
  
 128
  
 128 rgb(0, 0, 128)
  
 cyan
  
 65,535
  
  rgb(0, 255, 255)
  
 darkcyan
  
 32,896
  
  rgb(0, 128, 128)
  
 purple
  
 16,711,935
  
  rgb(255, 0, 255)
  
 darkpurple
  
 8,388,736
  
  rgb(128, 0, 128)
  
 yellow
  
 16,776,960
  
  rgb(255, 255, 0)
  
 darkyellow
  
 8,421,376
  
  rgb(128, 128, 0)
  
 orange
  
 16,737,792
  
  rgb(255, 102, 0)
  
 darkorange
  
 11,154,176
  
  rgb(170, 51, 0)
  
 gray /grey
  
 10,790,052
  
  rgb(164, 164, 164)
  
 darkgray / 
 darkgrey
  
 8,421,504
  
  rgb(128, 128, 128)
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Logical Operators:,"Logical operators return a true/false value that can then be used in 
 the IF statement.  They are used to compare values or return the 
 state of a condition in your program.
  
 = - Test if Two Values are Equal (6) 
  
 <> - Test if Two Values are Not Equal (6) 
  
 < - Test if One Value is Less Than Another Value (6) 
  
 <= - Test if One Value is Less Than or Equal Another Value 
 (6) 
  
 > - Test if One Value is Greater Than Another Value (6) >= 
 - Test if One Value is Greater Than or Equal Another Value 
 (6) 
  
 and – Returns True if Both Values are True (6) 
  
 not – Changes True to False and False to True (6) 
  
 or – Returns True if One or Both Values are True (6)",NA
Logical Constants or Values: ,"A logical constant is sort of like a variable.  It returns a predefined 
 value so that you do not need to remember what it is.  You can not 
 change a constant's value in your program.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Bitwise Operators:,"Bitwise operators manipulate values at the individual bit (binary 
 digit) level.  These operations will only work with integer numbers.
  
 & - Bitwise And 
  
  
  
 The statement “print 11 & 7”  will display 3 because of the 
  
  
 following bit level manipulation:
  
  
   
  1011 
  
  
 &
   0111
  
  
   
  0011 
  
 | - Bitwise Or 
  
  
  
 The statement “print 10 | 6”  will display 14 because of the 
  
  
 following bit level manipulation:
  
  
   
  1010 
  
  
 |
   0110
  
  
   
  1110 
  
 ~ - Bitwise Not 
  
  
  
 The statement “print ~12”  will display -13 because of the 
  
  
 following bit level manipulation:
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Appendix E: Color Names and Numbers,"Listing of standard color names used in the 
 color
  statement.  The 
  
 corresponding RGB values are also listed. 
  
 Color
  
 RGB Values
  
 Swatch
  
 black
  
 0, 0, 0
  
  
 white
  
 255, 255, 255
  
  
 red
  
 255, 0, 0
  
  
 darkred
  
 128, 0, 0
  
  
 green
  
 0, 255, 0
  
  
 darkgreen
  
 0, 128, 0
  
  
 blue
  
 0, 0, 255
  
  
 darkblue
  
 0, 0, 128
  
  
 cyan
  
 0, 255, 255
  
  
 darkcyan
  
 0, 128, 128
  
  
 purple
  
 255, 0, 255
  
  
 darkpurple
  
 128, 0, 128
  
  
 yellow
  
 255, 255, 0
  
  
 darkyellow
  
 128, 128, 0
  
  
 orange
  
 255, 102, 0
  
  
 darkorange
  
 176, 61, 0
  
  
 gray /grey
  
 160, 160, 164
  
  
 darkgray / darkgrey
  
 128, 128, 128
  
  
 clear
  
  
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Appendix F: Musical Tones,"This chart will help you in converting the keys on a piano into 
  
 frequencies to use in the 
 sound
  statement.
  
 F - 175
  
 F# - 185
  
 G - 196
  
  
  
 G# - 208
  
 A - 220
  
  
  
 A# - 233
  
  
 B – 
 247 
  
 Middle C - 262
  
  
  
 C# - 277
  
 D - 294
  
  
  
 D# - 311
  
 E - 330 
  
 F - 349
  
  
  
 F# - 370
  
 G - 392
  
  
  
 G# - 415
  
 A - 440
  
  
  
 A# - 466
  
 B - 494 
  
 C - 523
  
  
  
 C# - 554
  
 D - 587
  
  
  
 D# - 622
  
 E - 659 
  
 F - 698
  
  
  
 F# - 740
  
 G - 784
  
  
  
 G# - 831
  
 A - 880
  
  
  
 A# - 932
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Appendix G: Key Values,"Key values are returned by the 
 key()
  function and represent the last 
 keyboard key pressed since the key was last read.  This table lists 
 the commonly used key values for the standard English keyboard. 
 Other key values exist.
  
 English (EN) Keyboard Codes
  
 Key
  
 #
  
  
  
 Key 
  
 #
  
  
  
 Ke 
 y
  
 #
  
  
 Key
  
 #
  
 Spac 
 e
  
 32
  
 A
  
 65
  
 L
  
 76
  
 W
  
 87
  
 0
  
 48
  
 B
  
 66
  
 M
  
 77
  
 X
  
 88
  
 1
  
 49
  
 C
  
 67
  
 N
  
 78
  
 Y
  
 89
  
 2
  
 50
  
 D
  
 68
  
 O
  
 79
  
 Z
  
 90
  
 3
  
 51
  
 E
  
 69
  
 P
  
 80
  
 ESC
  
 16777216
  
 4
  
 52
  
 F
  
 70
  
 Q
  
 81
  
 Backspace 
  
 16777219
  
 5
  
 53
  
 G
  
 71
  
 R
  
 82
  
 Enter
  
 16777220
  
 6
  
 54
  
 H
  
 72
  
 S
  
 83
  
 Left Arrow 
  
 16777234
  
 7
  
 55
  
 I
  
 73
  
 T
  
 84
  
 Up Arrow
  
 16777235
  
 8
  
 56
  
 J
  
 74
  
 U
  
 85
  
 Right 
 Arrow
  
 16777236
  
 9
  
 57
  
 K
  
 75
  
 V
  
 86
  
 Down 
 Arrow
  
 16777237
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Appendix H: Unicode Character Values ,NA,NA
– Latin (English),"This table shows the Unicode character values for standard Latin 
 (English) letters and symbols.  These values correspond with the 
 ASCII values that have been used since the 1960's.  Additional 
 character sets are available at 
 http://www.unicode.org
 .
  
 CHR
  
 #
   
 CHR
  
 #
   
 CHR
  
 #
   
 CHR
  
 #
   
 CHR
  
 #
   
 CHR
  
 #
  
 NUL
  
 0
  
 SYN
  
 22
  
 ,
  
 44
  
 B
  
 66
  
 X
  
 88
  
 n
  
 110
  
 SOH
  
 1
  
 ETB
  
 23
  
 -
  
 45
  
 C
  
 67
  
 Y
  
 89
  
 o
  
 111
  
 STX
  
 2
  
 CAN
  
 24
  
 .
  
 46
  
 D
  
 68
  
 Z
  
 90
  
 p
  
 112
  
 ETX
  
 3
  
 EM
  
 25
  
 /
  
 47
  
 E
  
 69
  
 [
  
 91
  
 q
  
 113
  
 ET
  
 4
  
 SUB
  
 26
  
 0
  
 48
  
 F
  
 70
  
 \
  
 92
  
 r
  
 114
  
 ENQ
  
 5
  
 ESC
  
 27
  
 1
  
 49
  
 G
  
 71
  
 ]
  
 93
  
 s
  
 115
  
 ACK
  
 6
  
 FS
  
 28
  
 2
  
 50
  
 H
  
 72
  
 ^
  
 94
  
 t
  
 116
  
 BEL
  
 7
  
 GS
  
 28
  
 3
  
 51
  
 I
  
 73
  
 _
  
 95
  
 u
  
 117
  
 BS
  
 8
  
 RS
  
 30
  
 4
  
 52
  
 J
  
 74
  
 `
  
 96
  
 v
  
 118
  
 HT
  
 9
  
 US
  
 31
  
 5
  
 53
  
 K
  
 75
  
 a
  
 97
  
 w
  
 119
  
 LF
  
 10
  
 Space
  
 32
  
 6
  
 54
  
 L
  
 76
  
 b
  
 98
  
 x
  
 120
  
 VT
  
 11
  
 !
  
 33
  
 7
  
 55
  
 M
  
 77
  
 c
  
 99
  
 y
  
 121
  
 FF
  
 12
  
 “
  
 34
  
 8
  
 56
  
 N
  
 78
  
 d
  
 100
  
 z
  
 122
  
 CR
  
 13
  
 #
  
 35
  
 9
  
 57
  
 O
  
 79
  
 e
  
 101
  
 {
  
 123
  
 SO
  
 14
  
 $
  
 36
  
 :
  
 58
  
 P
  
 80
  
 f
  
 102
  
 |
  
 124
  
 SI
  
 15
  
 %
  
 37
  
 ;
  
 59
  
 Q
  
 81
  
 g
  
 103
  
 }
  
 125
  
 DLE
  
 16
  
 &
  
 38
  
 <
  
 60
  
 R
  
 82
  
 h
  
 104
  
 ~
  
 126
  
 DC1
  
 17
  
 '
  
 39
  
 =
  
 61
  
 S
  
 83
  
 i
  
 105
  
 DEL
  
 127
  
 DC2
  
 18
  
 (
  
 40
  
 >
  
 62
  
 T
  
 84
  
 j
  
 106
  
  
  
 DC3
  
 19
  
 )
  
 41
  
 ?
  
 63
  
 U
  
 85
  
 k
  
 107
  
  
  
 DC4
  
 20
  
 *
  
 42
  
 @
  
 64
  
 V
  
 86
  
 l
  
 108
  
  
  
 NAK
  
 21
  
 +
  
 43
  
 A
  
 65
  
 W
  
 87
  
 m
  
 109
  
  
  
 0-31 and 127 are non-printable.
  
 Adapted from the Unicode Standard 5.2  – Available from 
 http://www.unicode.org/charts/PDF/U0000.pdf
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Appendix I: Reserved Words,"These are the words that the BASIC-256 language uses to perform 
 various tasks.  You may not use any of these words for variable 
 names or labels for the GOTO and GOSUB statements
  
 #
  
 dbcloseset
  
 imgload
  
 abs
  
 dbexecute
  
 imgsave
  
 acos
  
 dbfloat
  
 input
  
 and
  
 dbint
  
 instr
  
 asc
  
 dbopen
  
 int
  
 asin
  
 dbopenset
  
 key
  
 atan
  
 dbrow
  
 kill
  
 black
  
 dbstring
  
 lasterror
  
 blue
  
 decimal
  
 lasterrorextra
  
 ceil
  
 degrees
  
 lasterrorline
  
 changedir
  
 dim
  
 lasterrormessage
  
 chr
  
 do
  
 left
  
 circle
  
 else
  
 length
  
 clear
  
 end
  
 line
  
 clg
  
 endif
  
 log
  
 clickb
  
 endwhile
  
 log10
  
 clickclear
  
 eof
  
 lower
  
 clickx
  
 exists
  
 md5
  
 clicky
  
 false
  
 mid
  
 close
  
 fastgraphics
  
 minute
  
 cls
  
 float
  
 month
  
 color
  
 floor
  
 mouseb
  
 colour
  
 font
  
 mousex
  
 cos
  
 for
  
 mouseynetaddress
  
 currentdir
  
 getcolor
  
 netclose
  
 cyan
  
 getslice
  
 netconnect
  
 darkblue
  
 getsetting
  
 netdata
  
 darkcyan
  
 gosub
  
 netlisten
  
 darkgray
  
 goto
  
 netread
  
 darkgrey
  
 graphheight
  
 netwritenext
  
 darkgeeen
  
 graphsize
  
 not
  
 darkorange
  
 graphwidth
  
 offerror
  
 darkpurple
  
 gray
  
 open
  
 darkred
  
 grey
  
 onerror
  
 darkyellow
  
 green
  
 or
  
 day
  
 hour
  
 orange
  
 dbclose
  
 if
  
 pause
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Appendix J: Error Numbers,"Error #
  
 Error Description (EN)
  
 0
  
 ERROR_NONE
  
  
 1
  
 ERROR_NOSUCHLABEL
  
 “No such label”
  
 2
  
 ERROR_FOR1
  
 “Illegal FOR – start number > end 
 number”
  
 3
  
 ERROR_FOR2
  
 “Illegal FOR – start number < end 
 number”
  
 4
  
 ERROR_NEXTNOFOR
  
 “Next without FOR”
  
 5
  
 ERROR_FILENUMBER
  
 “Invalid File Number”
  
 6
  
 ERROR_FILEOPEN
  
 “Unable to open file”
  
 7
  
 ERROR_FILENOTOPEN
  
 “File not open.”
  
 8
  
 ERROR_FILEWRITE
  
 “Unable to write to file”
  
 9
  
 ERROR_FILERESET
  
 “Unable to reset file”
  
 10
  
 ERROR_ARRAYSIZELARGE
  
 “Array dimension too large”
  
 11
  
 ERROR_ARRAYSIZESMALL
  
 “Array dimension too small”
  
 12
  
 ERROR_NOSUCHVARIABLE
  
 “Unknown variable”
  
 13
  
 ERROR_NOTARRAY
  
 “Not an array variable”
  
 14
  
 ERROR_NOTSTRINGARRAY
  
 “Not a string array variable”
  
 15
  
 ERROR_ARRAYINDEX
  
 “Array index out of bounds”
  
 16
  
 ERROR_STRNEGLEN
  
 “Substring length less that zero”
  
 17
  
 ERROR_STRSTART
  
 “Starting position less than zero”
  
 18
  
 ERROR_STREND
  
 “String not long enough for given 
 starting character”
  
 19
  
 ERROR_NONNUMERIC
  
 “Non-numeric value in numeric 
 expression”
  
 20
  
 ERROR_RGB
  
 “RGB Color values must be in the range 
 of 0 to 255.”
  
 21
  
 ERROR_PUTBITFORMAT
  
 “String input to putbit incorrect.”
  
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
Appendix K: Glossary,Glossary of terms used in this book.,NA
algorithm,– A step-by-step process for solving a problem.,NA
angle,"– An angle is formed when two line segments (or rays) start at the 
 same point on a plane.  An angle's measurement is the 
 amount of rotation from one ray to another on the plane and 
 is typically expressed in",NA
radians,or,NA
degrees,.,NA
argument,"– A data value included in a statement or function call used to 
 pass information.  In BASIC-256 argument values are not 
 changed by the statement or function.",NA
array,"– A collection of data, stored in the computer's memory, that is 
 accessed by using one or more integer indexes.  See also",NA
numeric array,",",NA
one dimensional array,",",NA
string array,", 
 and",NA
two dimensional array,.,NA
ASCII,"– (acronym for American Standard Code for Information 
  
 Interchange)  Defines a numeric code used to represent 
 letters and symbols used in the English Language.  See also",NA
Unicode,.,NA
asynchronous,"– Process or statements happening at one after the 
  
 other.",NA
Boolean Algebra,"– The algebra of true/false values created by Charles 
  
 Boole over 150 years ago.",NA
Cartesian Coordinate System,"– Uniquely identify a point on a plane 
 by a pair of distances from the origin (0,0).  The two distances 
 are measured on perpendicular axes.",NA
column (database),"– defines a single piece of information that will be 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
constant,– A value that can not be changed.,NA
data structure,"– is a way to store and use information efficiently in a 
  
 computer system",NA
database,"– An organized collection of data.  Most databases are 
  
  
 computerized and consist of tables of similar information that 
  
 are broken into rows and columns.  See also:",NA
column,",",NA
row,", 
  
 SQL, and",NA
table,.,NA
degrees,"– A unit of angular measure.  Angles on a plane can have 
  
 measures in degrees of 0 to 360.  A right angle is 90 degrees. 
  
 See also",NA
angle,and,NA
radians,.,NA
empty string,"– A string with no characters and a length of zero (0). 
  
 Represented by two quotation marks (“”).  See also",NA
string,.,NA
false,"– Boolean value representing not true.  In BASIC-256 it is 
 actually short hand for the integer zero (0).  See also",NA
Boolean Algebra,and,NA
true,.,NA
floating point number,"– A numeric value that may or may not contain 
 a decimal point.  Typically floating point numbers have a 
 range of 
 ±
 1.7
 ×
 10
 ±
 308
  with 15 digits of precision.",NA
font,– A style of drawing letters.,NA
frequency,"– The number of occurrences of an event over a specific 
  
 period of time.  See also",NA
hertz,.,NA
function,"– A special type of statement in BASIC-256 that may take zero 
 or more values, make calculations, and return information to 
 your program.",NA
graphics output area,"– The area on the screen where drawing is 
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
hertz (hz),"– Measure of frequency in cycles per second.  Named for 
  
 German physicist Heinrich Hertz.  See also",NA
frequency,.,NA
integer,"– A numeric value with no decimal point.  A whole number. 
  
 Typically has a range of –2,147,483,648 to 
 2,147,483,647.",NA
IP address,"– Short for Internet Protocol address.  An IP address is 
 a 
  
 numeric label assigned to a device on a network.",NA
label,"– A name associated with a specific place in the program.  Used for 
  
 jumping to with the 
 goto
  and 
 gosub
  statements.",NA
list,"– A collection of values that can be used to assign arrays and in some 
 statements.  In BASIC-256 lists are represented as comma (,) 
 separated values inside a set of curly-braces ({}).",NA
logical error,"– An error that causes the program to not perform as 
  
 expected.",NA
named constant,"– A value that is represented by a name but can not 
  
 be changed.",NA
numeric array,– An array of numbers.,NA
numeric variable,"– A variable that can be used to store integer or 
  
 floating point numbers.",NA
one dimensional array,"- A structure in memory that holds a list of data 
  
 that is addressed by a single index.  See also",NA
array,.,NA
operator,"– Acts upon one or two pieces of data to perform an 
 action.",NA
pixel,"– Smallest addressable point on a computer display 
 screen.",NA
point,"– Measurement of text – 1 point = 1/72”.  A character set in 
 12 
  
 point will be 12/72” or 1/6” tall.",NA
port – ,"A software endpoint number used to create and communicate on a 
  
 socket.",NA
pseudocode,"– Description of what a program needs to do in a natural 
 (non-computer) language.  This word contains the prefix 
 “pseudo” which means false and “code” for programming 
 text.",NA
radian,"- A unit of angular measure.  Angles on a plane can have 
 measures in radians of 0 to 2
 
 .  A right angle is 
 
 /2 
 degrees. See also",NA
angle,and,NA
degrees,.,NA
radius,"– Distance from a circle to it's center.  Also, ½ of a circle's 
  
 diameter.",NA
RGB –,"Acronym for Red Green Blue.  Light is made up of these three 
  
 colors.",NA
row (database),"– Also called a record or tuple.  A row can be thought of 
  
 as a single member of a table.",NA
socket,"– A software endpoint that allows for bi-directional (2 way) 
 network communications between two process on a single 
 computer or two computers.",NA
sprite,– An image that is integrated into a graphical scene.,NA
SQL,"– Acronym for Structured Query Language.  SQL is the most 
 widely 
  
 used language to manipulate data in a relational database.",NA
statement,"– A single complete action.  Statements perform something 
  
 and do not return a value.",NA
string,"– A sequence of characters (letters, numbers, and symbols). 
 String constants are surrounded by double quotation marks 
 (“).",NA
string array,"– An array of strings.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
string variable,"– A variable that can be used to store string values.  A 
 string variable is denoted by placing a dollar sign ($) after the 
 variable name.",NA
sub-string,– Part of a larger string.,NA
subroutine,"– A block of code or portion of a larger program that 
  
 performs a task independently from the rest of the program. 
  
 A piece that can be used and re-used by many parts of a 
 program.",NA
syntax error,"– An error with the structure of a starement so that the 
  
 program will not execute.",NA
synchronous,– Happening at the same time.,NA
table (database),"– Data organized into rows and columns.  A table has 
  
 a specific number of defined columns and zero or more rows.",NA
transparent,– Able to see through.,NA
text output area,"– The area of the screen where plain text and errors is 
  
 displayed.",NA
true,"– Boolean value representing not false.  In BASIC-256 it is 
 actually short hand for the integer one (1).  See also",NA
Boolean Algebra,and,NA
false,.,NA
two dimensional array,"– A structure in memory that will hold rows and 
  
 columns of data.  See also",NA
array,.,NA
Unicode,"– The modern standard used to represent characters and 
  
 symbols of all of the world's languages as integer numbers.",NA
variable,"– A named storage location in the computer's memory that can 
  
 be changed or varied.
  
 So You Want to Learn to Program?
  
 © 2010 James M. Reneau.",NA
