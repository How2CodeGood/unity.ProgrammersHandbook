Larger Text,Smaller Text,Symbol
Drupal 8 Development ,NA,NA
Cookbook,NA,NA
Over 60 hands-on recipes that get you acquainted with ,NA,NA
Drupal 8's features and help you harness its power,NA,NA
Matt Glaman,BIRMINGHAM - MUMBAI,NA
Drupal 8 Development Cookbook,"Copyright © 2016 Packt Publishing
  
 All rights reserved. No part of this book may be reproduced, stored in a retrieval 
 system, or transmitted in any form or by any means, without the prior written 
 permission of the publisher, except in the case of brief quotations embedded in critical 
 articles or reviews.
  
 Every effort has been made in the preparation of this book to ensure the accuracy of the 
 information presented. However, the information contained in this book is sold without 
 warranty, either express or implied. Neither the author nor Packt Publishing, and its 
 dealers and distributors will be held liable for any damages caused or alleged to be 
 caused directly or indirectly by this book.
  
 Packt Publishing has endeavored to provide trademark information about all of 
 the companies and products mentioned in this book by the appropriate use of 
 capitals. 
  
 However, Packt Publishing cannot guarantee the accuracy of this information.
  
 First published: March 2016
  
 Production reference: 1040316
  
 Published by Packt Publishing Ltd.
  
 Livery Place 
  
 35 Livery Street 
  
 Birmingham B3 2PB, UK.
  
 ISBN 978-1-78588-147-3
  
 www.packtpub.com",NA
Credits,"Author 
  
 Matt Glaman
  
 Reviewer 
  
 Todd Zebert
  
 Commissioning Editor 
 Amarabha Banerjee
  
 Acquisition Editor 
 Manish Nainani
  
 Content Development Editor 
 Deepti Thore
  
 Technical Editor 
  
 Naveenkumar Jain
  
 Copy Editors 
  
 Ting Baker
  
 Rashmi Sawant
  
 Project Coordinator 
 Shweta H Birwatkar
  
 Proofreader
  
 Indexer 
  
 Tejal Daruwale Soni
  
 Graphics 
  
 Jason Monteiro
  
 Production Coordinator 
 Manu Joseph
  
 Cover Work 
  
 Manu Joseph",NA
About the Author,"Matt Glaman
  is a developer at Commerce Guys. He is an open source developer who has 
 been working with Drupal since 2013. He has also been developing web apps for many years 
 prior to this. Since then, he has contributed to over 60 community projects, including being a 
 co-maintainer of Drupal Commerce. While mostly focusing on Drupal and PHP development, 
 he created 
 https://contribkanban.com
 , an AngularJS application, to provide Kanban 
 boards for the Drupal community to collaborate with.
  
 I would like to thank, and I am grateful to, my beautiful and loving wife for 
 putting up with the late nights split between work, spending time 
 contributing to the Drupal community, and writing this book. I would also 
 like to thank my two sons; thank you for giving up your playtime so that 
 Daddy could write this book.
  
 and kicking off my Drupal career. I would also like to thank my mentors 
  
 Drupal community!",NA
About the Reviewer,"Todd Zebert
  has been involved with Drupal since version 6. He is a full-stack web developer 
  
 Miles. He has also been a technical reviewer for 
 Developing with Drush
 , 
 Packt Publishing
 . He 
 has a diverse background in technology, including infrastructure, network engineering, 
 project management, and IT leadership. His experience with web development started 
 with the original Mosaic graphical web browser, SHTML/CGI, and Perl.
  
 He's an entrepreneur involved with the Los Angeles start-up community. He's a 
 believer in volunteering, open source, the Maker movement, and contributing back. 
 He's also an advocate for Science, Technology, Engineering, Art, and Math (STEAM) 
 education.
  
 I'd like to thank the Drupal community, which is like no other.
  
 Finally, I'd like to thank my pre-teen son with whom I get to share my 
 interest in technology and program video games and microcontrollers.",NA
www.PacktPub.com,NA,NA
"eBooks, discount offers, and more ","Did you know that Packt offers eBook versions of every book published, with PDF and ePub 
  
 www.PacktPub.com
  and as a print 
 book customer, you are entitled to a discount on the eBook copy. Get in touch with us at 
 customercare@packtpub.com
  for more details.
  
 At 
 www.PacktPub.com
 , you can also read a collection of free technical articles, sign up 
 for a range of free newsletters and receive exclusive discounts and offers on Packt books 
 and eBooks.
  
 TM
  
 https://www2.packtpub.com/books/subscription/packtlib
  
 library. Here, you can search, access, and read Packt's entire library of books.",NA
Why Subscribe?,"Fully searchable across every book published by Packt
  
 Copy and paste, print, and bookmark content
  
 On demand and accessible via a web browser",NA
Table of Contents,"Preface 
  
 Chapter 1: Up and Running with Drupal 8 
 Introduction  
 Installing Drupal  
 Using a distribution  
 Installing modules and themes  
 Using multisites in Drupal 8  
 Tools for setting up an environment  
 Running Simpletest and PHPUnit  
 Chapter 2: The Content Authoring Experience 
  Introduction  
 Adding and editing content  
 Creating a menu and linking content 
 Providing inline editing  
 Creating a custom content type  
 Customizing the form display of a node 
 Customizing the display output of a node  
 Chapter 3: Displaying Content through Views 
 Introduction  
 Listing content  
 Editing the default admin interfaces  
 Creating a block from a View  
 Utilizing dynamic arguments  
 Adding a relationship in a View  
 Providing an Entity Reference result View  
 v
  
 1 
  
 1  
 2  
 8  
 10  
 14  
 16  
 18 
 23 
  
 23 
 27  
 30  
 32  
 34 
 40  
 43 
 47 
  
 47  
 48  
 52  
 55  
 58  
 61  
 66",NA
Preface,"Drupal is a content management system used to build websites for small businesses, e-
 commerce, enterprise systems, and many more. Created by over 4,500 contributors, 
 Drupal 8 provides many new features for Drupal. Whether you are new to Drupal, or an 
 experienced Drupalist, 
 Drupal 8 Development Cookbook
  contains recipes that help you 
 immerse yourself in what Drupal 8 has to offer.",NA
What this book covers,"Chapter 1
 , 
 Up and Running with Drupal 8
 , covers the requirements to run Drupal 8, walks you 
 through the installation process, and extends Drupal.
  
 Chapter 2
 , 
 The Content Authoring Experience
 , dives into the content management experience 
 in Drupal, including working with the newly bundled CKEditor.
  
 Chapter 3
 , 
 Displaying Content through Views
 , explores how to use Views to create different 
 ways to list and display your content in Drupal.
  
 Chapter 4
 , 
 Extending Drupal
 , explains how to work with Drupal's Form API to create 
 custom forms to collect data.
  
 Chapter 5
 , 
 Frontend for the Win
 , teaches you how to create a theme, work with the new 
 templating system, Twig, and harness Drupal's responsive design features.
  
 Chapter 6
 , 
 Creating Forms with the Form API
 , teaches you how to write a module for Drupal, 
 the building blocks of functionalities in Drupal.
  
 Chapter 7
 , 
 Plug and Play with Plugins
 , introduces plugins, one of the newest components in 
  
 Chapter8
 , 
 Multilingual and Internationalization
 , introduces features provided by Drupal 8 
  
 administration.
  
  
 v",NA
What you need for this book ,"In order to work with Drupal 8 and to run the code examples found in this book, the 
 following software will be required: 
  
 Web server software stack: 
  
   
 Web server: Apache (recommended), Nginx, or Microsoft IIS 
  
   
 Database: MySQL 5.5 or MariaDB 5.5.20 or higher 
  
   
 PHP: PHP 5.5.9 or higher 
  
 Chapter 1
 , 
 Up and Running with Drupal 8,
  details all of these requirements and includes a 
 recipe that highlights an out of the box development server setup.
  
 Atom.io editor: 
 https://atom.io/ 
  
  
  
 https://www.jetbrains.com/ 
 phpstorm/ 
  
  
 https://www.drupal.org/project/vimrc",NA
Who this book is for ,"This book is for those who have been working with Drupal, such as site builders and backend 
 and frontend developers, and who are eager to see what awaits them when they start using 
 Drupal 8.
  
  
   
 vi",NA
Conventions,"information. Here are some examples of these styles, and an explanation of their meaning.
  
 Code words in text are shown as follows: ""The 
 \Drupal\Core�rl
  class provides 
 static 
 methods to generate an instance of itself, such as 
 ::fromRoute()
 .""
  
 A block of code is set as follows:
  
  
  /**
  
   
  * {@inheritdoc}
  
   
  */
  
  
  public function alterRoutes(RouteCollection $collection) { 
 if ($route = $collection->get('mymodule.mypage)) {
  
     
  $route->setPath('/my-page');
  
   
  }
  
  
  }
  
 When we wish to draw your attention to a particular part of a code block, the relevant lines 
 or items are set in bold:
  
  
  /**
  
   
  * {@inheritdoc}
  
   
  */
  
  
  public function alterRoutes(RouteCollection $collection) { 
 if ($route = $collection->get('mymodule.mypage)) {
  
     
  $route->setPath('/my-page');
  
   
  }
  
  
  }
  
 Any command-line input or output is written as follows:
  
 $ php core/scripts/run-tests.sh PHPUnit
  
 New terms and important words are shown in bold. Words that you see on the screen, in 
 menus or dialog boxes for example, appear in the text like this: ""Scroll down the page and 
 click Install and set as default under Bootstrap to enable and set the theme as default.""
  
  
 Warnings or important notes appear in a box like this.
  
  
  
 Tips and tricks appear like this.
  
  
  
  
 vii",NA
Reader feedback,"Feedback from our readers is always welcome. Let us know what you think about this 
 book—what you liked or may have disliked. Reader feedback is important for us to 
 develop titles that you really get the most out of.
  
 To send us general feedback, simply send an e-mail to 
 feedback@packtpub.com
 , 
 and mention the book title via the subject of your message.
  
 If there is a topic that you have expertise in and you are interested in either writing 
 or contributing to a book, see our author guide on 
 www.packtpub.com/authors
 .",NA
Customer support,"Now that you are the proud owner of a Packt book, we have a number of things to help you 
 to get the most from your purchase.",NA
Downloading the example code,"account at 
 http://www.packtpub.com
 . If you purchased this book elsewhere, you can 
 visit 
 http://www.packtpub.com/support 
  
 to you.",NA
Downloading the color images of this book,"in this book. The color images will help you better understand the changes in the output. 
  
  
 https://www.packtpub.com/sites/default/files/ 
 downloads/Drupal8_Development_Cookbook_ColorImages.pdf
 .",NA
Errata,"Although we have taken every care to ensure the accuracy of our content, mistakes do happen. 
  
 grateful if you would report this to us. By doing so, you can save other readers from frustration 
  
 by visiting 
 http://www.packtpub.com/submit-errata
 , selecting your book, clicking 
 on the erratasubmissionform link, and entering the details of your errata. Once your errata 
 are 
  
 added to any list of existing errata, under the Errata section of that title. Any existing errata 
 can be viewed by selecting your title from 
 http://www.packtpub.com/support
 .
  
  
   
 viii",NA
Piracy,"Piracy of copyright material on the Internet is an ongoing problem across all media. At Packt, 
 we take the protection of our copyright and licenses very seriously. If you come across any 
 illegal copies of our works, in any form, on the Internet, please provide us with the location 
 address or website name immediately so that we can pursue a remedy.
  
 Please contact us at 
 copyright@packtpub.com
  with a link to the suspected pirated material.
  
 We appreciate your help in protecting our authors, and our ability to bring you valuable content.",NA
Questions,"questions@packtpub.com
  if you are having a problem with 
 any aspect of the book, and we will do our best to address it.
  
  
 ix",NA
1 ,NA,NA
Up and Running with ,NA,NA
Drupal 8,"In this chapter we'll get familiar with Drupal 8 and cover:
  
 Installing Drupal 
  
 Using a distribution 
  
 Installing modules and themes 
  
 Using multisites in Drupal 8 
  
 Tools for setting up an 
 environment 
  
 Running Simpletest and PHPUnit",NA
Introduction,"This chapter will kick off with an introduction to getting a Drupal 8 site installed and 
 running. We will walk through the interactive installer that most will be familiar with from 
 previous versions of Drupal, and from the command line with Drush.
  
 Once we have installed a standard Drupal 8 site, we will cover the basics of extending 
 Drupal. We will discuss using distributions and installing contributed projects, such as 
 modules and themes. We will also include uninstalling modules, as this has changed in 
 Drupal 8.
  
 The chapter will wrap up with recipes on how to set up a multisite installation in Drupal 8,",NA
Installing Drupal,"Just like most things, there are many different methods for downloading Drupal and 
 installing it. In this recipe, we will focus on downloading Drupal from 
 https://www.drupal.org/ 
 and setting it up on a basic Linux, Apache, MySQL, PHP 
 (LAMP) server.",NA
Getting ready,"Before we start, you are going to need the below mentioned development environments that 
 meet the new system requirements for Drupal 8:
  
 Apache 2.0 (or higher) or Nginx 1.1 (or higher) web server.
  
 PHP 5.5.9 or higher.
  
 to create databases, or a created database with a user that has privileges to make 
 tables in that database.
  
  
 https://www.drupal.org/ 
 requirements/php
  for up to date requirements information.
  
  
 Drupal 8 ships with Symfony components. One of the new 
  
  
 dependencies in Drupal 8, to support the Symfony routing system, is 
  
 that the Drupal 
 Clean URL
  functionality is required. If the server is 
  
 using Apache, ensure that 
 mod_rewrite
  is enabled. If the server is 
  
 using Nginx, the 
 ngx_http_rewrite_module
  must be enabled.
  
 Generally, this is the 
 /var/www
  folder. If you used a tool such as XAMPP, WAMP, or MAPP 
 please consult the proper documentation to know your document root.",NA
How to do it…,"We need to follow the below steps to install Drupal 8:
  
 1. First we need to head to 
 Drupal.org
  and download the latest release of Drupal 8.x! 
  
  
 recommended release at the bottom of this page: 
 https://www.drupal.org/project/drupal
 . Extract the archive and place the 
  
  
 drupal8
 :",NA
How it works…,"Drupal 8 supports a multilingual installation. When you visit the installer it reads the 
 language code from the browser. With this language code, it will then select a supported 
  
 downloaded from 
 https://localize.drupal.org/
 . Previous versions of Drupal did 
 not support automated multilingual installations.
  
 For example, if your server has the PHP Xdebug extension installed, the 
 minimum 
 max_nested_value
  must be 256 or else Drupal will not install.",NA
There's more…,"The Drupal installation process can be very straight forward, but there are a few 
 items worth discussing.
  
 Creating a database user and a database 
 In order to install Drupal you will need to have access to a database server and an existing 
 (or ability to create) database (or the ability to create one). This process will depend on 
 your server environment setup.
  
 If you are working with a hosting provider, there is more than likely a web based control 
 panel. This should allow you to create databases and users. Refer to your hosting's 
 documentation.",NA
See also,"For more on multilingual, see 
 Chapter 8
 , 
 Multilingual and Internationalization 
 For more on using the command line and Drupal, see 
 Chapter 13
 , 
 Drupal CLI 
 See 
 the 
 Drupal.org
  handbook on installing Drupal https://www.drupal.org/ 
 documentation/install 
  
 Drush site install 
 http://drushcommands.com/drush-8x/site-install/ 
 site-install",NA
Using a distribution,"A distribution
  
 Drupal.org
  
  
  here 
  
 https://www.drupal.org/project/project_distribution
 .",NA
How to do it…,"Drupal 8:
  
 1. Download a distribution from 
 Drupal.org
 . For this recipe let's use the Demo 
  
 Framework provided by Acquia 
 https://www.drupal.org/project/df
 . 
 2. Select the recommended version for the 8.x branch.
  
 3. Extract the folder 
  
  
 df
 .
  
 4. Install Drupal as you would normally, by visiting your Drupal site in your 
 browser. 5. 
  
 this are automatically selected and assumed to be the default installation option.
  
  
 The exclusive flag was added with Drupal 7.22 to 
  
  
 improve the experience of using a Drupal distribution 
  
 http://drupal.org/node/1961012
 .
  
 6. Follow the installation instructions and you'll have installed the distribution!",NA
How it works…,install a set of modules on installation.,NA
There's more…,"few items worth discussing.
  
 projects (themes, modules, third party libraries) that will make up a Drupal code base. 
  
 If you look at the Demo Framework's folder you will see 
 drupal-org.make
  and 
 drupal-org-core.make
 . These are parsed by the 
 Drupal.org
  packager to compile 
 the code base and package it as a 
 .zip
  or 
 .tar.gz
 , like the one you downloaded.
  
 Installing with Drush  
  
 recipe, you can install a Drupal site through the 
  
 The following command would install the Drupal 8 site using the Demo 
 Framework.
  
 $ drush pm-download df 
  
 $ drush site-install df –db-
 url=mysql://user:pass@localhost/database",NA
See also…,"See 
 Chapter 13
 , 
 Drupal CLI 
  
   
 Drush documentation page for drush make 
  
   
 http://www.drush.org/en/master/make/ 
  
   
 Distribution documentation on 
 Drupal.org
 , 
  
   
 https://www.drupal.org/documentation/build/distributions",NA
Installing modules and themes,"Drupal 8 provides more functionality out of the box than previous versions of Drupal – 
 allowing you to do more with less. However, one of the more appealing aspects of Drupal is 
 the ability to 
  
 In this recipe, we will download and enable the Honeypot module, and tell Drupal to use the 
 Bootstrap theme. The Honeypot module provides honeypot and timestamp anti-spam 
 measures on Drupal sites. This module helps protect forms from spam submissions. The 
 Boostrap theme implements the Bootstrap front-end framework and supports using 
 Bootswatch styles for theming your Drupal site.",NA
Getting ready,"If you have used Drupal previously, take note that the folder structure has changed. Modules, 
  
 longer under sites/all. For more information about the developer experience change, see 
 https://www.drupal.org/node/22336
 .
  
  
 Downloading the example code
  
  
 purchased from your account at 
 http://www.packtpub.com
 . If you 
  
 purchased this book elsewhere, you can visit 
 http://www.packtpub.
  
 com/support",NA
How to do it…,"Let's install modules and themes:
  
 1. Visit 
 https://www.drupal.org/project/honeypot
  and download the latest 
  
 8.x release for Honeypot.
  
 2. Extract the archive and place the 
 honeypot
  folder inside the 
 modules
  folder inside 
  
 of your Drupal core installation:",NA
How it works…,"The following outlines the procedure for installing a module or theme and how 
 Drupal discovers these extensions.
  
 Discovering modules and themes  
  
 folder 
  
 .info.yml
  
 Respective core folder (modules, themes)
  
 The root 
 modules
  or 
 themes
  folder
  
 The current site directory (default or current domain)
  
 Module installation  
 By placing the module inside the root 
 modules
  folder, we are allowing Drupal to discover 
 the module and allow it to be installed. When a module is installed, Drupal will register its 
 code with the system through the 
 module_installer
  service. The service will check for 
 required 
  
 will not be installed
 .
  
 Theme installation  
 A theme is installed through the 
 theme_installer
  service and sets any default 
  
 system.theme.default
  to the theme's machine name (in the recipe it would be 
 bootstrap
 .)",NA
There's more…,"The following outlines the procedure for installing a module or theme and some 
 more information on it.
  
 Installing a module with Drush  
 Modules can be downloaded and enabled through the command line using 
 drush
 . The 
 command to replicate the recipe would resemble:
  
 $ drush pm-download honeypot
  
 $ drush pm-enable honeypot
  
 ask if you would like to enable those, too.",NA
See also…,"Chapter 4
 , 
 Extending Drupal
 , to learn about setting defaults on enabling a module
  
 Chapter 9
 ,",NA
Using multisites in Drupal 8,"Drupal provides the ability to run multiple sites from one single Drupal code base instance. 
 This feature is referred to as multisite. Each site has a separate database; however, projects 
 stored in 
 modules
 , , and 
 themes
  can be installed by all of the sites.
  
 Site folders can also contain their own modules and themes. When provided, these can only 
 be used by that one site.
  
 The 
 default
  folder is the default folder used if there is not a matching domain name.",NA
Getting ready,"If you are going to work with multisite functionality, you should have an understanding of how 
  
 two subdomains under localhost called 
 dev1
  and 
 dev2
 .",NA
How to do it…,"We will use multisites in Drupal 8 by two subdomains under localhost:
  
 1. Copy 
 sites/example.sites.php
  to 
 sites/sites.php
 .
  
 2. Create a 
 dev1.localhost
  and a 
 dev2.localhost
  folder inside of the sites folder.
  
 3. Copy the 
 sites/default/default.settings.phpdev1.localhost 
  
 and 
 dev2.localhost
  as 
 settings.php
  in each respective folder:
  
  
 4. Visit 
 dev1.localhost
  
 5. Visit 
 dev2.localhost
  and see that you still have the option to install a site!",NA
How it works…,"The 
 sites.php
  must exist for multisite functionality to work. By default, you do not need 
 to modify its contents. The 
 sites.php
  
 The 
 DrupalKernel
  class provides 
 findSitePath
  and 
 getSitePath
  to discover the site 
 folder path. On Drupal's bootstrap this is initiated and reads the incoming HTTP host to load 
 the proper 
 settings.phpsettings.php 
  
 loaded and parsed into a 
 \Drupal\Core\Site\Settings
  instance. This allows Drupal to 
 connect to the appropriate database.",NA
There's more…,"Let's understand the security concerns of using multisite:
  
 Security concerns 
 There can be cause for concern if using multisite. Arbitrary PHP code executed on a Drupal 
 site might be able to affect other sites sharing the same code base. Drupal 8 marked the 
 removal of the 
 PHP Filter
  module that allowed site administrators to use PHP code in 
 the administrative interface. While this mitigates the various ways an administrator had 
 easy access to run PHP through an interface it does not mitigate the risk wholesale. For 
 example, the 
 PHP Filter
  module is now a contributed project and could be installed.",NA
See also…,"Multi-site documentation on 
 Drupal.org
 , 
 https://www.drupal.org/ 
 documentation/install/multi-site",NA
Tools for setting up an environment,"One of the initial hurdles to getting started with Drupal is a local development 
 environment. This recipe will cover how to set up the DrupalVM project by Jeff Geerling. 
 DrupalVM is a VirtualBox 
  
 It will set up all of your services and build a Drupal installation for you.
  
 Luckily you only need to have VirtualBox and Vagrant installed on your machine and 
 DrupalVM works on Windows, Mac OS X, and Linux.",NA
Getting ready,"To get started, you will need to install the two dependencies required for DrupalVM:
  
 VirtualBox: 
 https://www.virtualbox.org/wiki/Downloads
  
 Vagrant: 
 http://www.vagrantup.com/downloads.html",NA
How to do it…,"Let's set up the DrupalVM project by Jeff Geerling. DrupalVM is a VirtualBox virtual machine 
  
 1. Download the DrupalVM archive from 
 https://github.com/geerlingguy/ 
  
 drupal-vm/archive/master.zip
 .",NA
How it works…,"DrupalVM is a development project that utilizes the Vagrant tool to create a VirtualBox 
  
 Vagrantfile
 . Vagrant then 
 uses Ansible – an open source IT automation platform – to install Apache, PHP, MySQL, 
 and other services on the virtual machine.
  
 The 
 config.yml 
  
 virtual machine and provisioning process. It also uses Drush to create and install a Drupal 
 8 
  
 drupal.make.ymlmake
  
 contributed projects.
  
 The 
 vagrant up
  command tells Vagrant to either launch an existing virtual machine or 
 create one anew in a headless manner. When Vagrant creates a new virtual machine it 
 triggers the provisioning process. In this instance Ansible will read the 
 provisioning/playbook.yml
  
 however, are the 
 config.yml
  and 
 drupal.make.yml",NA
There's more…,"The topic of automating and streamlining a local environment is quite popular right now 
 with quite a few different options. If you are not comfortable with using Vagrant, there are a 
 few other options that provide a server installation and Drupal.
  
 Acquia Dev Desktop 
 Acquia Dev Desktop is developed by Acquia and can be found at 
  
 https://docs.acquia.com/dev-desktop2
 . It is an automated environment 
 installer for Windows and Mac. The Dev Desktop application allows you to create a 
 regular Drupal installation or select from a distribution.
  
 XAMPP + Bitnami 
 XAMPP – Apache + MySQL + PHP + Perl – is a cross platform environment installation. 
 XAMPP is an open source project from Apache Friends. XAMPP has partnered with Bitnami 
  
 download XAMPP at 
 https://www.apachefriends.org/download.html
 .
  
 Kalabox 
 Kalabox 
  
 for Drupal development. Kalabox is cross-platform compatible, allowing you to easily 
 work on Windows machines. It is based for the command line and provides application 
 binaries for you to 
  
 http://www.kalamuna.com/products/kalabox/
 .",NA
See also…,"See 
 Chapter 13
 , 
 Drupal CLI
  
 DrupalVM documentation 
 http://docs.drupalvm.com/en/latest/
  
 Drupal.org
  community documentation on local environment set-
 up 
 https://www.drupal.org/node/157602",NA
Running Simpletest and PHPUnit,"Drupal 8 ships with two testing suites. Previously Drupal only supported 
 Simpletest
 . Now 
  
 testing without requiring a full Drupal bootstrap, which occurs with each 
 Simpletest
  
 test. Read the change record here: 
 https://www.drupal.org/node/2012184
 .",NA
Getting ready ,"Currently core comes with Composer dependencies prepackaged and no extra steps need to 
 be taken to run PHPUnit. This recipe will demonstrate how to run tests the same way that 
 the QA testbot on 
 Drupal.org
  does.
  
  
 The process of managing Composer dependencies may change, but is 
  
  
 currently postponed due to Drupal.org's testing and packaging infrastructure. 
  
 Read more here 
 https://www.drupal.org/node/1475510
 .",NA
How to do it…,"1. First enable the 
 Simpletest
  module. Even though you might only want to run 
  
  
 PHPUnit, this is a soft dependency for running the test runner script.
  
 2. Open a command line terminal and navigate to your Drupal installation directory 
  
 and run the following to execute all available PHPUnit tests: 
  
  
 php core/scripts/run-tests.sh PHPUnit 
  
 3. Running 
 Simpletest
  tests required executing the same script, however, instead of 
  
 url
  option and 
 tests
  option: 
  
 php core/scripts/run-
 tests.sh --url http://localhost --all 
  
 4. Review test output!",NA
How it works…,"The 
 run-tests.sh
  script has been shipped with Drupal since 2008, then named 
 run-
 functional-tests.php
 . The command interacts with the other suites in Drupal to 
  
 useful options below:
  
 --help: This displays the items covered in the following bullets
  
 --list: This displays the available test groups that can be run
  
 --url: This is required unless the Drupal site is accessible through 
  
 http://localhost:80
  
 --sqlite: This allows you to run 
 Simpletest
  without having to have Drupal 
 installed--concurrency: This allows you to tests run in parallel",NA
There's more…,"Is run-tests a shell script? 
 The 
 run-tests.sh
  isn't actually a shell script. It is a PHP script which is why you must 
 executed from the command line. These scripts are not intended to be run through a web 
 server which is one of the reasons for the 
 .sh
  extension. There are issues with 
 discovered as a normal 
 bash
  or 
 bat
  script. For more info view this 
 Drupal.org
  issue at 
  
 https://www.drupal.org/node/655178
 .
  
 Running Simpletest without Drupal installed  
 With Drupal 8, 
 Simpletest
  can be run from SQLlite and no longer requires an 
 installed database. This can be accomplished by passing the sqlite and dburl options to 
 the run-
 tests.sh
  script. This requires the PHP SQLite extension to be installed.
  
 Here is an example adapted from the DrupalCI test runner for Drupal core: 
  
 php core/scripts/run-tests.sh --sqlite /tmp/.ht.sqlite --die-on-fail --
 dburl sqlite://tmp/.ht.sqlite --all 
  
 Combined with the built in PHP webserver for debugging you can run 
 Simpletest
  without 
 a 
  
 Each example thus far has used the 
 all
  option to run every 
 Simpletest
  available. There 
  
 --module
  
 --class
  
 --directory: This run 
  
  
 Previously in Drupal, tests were grouped inside module.test files, 
  
  
 PSR-4 autoloading
  method and requires one class per file.",NA
See also…,"PHPUnit manual: 
 https://phpunit.de/manual/4.8/en/writing-tests-
 for-phpunit.html 
  
 Drupal PHPUnit handbook: 
 https://drupal.org/phpunit 
  
 Simpletest
  from the command line: 
 https://www.drupal.org/node/645286",NA
2 ,NA,NA
The Content Authoring ,NA,NA
Experience,"In this chapter we will explore what Drupal 8 brings to the content authoring experience:
  
 Adding and editing content 
  
 Creating a menu and linking content 
  
 Providing inline editing 
  
 Creating a custom content type",NA
Introduction,"In this chapter we'll cover the Drupal 8 content authoring experience. We will show you how to 
  
 This chapter dives into 
 creating custom content types",NA
Getting ready,"Before starting, make sure that the CKEditor module is enabled, which also requires Editor 
 as a dependency. Editor 
  
 with text formats.",NA
How to do it…,"Let's create a new text format
  
 1. Visit  and head to Text formats and editors under the Content 
  
 authoring 
 heading.
  
 2. Click on Add text format to begin creating the new text format:
  
  
 3. Enter a name for the text format, such as editor format.
  
 4. Select which roles have access to this format – this allows you to have granular 
  
 control over what users can use when authoring content.",NA
How it works…,"The Filter modules 
 provide
  
 render in plain text.
  
  
 The text formats and editors screen warns of a security risk 
  
  
 an anonymous user access to a text format that allows full 
  
 HTML, or allow image sources to be from remote URLs.
  
 The Editor module",NA
There's more…,"Drupal provides granular control of how rich text is rendered and extensible ways as 
 well, which we will discuss further.
  
 Filter module 
 preserved as it was originally entered. Enabled 
  
 until the content is viewed. Drupal works in such a way that it saves the original 
 content 
  
 With the Filter module enabled, you gain the ability to specify how text is rendered based 
  
 Display any 
 HTML as plain text 
  
 out when viewed.
  
 CKEditor plugins 
 The CKEditor module provides a plugin type called 
 CKEditorPlugin
 . Plugins are 
 small pieces of swappable functionality within Drupal 8. Plugins and plugin 
 development are covered in 
 Chapter 7
 , 
 Plug and Play with Plugins.
  This type provides 
 integration between CKEditor and Drupal 8.
  
 plugins can be provided through contributed projects or custom development.
  
 See the 
 \Drupal\ckeditor\Annotation\CKEditorPlugin
  class for the plugin 
  
 \Drupal\ckeditor\Plugin\CKEditorPlugin\ 
 DrupalImage
  class as a working example.",NA
See also,"http://ckeditor.com/blog/CKEditor-Joins-Drupal
 .
  
 Chapter 7
 , 
 Plug and Play with Plugins
 .",NA
Adding and editing content,"The main functionality of a content management system is in the name itself – the ability to 
 manage 
  
 that allows you to manage all of the content within your website and allows you to create 
 new content. Additionally, you can view a piece of content and have the ability to click an 
 edit link when viewing it.",NA
Getting ready,node content types available for use.,NA
How to do it…,"1. Visit Content to view the content management overview from.
  
 2. Click Add content to view the list of available content types. Select article as the 
  
 piece of content you would like to make.
  
 3. Provide a title for the piece of content. Titles are always required for content.
  
 Fill in body text for the article:",NA
How it works…,"The 
 Content
  page is a View, which will be discussed in 
 Chapter 3
 , 
 Displaying Content 
 through Views
 . This creates a table of all the content in your site that can be searched 
  
 In Drupal there are content entities that provide a method of creation, editing, deletion, 
 and viewing. Nodes are a form of a content entity. When you create a node it will build 
 the 
  
 for editing content.
  
 When you save the content, Drupal writes the node's content to the database along with all 
 of its",NA
There's more,"Drupal 8's content management system provides many features; we will cover some 
 extra information.
  
 Save as draft 
 New to Drupal 8 is the ability to easily save a piece of content as a draft instead of directly 
 publishing it. Instead of clicking on Save and publish, click the arrow next to it to expand the 
 option of Save as unpublished.
  
  
 Pathauto 
 There is a contributed project called Pathauto
  
 The Pathauto project can be found at 
 https://www.drupal.org/project/pathauto
 .
  
 Bulk moderation 
  bulk actions on content. The table provides 
 checkboxes at the beginning of each row. For each selected item, you can choose an item 
 from With selection to make bulk changes – such as deleting, publishing, and unpublishing 
 content:",NA
See also,"Chapter 2
 , 
 The Content Authoring Experience
  in recipe 
 Customizing the Form Display 
 of a Node",NA
Creating a menu and linking content,"content. In this recipe we will show you how to create a custom menu and link content to 
 it. We will then place the menu as a block on the page, in the sidebar.",NA
Getting ready,This recipe assumes you have installed,NA
How to do it…,"1. Visit Structure and click on Menus.
  
 2. Click on Add Menu.
  
 3. Provide the title Sidebar and optional summary and then click on Save.
  
 4. Once the menu has saved, click on the Add link button.
  
 5. Enter in a link title and then begin typing the title for a piece of content. The form will 
  
 provide autocomplete suggestions for linkable content:",NA
How it works…,"Menus and links are part of Drupal core. The ability to make custom menus and menu links 
 is provided through the Menu UI module. This module is enabled on the standard 
 installation 
  
 The Link input of the menu link form allows you to begin typing node titles and easily link to 
 existing content. This was a piece of functionality not available in previous versions of 
 Drupal! 
  
 It will automatically convert the title into the internal path for you. Link input also 
 accepts a regular path, such as 
 /node/1
  or an external path.",NA
There's more…,"Managing a contents menu link from its form  
 A piece of content can be linked to a menu from the add or edit form. The menu settings
  
 content's title by default.
  
 The parent item allows you to decide which menu and which item it will appear under. 
 By default content types only have the main menu allowed. Editing a content type can 
 allow multiple menus, or only choosing a custom menu.
  
 This allows you to populate a main menu or complimentary menu without having to visit 
 the menu management screens.",NA
Providing inline editing ,"A touted feature of Drupal 8 is the ability to provide inline editing. Inline editing is enabled 
 by 
  
  
 Quick Edit module. The Quick 
 Edit",NA
How to do it…,"Let's provide inline editing: 
  
   
 1. Visit a piece of created content.
  
 2. In order to enable inline editing, you must toggle contextual links on the page by 
  
 clicking Edit in the upper right of the administrative toolbar:",NA
How it works…,"The Contextual links module provides privileged users with shortcut links to modify blocks 
 or content. The contextual links are toggled by clicking Edit in the toolbar. The Edit link 
 toggles the visibility of contextual links on the page. Previously, in Drupal 7, contextual links 
 appeared 
  
 The Quick Edit module
  
 form. Clicking on an element will use JavaScript to load a form and save data via AJAX calls.
  
 Quick Edit will not work on administrative pages.",NA
Creating a custom content type,"Drupal excels in the realm of content management by allowing different types of content. 
 In this recipe we will walk through creating a custom content type. We will create a 
 Services
  
 company's provided services.
  
 in hand when making a new content type on a Drupal site.",NA
How to do it…,"1. Visit Structure and then Content types. Click Add content type to begin creating a 
  
 new content type.
  
 2. Enter Services as the name and an optional description.
  
 3. Select Display settings and uncheck the Display author and date information 
  
 checkbox. This will hide the author and submitted time from services pages.
  
  
 4. Press the  button to save our new content type and manage",NA
How it works…,"In Drupal there are entities that have bundles. A bundle is just a type of entity that can have 
  
 referred to as a content type.
  
 Content types can be created as long as the Node module is enabled. When a content type 
 is created through the user interface, it invokes the 
 node_add_body_field()
  function. 
  
 Fields can only be managed or added if the Field UI module is enabled. The Field UI module 
 exposes the Manage Fields, Manage Form Display, and Manage Display for entities – such as 
 nodes and blocks.
  
  makes creating content in Drupal so robust. With Drupal 8 some 
  
 module. In fact, Entity reference is no longer a module but part of the main Field API now.
  
  
 Link
 , 
 Email
 , 
 Telephone
 , 
 Date
 , and 
 Entity reference
 !",NA
Getting ready,"types by default. For this recipe you will need to manually enable select modules so you can 
  
 Each recipe will start off expecting that you have enabled the module, if needed, and to be at 
 the  form of a content type and have clicked on",NA
How to do it…,"This section contains a series of mini recipes, showing how to use each of the new core 
  
 Link 
  
 by the Link module. It is enabled by default with the 
  
  
 Menu UI, Custom Menu Links, and Shortcut module.",NA
How it works…,"bundle. If you have the same LinkArticle and Page content type, the label, link type, and 
 link text settings are for each instance.
  
 HTML5 form inputs. By using HTML5 for telephone, e-mail, and date the authoring 
 experience uses the tools provided by the browser instead of additional third party libraries. 
 This also provides a more native experience when authoring with mobile devices.",NA
There's more…,"additional topics.
  
 Upcoming updates 
  that was once part of the contributed project space. 
  
 writing this book. Over time more and more features will be brought into core from 
 their source projects.
  
 For instance, the Datetime module is based on the contributed date project. However not 
 all of the contributed project's features have made it to Drupal core. Each minor release 
 of Drupal 8 could see more features moved to core.
  
 Views and Entity Reference 
 Using a View
 Chapter 3
 , 
 Displaying Content through Views",NA
See also,"Chapter 3
 , 
 Displaying Content through Views
 , providing an entity reference result view",NA
Customizing the form display of a node,"New in Drupal 8 is the availability of form display modes. Form modes allow a site administrator 
  
 node edit form.
  
 In this recipe we'll modify the default form for creating the Article content type that comes",NA
How to do it…,"1. Structure and then Content Types.
  
 2. We will modify the Article content type's form. Click on the expand the operations 
  
 drop down and select Manage form display.
  
  
 3. First we will modify the CommentsWidget dropdown choose the Hidden option to 
 remove it from the form. Follow the same steps for the sticky at top of lists
  
 4. Click on the settings cog for the Body 
  
  
 such as 
 Enter your article text here
 . Click on Update.",NA
How it works…,"Entities in Drupal have various view modes for each bundle. In Drupal 7 there were 
 only display view modes, which are covered in the next recipe. Drupal 8 brings in new 
 form modes to allow for more control of how an entity edit form is displayed.
  
 \Drupal\Core\EntityContentEntityForm
  class will build a form when an entity 
  
 different mode programmatically.",NA
There's more…,"Managing form display modes 
 Form display modes for all entities are managed under one area and are enabled for each 
  
 bundle manage interface.
  
 Programmatically providing a default to hidden form items 
 In 
 Chapter 6
 , 
 Creating Forms with the Form API
 , we will have a recipe that details altering 
 forms. In order to provide a default value for an entity property hidden on the form 
 display, you will need to alter the form and provide a default value. The Field API 
 provides a way to",NA
See also,"Chapter 10
 , 
 The Entity API
  
 Chapter 6
 , 
 Creating Forms with the Form API",NA
Customizing the display output of a node,"Drupal provides display view modes that allow for 
  
 properties attached to an entity. In this recipe we will adjust the teaser display mode 
 of an Article 
  
 the information in, and additional settings for the format.
  
 Harnessing view displays allows you to have full control over how content is viewed on 
 your Drupal site.",NA
How to do it…,"1. Structure and then 
  
 Content Types.
  
 2. We will modify the Article content type's display. Click on the dropdown button arrow 
  
 and select Manage display.",NA
How it works…,"View display modes aremodes dictate how the 
  
 \Drupal\Core\EntityContentEntityForm
  class will build a view display when an entity 
  
 programmatically.",NA
3 ,NA,NA
Displaying Content ,NA,NA
through Views,"This chapter will cover the Views module and how to use a variety of its major features:
  
 Listing content 
  
 Editing the default admin 
 interfaces 
  
 Creating a block from a View
  
 Adding a relationship in a View 
  
 Providing an Entity Reference result 
 View",NA
Introduction,"For those who have used Drupal previously, Views is in core for Drupal 8! If you are new to 
 Drupal, Views has been one of the most used contributed projects for Drupal 6 and Drupal 7.
  
 database and render it in multiple formats. Select administrative areas and content listings 
 provided out of the box by Drupal are all powered by Views. We'll dive into how to use Views 
 to",NA
Listing content,"Views does one thing, and it does it well: listing content. The power behind the Views module 
  
 This recipe will cover creating a content listing and linking it in the main menu. We will use 
 the Article content type provided by the standard installation and make an articles landing 
 page.",NA
Getting ready ,"The Views UI module must be enabled in order to manipulate Views from the user 
 interface.",NA
How to do it…,"Let's list the Views listing content: 
  
   
 1. Visit Structure and then Views. This will bring you to the administrative overview of all 
   
  
 the views that have been created:",NA
How it works…,"involves selecting the type of data you will be displaying. 
  
 exposed to Views.
  
  
 Drupal this interchanged terminology.
  
  
 When creating a Views page we are adding a menu path that can be accessed. It tells Drupal 
 to invoke Views to render the page, which will load the view you create and render it.
  
 There are display 
 style
  and 
 row
  plugins that format the data to be rendered. Our recipe 
 used the unformatted list style to wrap each row in a simple 
 div
  element. We could have 
 changed this to a table for a formatted list. The row display controls how each row is 
 output.",NA
There's more…,"every Drupal 7 site used the module. In the following section we will dive further into Views.
  
 Views in Drupal Core Initiative 
 Views has been a contributed module up until Drupal 8. In fact, it was one of the most used 
 modules. Although the module is now part of Drupal core it still has many improvements 
 that are needed and are being committed.
  
 Some of these changes will be seen through minor Drupal releases, such as 8.1x and 8.2.x, 
 as development progresses and probably not through patch releases (8.0.10).
  
 Views and displays 
 When working with Views, you will see some different terminology. One of the key items 
 to grasp is what a display is. A view can contain multiple displays. Each display is of a 
 certain type. Views comes with the following display types:
  
 attachment: This is a display that becomes attached to another display in the 
 same view
  
 block: This allows you to place the view as a block
  
 embed: The display is meant to be embedded programmatically
  
 Entity Reference: This
  
 feed: This display returns an XML based feed and can be attached to another display 
 to render a feed icon
  
 page: This 
  
 different ways.
  
 Format style plugins: style and row 
 Within Views there are two types of style plugins that represent how your data is 
 displayed – style and row.
  
 The style plugin represents the overall format
  
 The row plugin represents each result row's format
  
 For example, the 
 grid
  style will output multiple 
 div 
  
 a responsive 
 grid
 . At the same time, the 
 table
  style creates a tabular output with labels 
 used as table headings.",NA
See also,"VDC Initiative: 
  
 https://www.drupal.org/community-initiatives/drupal-core/vdc
  
 Chapter 7
 , 
 Plug and Play with Plugins
 , to learn more about plugins",NA
Editing the default admin interfaces,"With the addition of Views in Drupal core, many of the administrative interfaces are powered 
  
 and content authoring experiences.
  
  
 In Drupal 7 and 6 there was the administrative Views module, 
  
  
 which provided a way to override administrative pages with Views. 
  
 This module is no longer required, as the functionality comes with 
  
 Drupal core out of the box!",NA
How to do it…,"1. Visit Structure and then Views. This will bring you to the administrative overview of all 
  
 existing views.
  
 2. From the Enabled section, select the Edit option for the Content view. This is the view 
  
 displayed on 
 /admin/content
  when managing content.
  
 3. FILTER CRITERIA to our view, 
  
 which we will expose the following for users to 
 modify:
  
  
 4. Click on AddAuthored by to search the 
  
 available options. Select Content: 
 Authored by and click Apply (all displays):
  
  
 5. Check , to allow them to change it via checkbox. This will 
  
 6. Label and add a Description 
  
  
 option for your use case.",NA
How it works…,"When a view is created that has a path matching an existing route, it will override it and 
 present itself. That is how the 
 /admin/content
  and other administrative pages are able 
 to be powered by Views.
  
  
 If you were to disable the Views module you can still manage 
  
  
 content and users. The default forms are tables that do not 
  
 Drupal uses the overridden route and uses Views to render the page. From that point on 
 the page is handled like any other Views page would be rendered.",NA
There's more…,"We will dive into additional features available through Views that can enhance the way you 
 use Views and present them on your Drupal site.
  
 Exposed versus non-exposed 
 Filters allow you to narrow the scope of the data displayed in a view. Filters can either be 
  
 Content: 
 Publishing status set to  to ensure a view always contains published content. 
  
 ability to view, easily, what content has not been published yet or has been unpublished.",NA
Creating a block from a View,"Previous recipes have shown how to create and manipulate a page created by a view. 
 Views provides different display types that can be created, such as a block. In this recipe 
 we will create a block powered by Views. The Views block will list all Tag taxonomy terms 
 that have been added to the Article content type.",NA
Getting ready,node content types available for use.,NA
How to do it…,"1. Visit Structure and then Views. This will bring you to the administrative overview 
  
 of all the views that have been created.
  
 2. Click on Add new view to begin creating a new view.
  
 3. 
 Tags
 , which will serve as the 
  
 administrative and (by default) 
 displayed title.
  
 4. Next, we modify the View settings. We want to display Taxonomy terms of the type 
 Tags. This will make the view default to only displaying taxonomy terms created 
 under the Tags vocabulary
  
 5. Check the Create a block checkbox.
  
 6. Choose the HTML List option from the Display format choices. Leave the row style 
  
 as Fields.
  
  
 7. 
  
 We want to display all of the available tags. To change this, click the current pager 
  
 style link. Pick the Display all items radio and click Apply (all displays). On the next 
  
 model, click Save to keep the offset at 
 0
 .
  
 8. Next we will sort the view by tag name instead of order of creation. Click Add on the 
 Sort criteria section. Add Taxonomy term: Name and click Apply (all displays) to 
 use the default sort by ascending.",NA
How it works…,"In the Drupal 8 plugin system there is a concept called Derivatives. Plugins are small pieces of 
 swappable functionality within Drupal 8. Plugins and plugin development are covered in 
 Chapter 7
 , 
 Plug and Play with Plugins
 . A derivative allows a module to present multiple 
 variations of a plugin dynamically. In the case of Views, it allows the module to provide 
 variations of a 
 ViewsBlock
  plugin for each view that has a block display. Views implements 
 the 
 \Drupal\views\Plugin\Block\ViewsBlock\ViewsBlock
  class, providing the base 
 for the dynamic availability of these blocks. Each derived block is an instance of this class.
  
 then executed and the display is rendered whenever the block is displayed.",NA
There's more…,"We will explore some of the other ways in which Views interacts with blocks.
  
 Exposed forms as blocks 
 Pages and feeds have the ability to provide blocks, however not for the actual content 
  
 form in a block. With this option enabled you may place the block anywhere on the 
 page, even pages not for your view!
  
  
 Advanced section on 
 the right side of the Views edit form. Click on the Exposed form in block option from the 
 Advanced section. In the options modal that opens, select the  radio button and click 
 ApplyBlock layout form.
  
 you can easily place it in your site's header. When an exposed 
 filters
  block is submitted, 
 it will direct users to your view's display.",NA
See also,"Chapter 7
 , 
 Plug and Play with Plugins
 , to learn more about derivatives",NA
Utilizing dynamic arguments,"accept allow you to provide a 
  
 the URL; however, if it is not present there are ways to provide a default value.
  
 In this recipe we will create a new page called 
 My Content
 , which will display a 
 user's authored content on the route 
 /user/%/content
 .",NA
How to do it…,"1. Visit Structure and then Views. This will bring you to the administrative overview 
 of all the views created. Click on Add new view to begin creating a new view.
  
 2. Set the View name to My Content.
  
 3. Next, we modify the View settings. We want to display Content of the type All and 
  
 leave the Tagged with empty. This will allow all content to be displayed.
  
 4. Choose to Create a page. Keep the page title the same. We need to change the path 
  
 to be 
 user/%/content
 . Click Save and edit to move to the next screen and add the 
  
  
 When building a views page, adding a percentage sign to the path 
  
  
 identifies a route variable.
  
 5. Toggle the Advanced portion of the form on the right hand side of the page. Click on  
 section.
  
 6. Select Content: Authored by and then click Apply (all displays).
  
 7. 
   
 Display ""Access Denied"" 
  
 to prevent all content from being displayed with a bad route value.
  
  
 8. Click Apply (all displays) and save the form.
  
 9. Visit 
 /user/1/content
  and you will see content created by the root admin!",NA
How it works…,represented by percentage signs as placeholders in the view's path. Views will match up each,NA
There's more…,"values in to the text form concatenated by a forward slash (
 /
 ). In this recipe you 
 could replace visiting 
 /user/1/content
  with simply inputting 
 1
  into the preview 
 form and updating the preview.
  
 Displaying as a tab on the user page 
 Even though the view created in the recipe follows a route under 
 /user
 , it will not show up 
  
 Page settings section you will 
 need to change No menu from the Menu option. Clicking on that link will open the menu link 
 settings dialog.
  
 Select Menu tab and provide a Menu link title, such as My Content. Click on Apply and save 
 your view.
  
 Altering the page title 
 ability to manipulate the current page's title. When adding 
  
 present in the URL or a default is provided section, you may check the Override title option.
  
 This text box allows you to enter in a new title that will be displayed. Additionally, you can 
 use the information passed from the route context using the format of 
 %#
  where the 
 #
  is 
 the argument order.
  
 Validation 
  
  attached. Without specifying extra validation, Views will 
 take the expected argument and try to make it 
 just work
  
 Specify validation criteria 
  
 value is present in the URL or a default is provided section. The default is set to – Basic 
 Validation – which allows you to specify how the view should react if the data is invalid; 
 based on our recipe, if the user was not found.",NA
Adding a relationship in a View,"As stated at the beginning of the chapter, Views is a visual query builder. When you",NA
How to do it…,"1. Visit Structure and then Views. This will bring you to the administrative overview of all 
  
 the views that have been created 
  
 2. Find the Files view and click Edit.
  
 3. Click on Advanced to expand the section and then click Add next to Relationships. 4. 
 Search for user. Select the User who uploaded relationship option and click Apply 
  
 (this display).
  
  
 5. Next we will be relationship. Click Apply (this 
  
 display) to use the defaults.
  
 6. Add in the Fields section.
  
 7. 
  
 Search for name and select the NameApply (this display).",NA
How it works…,"Drupal stores data in a  short, involves the 
  
 of data will be shown, you are specifying a base table in the database that Views will query. 
  
 those tables for you.",NA
There's more…,"Using relationships in Views allows you to create some powerful displays. We will 
 discuss aggregation and additional information about relationships.
  
 Views uses a series of hooks to retrieve data that it uses to represent ways to interact 
 with the database. One of these is the 
 hook_field_views_data
  
 this on behalf of Drupal core to add relationships, and reverse relationships, for Entity 
  
 Relationships provided through custom code  
 There are times where you 
  
 Typically, when working with custom data in Drupal, you would more than likely create a new 
 entity type, covered in 
 Chapter 9
 , . This is not always the case, however, and you may just need 
 a simple method of storing data. An example 
  
 for a database table and then uses 
 hook_views_data
  to expose its database table to Views.
  
 The 
 dblog_schema
  hook implementation returns a 
 uid
  column on the watchdog database 
  
  $data['watchdog']['uid'] = array(
  
  'title' => t('UID'),
  
  'help' => t('The user ID of the user on which the log entry  
  
  
 was written..'),
  
  'field' => array(
  
  
  'id' => 'numeric',
  
  ),
  
  'filter' => array(
  
  
  'id' => 'numeric',
  
  ),
  
  'argument' => array(
  
  
  'id' => 'numeric',",NA
Providing an Entity Reference result View,"Chapter 2
 , 
 The Content Authoring Experience 
 a custom view for 
  
 based on the entity bundle, such as only returning Article nodes. Using an entity reference",NA
How to do it…,"1. Visit Structure and then Views. This will bring you to the administrative overview of 
 all the views that have been created. Click on Add new view to begin creating a 
 new view.
  
 2. Set the View name to My Content Reference View. Modify the View settings. We 
  
 want to display Content of the type All and leave the Tagged with empty.
  
 3. Do not choose to create a page or block. Click Save and edit to continue working on 
  
 your view.
  
 4. Click on the Add button to create a new display. Select the Entity Reference option to 
  
 create the display.",NA
How it works…,"The entity 
  
 reference selection plugin. This allows entity reference to feed data into a view to 
 receive available results.
  
 when using the autocomplete widget. If not using the autocomplete widget and using the 
 select list or checkboxes and radio buttons, then it will return the view's entire results.",NA
There's more…,"View arguments 
  
 View arguments allows you to 
 add a comma separated list of arguments that are passed to the view. The order should 
  
 In this recipe we could have added a Content: typeDisplay all results if the argument was 
 missing. This allows the view to be reused in multiple references. Perhaps there is one view 
 that should limit the available references to all Articles created by the 
  
 Article",NA
See also,"Chapter 7
 , 
 Plug and Play with Plugins
 , to learn more about plugins",NA
4 ,NA,NA
Extending Drupal,"This chapter dives into extending Drupal using a custom 
 module: 
  
 Creating a module
  
 Using Features 2.x",NA
Introduction,"Whether custom or contributed, modules extend the functionalities and capabilities of 
 Drupal. Modules can be used to not only extend Drupal, but also to create a way to provide 
  
 This chapter will discuss how to create a module and allow Drupal to discover it, allowing it to 
  
 come from modules. We will explore how to provide these through a custom module. In 
 addition to creating a module, we will discuss the Features module that provides a set of 
  
 [
  69 
 ]",NA
Creating a module,"The 
  
 daunting, it can be accomplished in a few simple steps. Modules can provide functionalities 
  
  
 info 
  
 that Drupal uses to discover extensions, and enabling the module.",NA
How to do it...,"1. Create a folder named 
 mymodule
  in the 
 modules
  folder in the base directory of your 
  
 Drupal site. This will be your module's directory.
  
 2. Create a 
 mymodule.info.yml
  
 3. Add a line to the 
 name
  key to provide a name for the module:
  
 name: My Module!
  
 4. We need to provide the 
 type 
  
  
 value 
 module
 :
  
 type: module
  
 5. The 
 description
  key allows you to provide extra information about your module, 
  
 which will be displayed on the module's list page:
  
 description: This is an example module from the Drupal 8 Cookbook!
  
 6. 
 core
  key in order to specify a major release 
  
 compatibility:
  
 core: 8.x
  
 7. 
  
 Save the 
 mymodule.info.yml
  
 name: My Module!
  
 type: module
  
 description: This is an example module from the Drupal 8 Cookbook!
  
 core: 8.x
  
 8. Log in to your Drupal site and visit Extend from the administrative toolbar.
  
 9. Search for My Module
  
 [
  70 
 ]",NA
How it works...,"Drupal 
 info.yml 
  
 info_parser
  service, provided by the 
 \Drupal\Core\Extension\InfoParser
  
 class, reads the 
 info.yml 
  
 guarantees that the required type, core, and name keys are present.
  
 When a module is installed, it is added to the 
 core.extension 
  
 which contains a list of installed modules and themes. The collection of modules in the 
 core.extension
  module array will be installed and will have PHP namespaces resolved, 
 services loaded, and hooks registered.
  
 When Drupal prepares to execute a hook or register services, it will iterate 
 across the values in the 
 module
  key in 
 core.extension
 .",NA
There's more...,"There are more details that we can explore about module 
 info
  
 Module namespaces 
 Drupal 8 uses the PSR-4 standard developed by the PHP Framework Interoperability Group. 
  
 to understand how to automatically include classes based on a namespace and class name. 
 Drupal modules have their own namespaces under the Drupal root namespace.
  
 Using the module from the recipe, our PHP namespace will be 
 Drupal\mymodule
 , which 
 represents the 
 modules/mymodule/src
  folder.
  
 [
  71 
 ]",NA
See also...,"at 
 http://www.php-fig.org/psr/ 
 psr-4/
  
 In Drupal, there are routes that represent URL paths that Drupal interprets to return content. 
  
 then displayed to the end user.
  
 provides a URL path that Drupal will associate with our controller to display the output.",NA
Getting ready,"mymodule 
 throughout the recipe. Use your module's name as appropriate.",NA
How to do it…,"1. Firstly, we'll set up the controller. Create a 
 src
  folder in your module's base directory 
  
 and another folder named 
 Controller
  inside it.
  
 2. Create 
 MyPageController.php
  that will hold the route's controller class.
  
  
 [
  74 
 ]",NA
How it works…,"Drupal uses routes, which 
  
 controller class that generates the content, in the form of a render array, to be delivered to 
 the user. When a request comes to Drupal, the system makes an attempt to match the path 
  
 route cannot be found, the 404 page is displayed.
  
 method or procedural function. The result of the invoked method or function is then 
 handed to the presentation layer of Drupal to be rendered into the content that can be 
 delivered to the user.
  
 Drupal 8 builds on top of the Symfony HTTP kernel to provide the underlying functionality of 
 its route system. It has added the ability to provide access requirements, casting placeholders 
 into loaded objects, and partial page responses.
  
 [
  77 
 ]",NA
There's more…,"Parameters in routes  
 Routes have the ability to accept dynamic arguments that can be passed to the route 
 controller's method. Placeholder 
  
 denote dynamic values.
  
 An example of a route might look like the following code:
  
 mymodule.cats:
  
  
  path: '/cat/{name}'
  
  
  defaults:
  
  
  _controller: '\Drupal\mymodule\Controller\MyPageController::cats'
  
  
 requirements:
  
  
  _permission: 'access content'
  
  
 /cat/{name}
  path. The 
 {name}
  placeholder will accept dynamic 
 values and pass them to the controller's method:
  
 class MyPageController {
  
  
  // ...
  
  
  public function cats($name) {
  
  
  return [
  
    
  '#markup' => t('My cats name is: @name', [
    
  '@name' => $name,
  
    
  ]),
  
  
  ];
  
  
  } 
  
 }
  
 This method accepts the 
 name
  variable from the route and substitutes it into the render 
 array to display it as text.
  
 Drupal's routing system provides a method of upcasting a variable into a loaded object. 
 There are a set of parameter converter classes under the 
 \Drupal\Core\ParamConverter 
 namespace. The 
 EntityConverter 
  
 a placeholder value with a loaded entity object.
  
 If we have an entity type called cat, we can turn the 
 name
  placeholder into a method to be 
 provided the loaded the 
 cat
  object in our controller's method:
  
 mymodule.cats:
  
  path: '/cat/{name}'
  
  defaults:
  
 [
  78 
 ]",NA
See also,"Refer to the Symfony routing documentation at 
  
 http://symfony.com/doc/current/book/routing.html
  
 Chapter 10
 , 
 The Entity API
  
 Refer to access checking on routes community documentation at 
  
 https://www.drupal.org/node/2122195
  
 In Drupal, there are 
  
 Modules use permissions to check whether the current user has access to perform an action, 
  
 Drupal is aware of them. Developers can then construct roles, which are made up of enabled 
 permissions.
  
 The permission will be added to a custom route and restrict access to the route path to users 
 who have a role containing the permission.
  
 [
  82 
 ]",NA
Getting ready,"mymodule 
 throughout the recipe. Use your module's name as appropriate.
  
 mymodule.mypage
 . Modify the appropriate path in your module's 
 routing.yml",NA
How to do it…,"1. Permissions are stored in a 
 permissions.ymlmymodule. 
  
 permissions.yml
  to the base directory of your module.
  
 2. 
  
 view mymodule pages
 :
  
 view mymodule pages:
  
 3. 
 title
  key that will be 
  
 displayed on the permissions page:
  
 view mymodule pages:
  
  
  title: 'View my module pages'
  
 4. Permissions have a 
 description
  key to provide details of the permission on the 
  
 permissions page:
  
 view mymodule pages:
  
  title: 'View my module pages'
  
  description: 'Allows users to view pages provided by My Module'
  
 5. Save your 
 permissions.yml
 , and edit the module's 
 routing.yml
  to add 
  
 the permission.
  
 6. Modify the route's 
 requirements
  key to have a 
 _permissions
  key that is equal to 
  
 mymodule.mypage:
  
  
  path: /mypage
  
  
  defaults:
  
  
  _controller: '\Drupal\mymodule\Controller\ 
 MyPageController::customPage'
  
  
  _title: 'My custom page'
  
  
  requirements:
  
  
  _permission: 'view mymodule pages'
  
 [
  83 
 ]",NA
How it works...,"Permissions and Roles are provided by the 
 User
  module. The 
 user.permissions
  service 
 discovers 
 permissions.yml 
  
 through the 
 \Drupal�ser\PermissionHandler
  class.
  
 Drupal does not save a list of all permissions that are available. The permissions for a system 
 are loaded when the permissions page is loaded. Roles contain an array of permissions.
  
 When checking a user's access for a permission, Drupal checks all of the user's roles to see 
 whether they support that permission.
  
  
 not receive an error. The access check will simply fail, unless the 
  
  
 user is UID 1, which bypasses access checks.
  
 [
  84 
 ]",NA
There's more…,"Permissions  enabled. This is the 
 restrict accessrestrict access: TRUE
 , it 
 will add a warning to the permission description.
  
 This allows module developers to provide more context to the amount of control a 
 permission may give a user:
  
  
  module programmatically or statically in a 
 YAML 
 A 
 module needs to provide a 
 permission_callbacks
  key in its 
 permissions.yml 
 that contains an array of classes and their methods or a procedural function name.
  
 For example, the Filter module provides granular permissions based on the different text 
  
 permission_callbacks:
  
 - Drupal\filter\FilterPermissions::permissions
  
 This tells the 
 user_permissions
  service to execute the permissions method of the 
 \Drupal\Filter\FilterPermissions
  class. The method is expected to return an 
 array that matches the same structure as that of the 
 permissions.yml
  
  
 and need to manually add the security warning to the description, 
  
  
 just as 
 \Drupal\Filter\FilterPermissions
  does.
  
 Checking whether a user has permissions 
 The user account interface provides a method for checking whether a user entity has a 
 permission. To check whether the current user has a permission, you will get the current 
 user, and you need to invoke the 
 hasPermission
  method:
  
 \Drupal::currentUser()->hasPermission('my permission');
  
 [
  85 
 ]",NA
or update,"Drupal provides a 
 Chapter 9
 , 
  
 , and modules are able to provide 
  
 YAML
  
 manipulate them through a schema version change in the update system.",NA
Getting ready,"mymodule 
 throughout the recipe. Use your module's appropriate name.",NA
How to do it…,"1. Create a 
 config 
  
  
 should be in a subfolder of 
 config
 .
  
 2. Create a folder named install in the 
 config 
  
 will be imported on module installation.
  
 3. In the install folder, create a 
 contact.form.contactus.yml 
  
 Contact Us:
  
  
 [
  86 
 ]",NA
How it works…,"Drupal's 
 moduler_installer
  service, provided through 
 \Drupal\Core\Extension\ 
 ModuleInstallerconfig
  folder are processed on installation. When a module is installed, 
 the 
 config.installer
  service, provided through 
 \Drupal\Core\Config\ConfigInstaller
 , is called to process the 
  
 [
  88 
 ]",NA
There's more…,"We will discuss
 Chapter 9
 , 
  
 Drupal 8
 , however, we will now dive into some important notes when working with 
 modules 
  
 There are three directories that the 
  
 module's 
 config
  folder, which are as 
 follows:
  
 install
  
 optional
  
 schema
  
 The 
 install 
  
 object exists, the installation will fail.
  
 The 
 optional 
  
 conditions are met:
  
 Its dependencies can be met
  
 module's installation process.
  
 The 
 schema 
  
  
  
 Chapter 9
 , 
  
 .
  
 [
  89 
 ]",NA
See also,"Chapter 9
 ,",NA
Using Features 2.x,"Many Drupal 
  
 can reuse across multiple sites. In fact, there is a module for the sole purpose of providing 
  
 Features modules received its name, in fact.
  
 The Features module has two sub-modules. The main Features module provides all the 
 functionalities. The Features UI module provides a user interface for creating and 
 managing features.
  
 and article content types provided by the standard installation, so they can be used on other 
  
 [
  90 
 ]",NA
How to do it...,"1. The Features module requires  as a dependency. Visit 
 https://www.drupal.org/project/config_update
  and download the 
 latest Drupal 8 release and place it in your Drupal site's 
 /modules
  folder.
  
 2. Now, visit 
 https://www.drupal.org/project/features
  and download the 
  
 latest Drupal 8 release and place it in your Drupal site's 
 /modules
  folder.
  
 3. Visit Extend
  
 4. Visit  and then . The user interface for 
  
 Features is accessed as a tab from this 
 page:
  
  
 5. Click on Create new feature to start making a custom Feature module.
  
 6. Provide a 
 Name
  for the feature, such as Content Authoring.
  
 7. 
  
 Optionally, you can provide a description. This acts as the 
 description
  key in 
 the 
  
 module's 
 info.yml
 .
  
 8. Toggle the Content types grouping and check Article and Basic Page to mark them 
  
 for export.
  
 [
  91 
 ]",NA
How it works…,"config/install
  folder. 
  
 To accomplish this, Features provides 
 \Drupal\features\FeaturesConfigInstaller
 , 
 which extends the default 
 config.install
  service class. It then alters the services 
  
 FeaturesConfigInstaller
  class instead of the default 
 \Drupal\ 
 Core\Config\ConfigInstaller
  class.
  
 [
  92 
 ]",NA
There's more…,"Suggested feature modules  
 The features module provides an intelligent bundling method that reviews the current 
 Drupal 
  
  
 When you visit the Features UI, it will present you with suggested feature modules to be 
  
 on the suggested feature's link opens the creation form. Or the checkbox can be used in 
 conjunction with the 
 download archive
  or 
 write
  buttons at the bottom of the form.
  
  
 This will need to be manually added to a created feature module.
  
  
 [
  93 
 ]",NA
See also ,"Refer to Features for the Drupal 8 session by Mike Potter at DrupalCon Los 
 Angeles at 
 https://events.drupal.org/losangeles2015/sessions/features-
 drupal-8
  
 [
  95 
 ]",NA
5 ,NA,NA
Frontend for the Win,"In this chapter, we will explore the world of frontend development in Drupal 8:
  
 Creating a custom theme based on Classy
  
 Using the new asset management system
  
 Twig templating
  
 Using the Breakpoint module
  
 Using the Responsive Image module module",NA
Introduction,"responsive design. Frontend performance has been given a high priority, unlike in the 
 previous versions of Drupal. There is a new asset management system based around 
 libraries that will deliver only the minimum required assets for a page that comes with 
 Drupal 8.
  
 In Drupal 8, we have a new feature, the Twig templating engine, that replaces the 
 previously used PHPTemplate engine. Twig is part of the large PHP community and 
 embraces more of Drupal 8's 
 made elsewhere 
  
 CSS resources. However, it was very rudimentary and did not support the concept of 
 library dependencies.
  
 There are two modules provided by Drupal core that implement the responsive design with 
 server-side components. The Breakpoint module provides a representation of media queries 
  
 This chapter dives into harnessing Drupal 8's frontend features to get the most out of them.",NA
Creating a custom theme based on Classy,"Drupal 8 ships with a new base theme that is intended to demonstrate the best practice and 
 CSS class management. The Classy theme is provided by Drupal core and is the base theme 
 for the default frontend theme, Bartik, and the administrative theme, Seven.
  
 Unlike the previous versions of Drupal, Drupal 8 provides two base themes: Classy and 
 Stable as a means to jump start Drupal theming. Stable provides a more lean approach to 
 frontend theming with fewer classes and wrapping elements. In this recipe, we will create a 
 new theme called 
 mytheme
  that uses Classy as its base.",NA
How to do it...,"1. In the 
 root
  directory of your Drupal site, create a folder called 
 mytheme
  in the 
  
 themes
  folder.
  
 2. Inside the 
 mytheme
  folder, create a 
 mytheme.info.yml 
  
 discover the 
 theme
  
  
 3. 
 themes
  name using the 
 name
  key:
  
 name: My Theme
  
 4. All the themes need to provide a 
 description
  key, which will be displayed on the 
  
 Appearance page:
  
 description: My custom theme",NA
How it works...,"In Drupal 8, the 
 info.yml 
  
 theme is to provide the 
 info.yml 
  
 these values and register the theme.",NA
There's more...,"Next, we will dive into some additional information about themes.
  
 Theme screenshots 
 Themes can provide a screenshot that shows up on the Appearance page. A theme's 
 screenshot can be provided by placing a 
 screenshot.png
  in the 
 theme 
  
  
 info.yml
  
 If the screenshot is missing, a 
 default
  is used, as seen with the Classy and Stark themes. 
 Generally, a screenshot is a Drupal site with generic content using the theme.
  
 Themes, logos, and favicons 
 Drupal controls the site's favicon and logo settings as a theme setting. Theme settings are 
 active on a theme-by-theme basis and are not global. Themes have the ability to provide a 
 default logo by providing a 
 logo.svg
  in the 
 theme
  root folder. A 
 favicon.ico
  placed 
 in a 
 theme
  folder will also be the default value of the 
 favicon
  for the website.",NA
See also,"an 
 info.yml 
  
 https://www.drupal.org/node/2349827
  
 To use Classy as a base theme, refer to the community documentation at 
 https://www.drupal.org/theme-guide/8/classy
  
 To create a Drupal 8 subtheme, refer to the community documentation at 
 https://www.drupal.org/node/2165673",NA
Using the new asset management system,"New to Drupal 8 is the asset management system. The asset management system allows 
  
 performance. Rather than loading all CSS or JavaScript assets, only those required for the 
  
 libraries.yml",NA
Getting ready,"This recipe assumes that you have a custom theme created, such as the one you created 
  
 mytheme
 , use the machine name of the theme that you 
 have created.",NA
How to do it...,"1. Create a folder named 
 css
  in your 
 themes
  base directory.
  
 2. In your 
 css
  folder, add a 
 style.css 
  
  
 For demonstration purposes, add the following CSS declaration to 
 style.css
 :
  
 body {
  
  background: cornflowerblue; 
  
 }
  
 3. Then, create a 
 js
  folder, and add a 
 scripts.jsthemes 
  
 JavaScript items.
  
 4. In your theme folder, create a 
 mytheme.libraries.yml 
  
 the following screenshot:
  
  
 5. Add the following 
 YAMLglobal-styling
  library for your theme 
  
 global-styling:
  
  
  version: VERSION
  
  
  css:
  
  
  theme:
  
    
  css/style.css: {}
  
  
  js:
  
  
  js/scripts.js: {}",NA
How it works...,"Drupal aggregates all the available 
 library.ymllibrary. discovery.parser
  
 service. The 
 default
  class for this service provider is 
 \Drupal\ 
 Core\Asset\LibraryDiscoveryParser 
  
 each 
 library.yml 
  
 allows themes to provide overrides and extensions to the library.",NA
There's more…,"We will explore the options surrounding libraries in Drupal 8 in more detail.
  
 CSS groups 
 With libraries, you have the ability to specify CSS by different groups. Drupal's 
 asset management system provides the following CSS groups:
  
 base
  
 layout
  
 component
  
 state
  
 theme
  
 Stylesheets are loaded in the order in which the groups are listed. Each one of them relates 
  
 /core/includes/common.inc
 . This allows separation of 
 concerns when working with stylesheets. Drupal 8's CSS architecture borrows concepts from 
 the SMACSS system to 
  
 Library asset options 
 end with 
 {}
 .
  
 The following example, taken from 
 core.libraries.yml
 , adds 
 HTML5shiv
 :
  
 assets/vendor/html5shiv/html5shiv.min.js: { weight: -22, browsers: { 
 IE: 'lte IE 8', '!IE': false }, minified: true }
  
 Let's take a look at the attributes of 
 html5shiv.min.js
 :
  
 The 
 weight
  key ensures that the script is rendered earlier than other libraries
  
 The 
 browser
  tag allows you to specify conditional rules to load the scripting
  
 minified
  as 
 true
  
 For CSS assets, you can pass a media option to specify a media query for the asset. Reviewing 
 classes which implement 
 \Drupal\Core\Asset\AssetCollectionRendererInterface
 .",NA
See also ,"Refer to the CSS architecture for Drupal 8: Separate concerns at 
 https://www.drupal.org/node/1887918#separate-concerns 
 SMACSS (
 http://smacss.com/book/
 )",NA
Twig templating,"Drupal 8's theming layer is complemented by Twig, a component of the Symfony 
 framework. Twig is a template language that uses a syntax similar to Django and Jinja 
 templates. The previous version of Drupal used PHPTemplate that required frontend 
 developers to have a rudimentary understanding of PHP.
  
 element. We will use the basic Twig syntax to add a new class and provide a default placeholder.",NA
Getting ready ,"This recipe assumes that you have a custom theme created, such as the one you created in 
   
 mytheme
 , use the machine name of the theme you created.
  
  
 At the time of writing this book, the Classy theme does not provide 
  
  
 to the input template that differ from core.",NA
How to do it...,"1. Create a 
 template
  folder in your theme's base directory to hold your Twig templates.
  
 2. To begin, you need to copy the 
 input.html.twigcore/modules/ 
  
 system/templates/input.html.twig
  to your theme's 
 template
  folder.",NA
How it works...,"input__email
  theme hook. If there is no 
 input__ 
 email
  hook implemented through a Twig template or PHP function, it will step down to 
 just input.
  
  
 hyphens (
 -
  
 _
 ) but use 
  
  
 A processor, such as Drupal's theme layer, passes variables to Twig. Variables or properties 
 of objects can be printed by wrapping the variable name with curly brackets. All of core's 
 default 
  
 variables.
  
 Twig has a simplistic syntax with basic logic and functions. The 
 addClass
  method will 
 take the 
 attributes
  variable and add the class provided in addition to the existing 
 contents.
  
 When providing a theme hook suggestion or altering an existing template, you will need 
 to rebuild Drupal's cache. The compiled Twig template, as PHP, is cached by Drupal so 
 that Twig does not need to compile each time the template is invoked.",NA
There's more…,"Twig automatically escapes the output by default, making Drupal 8 one of the most secure 
 versions yet. For Drupal 7, as a whole, most security advisors were for cross-site scripting 
 (XSS) vulnerabilities in contributed projects. With Drupal core, using Twig, these security 
 advisories should be severely reduced.
  
 Theme hook suggestions 
  as ways to allow output variations based on different 
  
 When a theme hook has double underscores (
 __
 ), Drupal's theme system understands this, 
  
  
 input__email
  as its theme hook. Drupal understands 
 this as follows:
  
 Look for a Twig template named 
 input--email.html.twig
  or a theme hook that 
 input__email",NA
See also,"Refer to the Twig documentation at 
 http://twig.sensiolabs.org/ 
 documentation
  
 Refer to the API documentation for 
 hook_theme_suggestions
  at 
 https://api. 
 drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Render%21the 
 me.api.php/function/hook_theme_suggestions_HOOK/8",NA
Using the Breakpoint module,"The Breakpoint 
  
 within Drupal. These can be used by other components, such as the responsive image and 
 toolbar modules, to make Drupal responsive.
  
 breakpoints.
  
 yml 
  
 group.
  
  
 YAML",NA
Getting ready,"Ensure that the Breakpoint module is enabled. If you have used the standard Drupal 
 installation, the module is enabled.
  
 This recipe assumes that you have a custom module created. When you see 
 mymodule
 , use 
 the machine name of the module that you created.",NA
How to do it...,"1. Create 
 mymodule.breakpoints.yml
  
 2. Firstly, we will add a standard mobile breakpoint that does not have a media query, 
  
 mymodule.mobile
 :
  
  label: Mobile
  
  mediaQuery: 
 ''
  
  weight: 0
  
 3. Secondly, we will create a standard breakpoint that will run on a larger viewport:
  
 mymodule.standard:
  
  label: Standard
  
  mediaQuery: 'only screen and (min-width: 60em)' 
 weight: 1
  
 4. Thirdly, we will create a wide breakpoint for devices that have a large viewport:
  
 mymodule.wide:
  
  label: Wide",NA
How it works...,"The Breakpoint module
  
 grouping them.
  
 The Breakpoint module provides a default manager service. This service is used by other 
 modules to discover breakpoint groups and then all of the breakpoints within a group.",NA
There's more...,"Caveat for providing breakpoints from themes 
 Themes have the ability to provide breakpoints; however, they cannot be 
 automatically discovered if new ones are added once they have been installed. Drupal 
 only reads breakpoints provided by themes when a theme is either installed or 
 uninstalled.
  
 Inside 
 breakpoint.manager
 , there are two hooks: one for the 
 theme install
  and one for 
 the 
 theme uninstall
 . Each hook retrieves the breakpoint manager service and rebuilds 
  
 Accessing breakpoints programmatically 
 Breakpoints are 
  
 the breakpoint manager service and specifying a group. For example, the following code 
 returns all breakpoints used by the Toolbar module:
  
 \Drupal::service('breakpoint.manager') 
  
  getBreakpointsByGroup('toolbar');
  
 This code invokes the Drupal container to return the service to manage breakpoints, which, by 
 default, is 
 \Drupal\breakpoint\BreakpointManager
 . The 
 getBreakpointsByGroup 
 method returns all breakpoints within a group, which are initiated as the 
 \Drupal\ 
  
 breakpoint\BreakpointInterface
  objects.
  
 The Toolbar element 
  
 JavaScript settings for the JavaScript model to interact 
 with.",NA
See also,"To work with breakpoints in Drupal 8, refer to the community documentation 
 at 
 https://www.drupal.org/documentation/modules/breakpoint",NA
Using the Responsive Image module,"The Responsive Image module
  
 made to denote an image style to be used at each breakpoint.
  
 In this recipe, we will create a responsive image style set called 
 Article image
  and apply 
 it to the 
 Article",NA
Getting ready,"enable the 
 Responsive Image
  module as it is not automatically enabled 
 with the standard installation.",NA
How to do it...,"1. Go to  and then to Responsive image styles under the Media section. 
  
 Click on Add 
 responsive image style to begin creating a new style set.
  
 2. Provide a 
 label
  that will be used to administratively identify the Responsive image 
  
 style set.",NA
How it works...,"The Responsive image style provides three components: a responsive image element, the 
  
 image element.",NA
There's more...,"responsive image formatter is performance. Browsers will only 
 download 
  
 srcset
  of the appropriate 
 source
  tag. This not only allows 
 you 
  
 The Responsive Image module attaches the 
 picturefill
  library to the responsive image 
  
 polyfill
 . 
  
 The 
 polyfill
  can be removed by overriding the element's template and overriding 
 the 
 picturefill
  library to be disabled.
  
 The following snippet, when added to a theme's 
 info.yml
 , will disable the 
 picturefill 
 library:
  
 libraries-override:
  
  core/picturefill: false
  
 Then, the 
 responsive-image.html.twig
  must be overridden by the theme to remove 
 the extra HTML generated in the template for the 
 polyfill
 :
  
 1. Copy 
 responsive-image.html.twig
  from 
 core/modules/responsive_ 
  
 image/templates
  to the 
 theme
  templates folder.
  
 2. Edit 
 responsive-image.html.twig
  and delete the Twig comment and IE 
  
 conditional to output the initial video tag.
  
 3. Remove the last conditional, which provides the closing video tag.",NA
See also,"at 
 https:// 
  
  
 developer.mozilla.org/en-US/docs/Web/HTML/Element/picture 
  
 Refer to 
 picturefill
  for IE9 at 
 http://scottjehl.github.io/ 
  
  
 picturefill/#ie9",NA
6 ,NA,NA
Creating Forms with the ,NA,NA
Form API,"In this chapter, we will explore the various recipes to work with forms in Drupal:
  
 Creating a form 
  
 Using new HTML5 elements 
  
 Validating form data 
  
 Processing submitted form data 
  
 Altering other forms",NA
Introduction,"Drupal provides a robust API for creating and managing forms without writing any 
 HTML. Drupal handles form building, validation, and submission. Drupal handles the 
 request to either build the form or process the HTTP POST request. This allows 
 developers to simply 
  
 This chapter contains various recipes to work with forms in Drupal through the Form 
 API. In Drupal 8, forms and form states are objects.",NA
Creating a form,"In this recipe, we will create a form, which will be accessible from a menu path. This 
 will involve creating a route that tells Drupal to invoke our form and display it to the 
 end user.
  
 \Drupal\Core\Form\FormInterface
 . 
  
 The 
 \Drupal\Core\Form\FormBase
  serves as a utility class that is intended to be 
 extended. We will extend this class to create a new form.",NA
Getting ready,"Since we will be writing the code, you will want to have a custom module. Creating a 
 custom module in Drupal is simply creating a folder and an 
 info.yml 
  
 create a folder under 
 /modules
  in your Drupal folder called 
 drupalform
 .
  
 In the 
 drupalform
  folder, create 
 drupalform.info.yml
 . The 
 info.yml 
 Drupal will parse to discover modules. An example of a module's 
 info.yml
  
 name: Drupal form example
  
 description: Create a basic Drupal form, accessible from a route
  
 type: module
  
 version: 1.0
  
 core: 8.x
  
 The name will be your module's name, and the description will be listed on the Extend 
 page. Specifying the core tells Drupal what version of Drupal it is built for. 
 Chapter 4
 , 
 Extending Drupal
  covers how to create a module in depth.",NA
How to do it…,"1. Create an 
 src
  folder in your module directory. In this directory, create a 
 Form
  directory, 
  
 2. 
 ExampleForm.php
  in your module's 
 src/Form
  directory.
  
  
 autoload
  classes. 
  
  
 For brevity, this defines that there should be one class per 
  
 file, with each filename matching the class name. The folder 
  
 structure will also mimic the namespace expected.",NA
How it works…,"This recipe creates a route to display the form. By passing the 
 _form
  variable in the defaults 
 section of our route entry, we are telling the route controller how to render our route's 
 content. 
  
 in the form builder. The route controller will invoke 
 \Drupal::formBuilder()-
 >getForm 
 (
 \Drupal\drupalform\Form\ExampleForm
 ) based on the recipe. At the 
 same time, this can be manually called to embed the form elsewhere.
  
 A form builder instance that implements 
 \Drupal\Core\Form\FormBuilderInterface 
 will then process the form by calling 
 buildForm
  and initiate the rendering process. The 
 buildForm
  method is expected to 
 return an array of form elements and other API options. This will be sent to the render 
 system to output the form as HTML.",NA
There's more…,"Many components make up a form created through Drupal's Form API. We will explore a few 
 of them in depth.",NA
See also,"Form API in Drupal 8 at 
 https://www.drupal.org/node/2117411
  
 The Drupal 8 Form API reference at 
 https://api.drupal.org/api/drupal/ 
 developer!topics!forms_api_reference.html/8
  
 Chapter 4
 , 
 Extending Drupal
  
 Chapter 7
 , 
 Plug and Play with Plugins
 , to learn more about derivatives",NA
Using new HTML5 elements,"With the release of 
  
 element types:
  
 tel 
  
 email 
  
 number 
  
 date 
  
 url 
  
 search 
  
 range
  
 This allows your forms in Drupal to leverage native device input methods along with 
 native validation support.",NA
Getting ready,"a custom form implemented through a module, such as the one created in the 
 Creating a 
 form
  section.",NA
How to do it…,"1. In order to use the telephone input, you need to add a new 
 form 
  
 of the 
 tel
  type to your 
 buildForm
  method:
  
  
  
  $form['phone'] = array(
  
  
  
  '#type' => 'tel',
  
  
  
  '#title' => t('Phone'),
  
  
  
  );
  
 2. In order to use the e-mail input, you need to add a new 
 form 
  
  
 of the 
 email
  type to your 
 buildForm
  method. It will validate the format of e-
 mail 
  
 addresses in the Form API: 
  
  
 $form['email'] = array(
  
  
  
  '#type' => 'email',
  
  
  
  '#title' => t('Email'),
  
  
  
  );",NA
How it works…,"Each type references an extended class of 
 \Drupal\Core\Render\Element\ 
  
 FormElement 
  
  
 prerenderinput
  type attribute along with other additional attributes.
  
 input__TYPE
 , allowing you to copy the 
 input.html.twig 
 base to 
 input.TYPE.html.twig
  for templating. The template then parses the attributes 
 and renders the HTML.
  
 Some elements, such as e-mails, provide validators for the element itself. The e-mail element 
  
 validateEmail
  method. Here is an example of the code from 
 \Drupal\Core\ 
 Render\Element\Email::valdateEmail
 :
  
  /**
  
  
  * Form element validation handler for #type 'email'.
  
  
  *
  
  
  * Note that #maxlength and #required is validated by 
 _form_ validate() already.
  
   
  */
  
  
  public static function validateEmail(&$element, FormStateInterface 
 $form_state, &$complete_form) {
  
   
  $value = trim($element['#value']);
  
   
  $form_state->setValueForElement($element, $value);
  
  
  if ($value !== '' && !\Drupal::service('email.validator')-
 >isValid($value)) {
  
    
  $form_state->setError($element, t('The email address %mail is 
 not valid.', array('%mail' => $value)));
  
  
  }
  
  
  }",NA
There's more…,"Elements are provided through Drupal's plugin system and are explored in detail in 
 the next section.
  
 Elements can have their own unique properties along with individual validation methods. 
 At the time of writing, the Drupal 8 Form Reference table is incomplete and does not 
 highlight these new elements nor their properties. However, the classes can be examined 
 and the 
  
 are under the \
 Drupal\Core\Render\Element
  namespace located in 
 /core/lib/ 
 Drupal/Core/Render/Element
 :",NA
See also,"Form API in Drupal 8 at 
 https://www.drupal.org/node/2117411
  
 Chapter 7
 , 
 Plug and Play with Plugins",NA
Validating form data,"The Form API requires all form classes to implement the 
 \Drupal\Core\Form\ 
  
 FormInterfacevalidation
  method. The 
 validateForm 
 method is invoked once a form 
 has been submitted and provides a way to validate the data and halt the processing of the 
 data if required. The form state object provides methods for 
  
 This recipe will be based on the custom module and form created in the 
 Creating a form",NA
Getting ready,"Creating a form
  recipe.",NA
How to do it…,"1. Open and edit the 
 \Drupal\drupalform\Form\ExampleForm
  class in the 
 src/ 
  
 Form
  directory of the module.
  
 2. Before validating the 
 company_name
  value, we need to check whether the value is 
 empty using the 
 isValueEmpty()
  method from the 
 \Drupal\Core\Form\ 
 FormStateInterface
  object:
  
  /**
  
  * {@inheritdoc}
  
  */
  
  
  public function validateForm(array &$form,  FormStateInterface 
 $form_state) {
  
  if (!$form_state->isValueEmpty('company_name')) {",NA
How it works…,"Before the form builder service invokes the form object's 
 submitForm
  method, it invokes 
 the object's 
 validateForm
  method. In the validation method, the form state can be used 
 to check values and perform logic checks. In the event that an item is deemed 
 invalid
  and 
 an error is set on an element, the form cannot submit and will show errors to the user.
  
 When an error is added to an element, an overall counter for the number of errors on the 
 form is incremented. If the form has any errors, the form builder service will not execute 
 the submit method.
  
 This process is executed through the 
 \Drupal\Core\Form\FormValidator
  class, 
 which is run through the form builder service.",NA
There's more…,NA,NA
Processing submitted form data,"A form's purpose is to collect data and do something with the data that was submitted. 
 All forms need to implement the 
 \Drupal\Core\Form\FormInterface
 . The interface 
  
 the submit method can be run.
  
 This recipe will be based on the custom module and form created in the 
 Creating a form 
 recipe of this chapter. We will convert the form to 
 \Drupal\Core\FormConfigBaseForm
 ,",NA
Getting ready,"Creating a 
 form
  recipe.",NA
How to do it…,"1. In your module's directory, create a 
 config
  directory, and then create a directory 
  
 inside it named 
 install
 .
  
 2. 
 drupalform.schema.yml;
  
 3. 
 drupalform.schema.yml
 :
  
 drupalform.company:
  
  
  type: config_object
  
  
  label: 'Drupal form settings'
  
  
  mapping:
  
  
  company_name:
  
    
  type: string
  
    
  label: 'A company name'
  
 drupalform.
  
 company
  and it has a valid option of 
 company_name
 . We will cover this in more 
 detail in 
 Chapter 9
 , .
  
 4. Replace the 
 FormBase
  use statement to use the 
 ConfigFormBase
  class:
  
 <?php
  
 /**
  
  * @file
  
  * Contains 
 \Drupal\drupalform\Form\ExampleForm.
  
  **/",NA
How it works…,"The
  ConfigFormBaseConfigFormBaseTrait
  to provide easy access to a 
  
 buildForm
  also adds a 
 submit
  button 
  
 The form saves its data under the 
 drupalform.company
  namespace. The company name 
 value is stored as 
 name
  and can be accessed as 
 drupalform.company.name
 . Note that",NA
There's more…,"Multiple submit handlers 
 A form can have multiple submit handlers. By default, all forms implement a submit handler, 
 which is its own 
 submitForm
  method. The form will 
 execute ::submitForm
  automatically 
  
 allows you to invoke 
 static
  methods on other classes or other forms.
  
 If a class provides 
 method1
  and 
 method2
 , which it would like to execute as well, the following 
 code can be added to the 
 buildForm
  method:
  
 $form_state->setSubmitHandlers([
  
  ['::submitForm'],
  
  ['::method1'],
  
  [$this, 'method2']
  
 ]);
  
 This sets the submit handler array to execute the default 
 submitForm
  method and two 
  
 ::
 ) and 
 the method name. Or, you can use an array consisting of a class instance and the method to be 
 invoked.",NA
See also,"Chapter 9
 ,",NA
Altering other forms,"Drupal's Form API does not just provide a way to create forms. There are ways to alter forms 
 through a custom module that allows you to manipulate the core and contributed forms. Using 
 this technique, new elements can be added, default values can be changed, or elements can 
 even be hidden from view to simplify the user experience.
  
 hook_form_FORM_ID_alter()
  hook to add a telephone",NA
Getting ready,This recipe assumes that you have a custom module to add the code to.,NA
How to do it…,"1. In the 
 modules
  folder of your Drupal site, create a folder named 
 mymodule
 .
  
 2. In the 
 mymodule
  folder, create a 
 mymodule.info.yml
 , containing the 
  
 following code:
  
 name: My module 
  
 description: Custom module that uses a form alter 
  
 type: module 
  
 core: 8.x 
  
 Next, create a .module file in your module's directory: 
 <?php
  
 /**
  
  * @file
  
  * Custom module that alters forms.
  
  */
  
 3. Add the 
 mymodule_form_system_site_information_settings_alter() 
 hook. The form ID can be found by viewing the form's class and reviewing the 
 getFormId
  method:
  
 /**
  
  * Implements 
 hook_form_FORM_ID_alter().
  
  **/",NA
How it works…,"The 
 \Drupal\system\Form\SiteInformationForm
  class extends 
 \Drupal\Core\ 
 Form\ConfigFormBase
  to handle the writing of form elements as individual 
  
 values. However, it does not write the values automatically to the form state. In this 
 recipe, 
  
 the original data. This allows us to add an element or even modify existing items, such as 
 titles or descriptions.",NA
There's more…,"Adding additional validate handlers  
 Using a form alter hook, we can add additional validators to a form. The proper way to do 
 this is to load the current validators and add the new one to the array and reset the 
 validators in the form state:
  
 $validators = $form_state->getValidateHandlers(); 
 $validators[] = 'mymodule_form_validate'; 
  
 $form_state->setValidateHandlers($validators);
  
 First, we receive all of the currently set validators from the form state as the 
 $validators 
 variable. We then append a new callback to the end of the array. Once the 
 $validators 
 variable 
  
 setValidateHandlers
  method.",NA
7 ,NA,NA
Plug and Play ,NA,NA
with Plugins,"In this chapter, we will dive into the new Plugin API provided in Drupal 8:
  
 Creating blocks using plugins
  
 Creating a custom plugin type",NA
Introduction,"Chapter 5
 , 
 Front 
 End for the Win
 , are plugins. In this chapter, we will discuss how plugins work in Drupal 8 
 and 
  
 Each version of Drupal has had subsystems, which provided pluggable components and 
 even contributed modules. A problem arose in the implementation and management of 
 these. 
  
 The Plugin API exists in Drupal 8 to mitigate this problem and provide a base API to 
 implement pluggable components. This has greatly improved the developer experience 
 when working with Drupal core's subsystems. In this chapter, we will implement a block 
 plugin. We will use the 
  
 recipe will show you how to create and use a custom plugin type.",NA
Creating blocks using plugins,"In Drupal, a block is a piece of content that can be placed in a region provided by a theme. 
  
 text, and many more.
  
 Plugin
  class namespace. Each class in the 
 Plugin/Block
  namespace will be discovered 
 by the block module's plugin manager.
  
 and place it in the footer region.",NA
Getting ready,"Create a new module like the one shown in this recipe. We will refer to the module as 
 mymodule 
 throughout the recipe. Use your module's appropriate name.",NA
How to do it…,"1. Create the 
 src/Plugin/Block
  directory in your module. This will translate the 
  
 \Drupal\mymodule\Plugin\Block
  namespace and allow a block plugin 
 discovery.
  
 2. Create a 
 Copyright.php 
  
  
 Copyright
  class for our block:
  
  
 3. The 
 Copyright
  class will extend 
 \Drupal\Core\Block\BlockBase
 :
  
 <?php
  
 /**
  
  * @file",NA
How it works...,"The 
 \Drupal\Core\Block\BlockManager 
  
 located in the 
 Plugin/Block 
  
 implemented along with the 
 Annotation
  class, which is to be used, when parsing the class's 
 document block.",NA
There's more...,"Altering blocks  
 Blocks can be altered in 
  
 array, or the view array 
 out.
  
 A module can implement 
 hook_block_alter
  in its 
 .module 
  
 the default 
 user_login_block
  from user login to 
 Login
 :
  
 /**
  
  * Implements hook_block_alter().
  
  */ 
  
 function mymodule_block_alter(&$definitions) {
  
  
  $definitions['user_login_block']['admin_label'] = t('Login'); 
 }
  
 A module can implement 
 hook_block_build_alter
  and modify the build information of a 
 block. The hook is passed the build array and the 
 \Drupal\Core\Block\ 
  
 BlockPluginInterface
  instance for the current block. Module developers can use this to 
 add cache contexts or alter the cache ability of metadata:
  
 /**
  
  * Implements hook_block_build_alter().
  
  */ 
  
 function hook_block_build_alter(array &$build, 
 \Drupal\Core\Block\ BlockPluginInterface $block) {
  
  
  // Add the 'url' cache the block per URL.
  
  
  if ($block->getBaseId() == 'myblock') {
  
  
  $build['#contexts'][] = 'url';
  
  
  } 
  
 }",NA
See also,"Refer to 
 Creating a custom plugin type
  recipe of this chapter
  
 block.api.php at 
 https://api.drupal.org/api/drupal/ 
 core%21modules%21block%21block.api.php/8",NA
Getting ready,"mymodule
  throughout the recipe. Use your module's appropriate name.",NA
How to do it…,"1. We need to create the 
 src/Plugin/Field/FieldType
  directory in the module's 
 base location. The 
 FieldPlugin\Field\ FieldType
  namespace.
  
 2. Create a 
 RealName.php 
  
  
 RealName
  class. This will provide our 
 real name",NA
How it works…,"Drupal core 
 plugin.manager.field.field_type
  service. By default, this is handled 
 through the 
 \Drupal\Core\Field\FieldTypePluginManager
  class. This plugin 
 Plugin/Field/FieldType
  
 type plugins.
  
 \Drupal\Core\Field\FieldItemInterface
  as the 
  
 extend 
 \Drupal\Core\Field\FieldItemBase
  to meet these method requirements.
  
  
 \Drupal\Core\Field\ 
 Annotation\FieldType
  
 When the user
 plugin.manager.field.field_ type",NA
There's more…,"The 
 \Drupal\Core\Field\FieldTypePluginManageralter
  method as 
 field_info.
  
 Modules that implement 
 hook_field_info_alter
  in their 
 .module",NA
See also,"The 
 Creating blocks using plugins
  recipe of this chapter
  
 Field widgets provide
  
 name items.",NA
Getting ready,"as 
 mymodule
  throughout the recipe. Use your module's appropriate name.",NA
How to do it…,"1. We need to create the 
 src/Plugin/Field/FieldWidget
  directory in the 
 module's base location. The 
 Field 
  
 Plugin\Field\FieldWidget
  namespace.
  
 2. Create a 
 RealNameDefaultWidget.php 
  
  
 RealNameDefaultWidget
  class. This will provide a custom form 
  
  
 3. The 
 RealNameDefaultWidget
  class will extend the 
 \Drupal\Core\Field\ 
  
 WidgetBase
  class:
  
 <?php
  
 /**
  
  * @file
  
  * Contains \Drupal\mymodule\Plugin\Field\FieldWidget\ 
 RealNameDefaultWidget
  
  */
  
 namespace Drupal\mymodule\Plugin\Field\FieldWidget;
  
 use Drupal\Core\Field\WidgetBase;
  
 class RealNameDefaultWidget extends WidgetBase {
  
 }",NA
How it works...,"plugin.manager.field.widget
  service. By default, this is 
 handled through the 
 \Drupal\Core\Field\FieldWidgetPluginManager
  class. 
  
  
 Plugin/Field/ 
 FieldWidget
  namespace, and all the classes in this namespace will be loaded and 
  
 \Drupal\Core\Field\FieldWidgetInterface
  as 
  
 types extend 
 \Drupal\Core\Field\WidgetBase
  to meet these method requirements.
  
  
 \Drupal\Core\Field\ 
 Annotation\FieldWidget
  
 The entity form display system uses the 
 plugin.manager.field.widget
  service to load 
  
 formElement
  method, to the 
 entity form.",NA
There's more,"Field widget settings and summary 
 The 
 \Drupal\Core\Field\WidgetInterface 
  
 be overridden to provide a settings form and a summary of the current 
 settings:
  
 defaultSettings
 : This returns an array of the setting keys and default values
  
 settingsForm
 : This returns a Form API array that is used for the settings form
  
 settingsSummary
 : This allows an array of strings to be returned and displayed on 
  
 Widget settings can be used to alter the form presented to the user. A setting can be created",NA
See also,"The 
 Creating a custom plugin type 
 recipe of this chapter
  
 return the render array information to be processed by the theming layer. Field formatters",NA
Getting ready,"Create a new module like 
  
 mymodule
  throughout the recipe. Use your module's appropriate 
 name.",NA
How to do it…,"1. We need to create the 
 src/Plugin/Field/FieldFormatter
  directory in the 
 module's base location. The 
 FieldPlugin\ Field\ FieldFormatter 
 namespace.",NA
How it works…,"a 
 plugin.manager.field.formatter
  service. By default, this is 
 handled through the 
 \Drupal\Core\Field\FormatterPluginManager
  class. This 
  
  
 Plugin/Field/ 
 FieldFormatter
  namespace, and all the classes in this namespace will be loaded and 
  
 \Drupal\Core\Field\FormatterInterface
  as 
  
  
 \Drupal\Core\Field\FormatterBase
  to meet these method 
 requirements.
  
 \Drupal\Core\Field\
  
 Annotation\FieldFormatter
  
 The entity view display system uses the 
 plugin.manager.field.formatter
  service 
  
  
 viewElements 
 method, to the entity view render array.",NA
There's more,"Formatter settings and summary 
 The 
 \Drupal\Core\Field\FormatterInterface 
  
 can be overridden to provide a settings form and a summary of the current 
 settings:
  
 defaultSettings
 : This returns an array of the setting keys and default values
  
 settingsForm
 : This returns a Form API array that is used for the settings form
  
 settingsSummary
 : This allows an array of strings to be returned and displayed on 
  
 Settings can be used to alter how the formatter displays information. For example, these",NA
See also,"The 
 Creating a custom plugin type 
 recipe of this chapter",NA
Creating a custom plugin type,"The plugin system provides 
  
 the robust features of the entity system.
  
 In this recipe, we will create a new plugin type called 
 Unit
  that will work with units of 
 measurement and conversions. We will create a plugin manager, default plugin interface, 
  
 YAML discovery
  
 This recipe is based on the work being done to export the 
 Physical
  module to Drupal 8. 
 The 
 Physical
  module provides a way to work with units of volume, weight, and 
 dimensions and attaches them to entities. It discovers unit plugins in the same way that the 
 Breakpoint 
 module discovers breakpoint plugins.",NA
Getting ready,"mymodule
  throughout the recipe. Use your module's appropriate name.",NA
How to do it…,"1. All plugins need to have a service that acts as a plugin manager. Create a new 
  
  
 src
  directory called 
 UnitManager.php
 . This will hold the 
  
 UnitManager
  class.
  
 2. Create the 
 UnitManager
  class by extending the 
 \Drupal\Core\Plugin\ 
  
 DefaultPluginManager
  class:
  
 <?php
  
 /**
  
  * @file
  
  * Contains \Drupal\mymodule�nitManager.
  
  */
  
 namespace Drupal\mymodule;
  
 use Drupal\Core\Plugin\DefaultPluginManager;
  
 use Drupal\Core\Cache\CacheBackendInterface;
  
 use Drupal\Core\Extension\ModuleHandlerInterface;
  
 class UnitManager extends DefaultPluginManager {
  
 }",NA
How it works…,"Drupal 8 implements a service container, a concept adopted from the Symfony framework. 
 In order to implement a plugin, there needs to be a manager who can discover and process 
  
 services.yml
  with 
 its required constructor parameters. This allows the service container to initiate the class 
 when it is required.
  
 In our example, the UnitManager plugin manager discovers the 
 Unit
  
 are then cached under the 
 physical_unit_plugins
  cache key.
  
 class
  key that we 
  
 provide an extended 
 Unit
  plugin as long as it extends the default 
 Unit
  class or implements 
 the 
 UnitInterface
  interface.
  
 An example usage would be to create a custom form that allows users to convert values. The 
 following code can be placed in the 
 submit
  method and will allow us to load our plugin for 
 feet
  and return the value in meters:
  
 // Load the manager service.
  
 $unit_manager = \Drupal::service('plugin.manager.unit');
  
 // Create a class instance through the manager.
  
 $feet_instance = $unit_manager->createInstance('feet');
  
 // Convert 12ft into meters.
  
 $meters_value = $feet_instance->toBase(12);",NA
There's more,"Specifying an alter hook 
  
  an alter hook. The following line of code will be 
 added to the 
 UnitManager
  class's constructor to provide 
 hook_physical_unit_alter
 . 
  
 This is passed to the module handler service for invocations:
  
  /**
  
  
  * Constructs a new \Drupal\mymodule�nitManager 
 object.
  
  *
  
  * @param \Drupal\Core\Cache\CacheBackendInterface   
 $cache_backend",NA
See also ,"Services and dependency injection at 
 https://www.drupal.org/node/2133171",NA
8 ,NA,NA
Multilingual and ,NA,NA
Internationalization,"In this chapter, we will cover the following recipes to make that your site is multilingual 
  
 Translating administrative interfaces
  
 Translating content 
  
 Creating multilingual 
 views",NA
Introduction,"have been greatly enhanced since Drupal 7. The previous version of Drupal required many 
  
 Drupal core.
  
 Drupal core provides the following multilingual modules:
  
 Language: This provides you with the ability to detect and support multiple 
 languages Interface translation: This takes installed languages and translates strings 
 that are presented through the user interface
  
 date formats and views 
  
 Content translation: This brings the power of providing content in different languages 
 and displaying it according to the current language of the user",NA
Translating administrative interfaces,"The interface translation module provides a method for translating strings found in the Drupal 
 user interface. Harnessing the Language module, interface translations are automatically 
 downloaded from the Drupal translation server. By default, the interface language is loaded 
  
 Language
  
 Interface translations are based on strings provided in the code that are passed through the 
 internal translation functions.
  
 interface strings to provide missing or custom translations.",NA
Getting ready,"web server must be able to communicate with 
 https://localize.drupal.org/
 . If your 
  
 to the manual installation instructions, which will be covered in the 
 There's more
  section.",NA
How to do it…,"1. Go to Extend and install the Interface Translation module. It will prompt you to 
  
 enable the Language, File, and Field modules to be installed as well if they are not.
  
 2. After the module is installed, click on . Go to the Languages page 
  
 under the 
 Regional and Language section.
  
 3. Click on Add language in the languages overview table:",NA
How it ,NA,NA
works…,"The interface translation module provides 
 \Drupal\locale\LocaleTranslation
 , which 
 implements 
 \Drupal\Core\StringTranslation\Translator\TranslatorInterface
 . 
  
 This class is registered under the 
 string_translation
  service as an available 
 lookup method.
  
 When the 
 t
  function or the 
 \Drupal\Core\StringTranslation\ 
  
 StringTranslationTrait::t
  method is invoked, the 
 string_translation
  service is 
 called to provide a translated string. The 
 string_translation
  service will iterate through 
 the available translators and return a translated string, if possible.
  
  
 Developers need to note that this is a key reason to ensure that 
  
  
 module strings are passed through translation functions. It allows 
  
 you to identify strings that need to be translated.
  
 The translator provided in the interface translation will then attempt to resolve the 
 provided string against known translations for the current language. If a translation has 
 been saved, it will be returned.",NA
There's more…,"We will explore ways to install other languages, check translation statuses, and many more 
 in the following sections.
  
 Translation 
  
 the import interface to upload custom Gettext Portable Object (.po
  
 Drupal core and most contributed projects have 
 .po 
  
 site, 
 https://localize.drupal.org
 . On the site, click on Download and you will be able 
 to download a 
 .po",NA
See also,"Refer to the Drupal translation server at 
 https://localize.drupal.org/ 
 translate/drupal8
  
  
  at 
 https://www.drupal.org/ 
 node/302194 
  
 Refer to the 
 locale.api.php
  documentation at 
 https://api.drupal.org/ 
 api/drupal/core%21modules%21locale%21locale.api.php/8 
  
 Refer to PO and 
 https://www.drupal.org/node/1814954
  
 The  module provides an interface for translating 
  
 with Interface translation and Language as dependencies. This module allows you to translate 
  
 Interface translation allows you to translate strings provided in your Drupal site's code base. 
  
 items that you have created, such as your site title or date formats.",NA
Getting ready,Translation. Install Danish from the Languages interface.,NA
How to do it…,"1. Go to the Extend and install the  module. It will prompt you to enable the Interface 
 Translation, Language, File, and Field modules to be installed as well if they are 
 not.
  
 2. After the module is installed, go to the . Go to the 
  
 translation 
 page under the Regional and Language section.
  
 3. Click on the list for the Date format
  
  
 4. We will translate the Default long date format to represent the Danish format. 
  
 Click on the Translate for the Default long date format row.
  
 5. Click on Add to create a Danish translation:",NA
How it works…,"translation module requires Interface translation; however, it does not 
  
 \Drupal\ 
 Core\Config\Entity\ConfigEntityInterface
  interface. It adds a new handler 
 under the 
 config_translation_list
  key. This is used to build a list of available 
  
 \Drupal\config_translation\Form
 . 
  
 This allows 
 \Drupal\config_translation\Form\ConfigTranslationFormBase
  and 
  
 language.LANGCODE
  
 in the database:
  
  
 When browsing the site in the 
 es
  language code, the appropriate 
 block.block.bartik_
  
 account_menu",NA
There's more…,"capabilities. We'll explore them in detail in the next recipe.
  
 Modules have the ability to invoke the 
 hook_config_translation_info_alter
  hook to 
  
 Node
  module does this to modify 
 the 
 node_type
  
 /**
  
  * Implements hook_config_translation_info_alter().
  
  */ 
  
 function node_config_translation_info_alter(&$info) {
  
  
  $info['node_type']['class'] = 'Drupal\node\ConfigTranslation\ 
 NodeTypeMapper'; 
  
 }
  
 This updates the 
 node_type\Drupal\node\ConfigTranslation\ 
 NodeTypeMapper 
  
 translation item.
  
 Translating views  
 Views are 
  
 possible to translate Views. This will allow you to translate display titles, exposed form 
 labels, and other items. Refer to the 
 Creating a multilingual view
  recipe in this 
 chapter for more information.",NA
See also,"In recipe 
 Creating a Multilingual View
  of 
 Chapter 8
 , 
 Multilingual and 
 Internationalization",NA
Translating content,"The content translation module provides a method for translating content entities, such as 
 nodes and blocks. Each content entity needs to have translation enabled, which allows you 
  
 code. When a visitor uses a language code, Drupal attempts to load content entities using 
 that language code. If a translation is not present, Drupal will render the default 
 nontranslated entity.",NA
Getting ,NA,NA
ready,Install Spanish from the Languages interface.,NA
How to do it…,"1. Go to Extend, and install the Content translation module. It will prompt you to 
  
 enable the Language modules to be installed as well if they are not.
  
 2. After the module is installed, go to . Go to the Content language 
  
 and 
 translation page under the Regional and Language section.
  
 3. Check the checkbox next to the Content to expose settings for the current 
  
 content types.
  
 4. Enable the content translation for the 
 Basic
  page and keep the provided default 
  
 :
  
  
 5. First, create a new 
 Basic
  page node. We will create this in the site's default language.",NA
How it ,NA,NA
works ,"The Content translation 
  
 code column, which is used to identify the translation for the content entity. Content entities 
  
 module will provide its own.
  
 loaded, the current language code is taken into consideration to ensure that the proper 
 entity is loaded.",NA
There's more,"Flagging translations as outdated 
 The Content translation module 
  
 being outdated. The Flag other translations as outdated 
 of entities that will need updated translations:
  
  
 easy for translators to identify content, which has been changed and requires updating. 
 The translation tab for the content entity will highlight all translations, which are still",NA
See also,"Chapter 10
 , 
 The Entity API",NA
Creating multilingual views,"Views, being 
  
 been translated for the user's language, is displayed.
  
 In this recipe, we will create a multilingual view that provides a block showing recent 
 articles. If there is no content, we will display a translated 
 no results
  message.",NA
Getting ,NA,NA
ready,"Content Translation. 
  
 Install Spanish from the Languages interface. Enable content translation for Articles 
 also need to have some translated content as well.",NA
How to do it…,"1. Go to Views from Structure, and click on Add new view.
  
 2. Provide a view name, such as 
 Recent articles
 , and change the type of content to 
 Article
 . Mark that you would like to Create a block and then click on Save and 
 edit.
  
 3. Add a new Filter criteria. Search for Translation language 
  
 Content. SetInterface text language selected for page. This will only display that the 
 content that has been translated or the base language is the current language:
  
  
 4. Add a 
 No results behavior
  to the 
 Text area
  option. Provide some sample text, 
  
 such as 
 Currently no recent articles
 .",NA
How it works…,"Views provide the 
  
 systems provides a mechanism for gathering and displaying all available languages. These 
 will be saved as a token internally and then substituted with the actual language code when 
 the query is executed. If a language code is no longer available, you will see the 
 Content 
 language for selected
  page and Views will fall back to the current language when 
 viewed.
  
  
 core or contributed modules. While this is not an option in the user 
  
  
 ***LANGUAGE_language_content***, which will force the view to 
  
 be multilingual.
  
 Views
  
 Configuration
  area or by editing individual views.
  
 Most translation items will be under the Master display settings tab unless overridden in",NA
There's more…,"Each view has the ability to translate the exposed form from the 
 Exposed Form
  section. 
  
 This 
  
 translate the 
 submit
  button text, 
 reset
  button label, 
 sort
  label, and how 
 ascending
  or 
 descending
  should be translated.
  
 Filters
  section. Each exposed 
  
 and front facing label.
  
  
 By default, available translations need to be imported through the global interface 
 translation context.
  
 Translating display and row format items 
 Some display formats have translatable items. These can be translated in each display 
 mode's section. For example, the following items can be translated with their display 
 format:
  
 The 
 Table
  format allows you to translate the table summary
  
 The 
 RSS feed
  format allows you to translate the feed description
  
 The 
 Page
  format allows you to translate the page's title
  
 The 
 Block
  format allows you to translate the block's title",NA
See also,"Chapter 3
 , 
 Displaying Content through Views",NA
9 ,NA,NA
Management – ,NA,NA
Deploying in Drupal 8,NA,NA
Introduction,NA,NA
Getting ready,"clone of the development site, must be available to act as the production Drupal site.",NA
How to do it…,"1. To get started, create a new content type on the development site. Name the content 
  
 type Staff Page and click on  to save the content type. We 
  
 2. Once the content type has been saved, visit Extend and install the 
  
 Manager module if it is not installed:",NA
How it works…,"back to a PHP array. The data is then updated in the database.
  
 When importing the 
 uuid
  
 (UUID). A UUID is a pattern used in software to provide a method of identifying an object 
 across different environments. This allows Drupal to correlate a piece of data from its UUID 
  
 matching machine name but a mismatching UUID, an error will be thrown.",NA
There's more…,"functionality.
  
  
    
 field.storage.node.body.yml 
 node
  and 
 text
  as 
 dependencies
 : 
  
  
 dependencies:
  
  
  
  module:
  
  
  
  - node
  
  
  
  - text 
  
 If the 
 node
  or 
 text
  module is not enabled, the import will fail and throw an 
 error.",NA
See also,"Chapter 4
 , 
 Extending Drupal
  
 configuration schema/metadata
  in the Drupal.org community handbook 
 at 
 https://www.drupal.org/node/1905070
  
 A key
  
 in development are pushed upstream to your production environments. Maintaining 
  
 A site export can only be imported into another copy of itself. This allows you to export your 
  
 modifying the content or the database directly.
  
 simulate a typical deployment of a Drupal site with changes created in development that 
 is ready to be released in production.",NA
Getting ready,"clone of the development site, must be available to act as the production Drupal site.
  
 Configuration management
  module enabled.",NA
How to do it…,"1. Visit the  page and go to .
  
 2. Navigate to the Export tab, and click on the Export button to begin the export and 
  
 download process:
  
  
 3. Save the 
 gzipped tarball
  
 4. Visit your other Drupal site and navigate to its  page.
  
 5. Click on the Import tab and then on the Full archive tab. Use the 
  
 archiveChoose File to select the tarball you just downloaded. Click on Upload to 
 begin the import process.",NA
How it works…,"The  form provides a way to interface with the 
 config
  database table for your Drupal site. 
 When you visit the Export page and create the tarball, Drupal effectively dumps the contents 
 of the 
 config 
  
 and will become its own 
 YAMLYAML
  
 CONFIG_SYNC_DIRECTORY
  
 choose to selectively import individual items.",NA
There's more…,"When a Drupal site is installed, the UUID is set. This UUID is added to the exported 
 uuid
  
 key. Drupal uses this key to identify 
  
  
 system.site 
 object.
  
 A synchronization folder 
 imported into the current site. This folder is represented by the 
 CONFIG_SYNC_DIRECTORY 
  
 $config_directories
  variable in your 
 site's 
 settings.php
  
  
 When Drupal 8 entered its beta release cycle, this folder was 
  
  
 referenced as a staging folder and referenced by the 
 CONFIG_
  
 STAGING_DIRECTORY
 . This is now deprecated; however, the 
  
 reading 
 CONFIG_STAGING_DIRECTORY
  as 
 CONFIG_SYNC_
  
 DIRECTORY
 . This will be removed in Drupal 9.
  
  
  management system will not allow the 
  
 that originated at a different Drupal site. When a Drupal site is installed, the 
 system.site
  
 will then be imported, as shown in the following screenshot:",NA
Getting ready…,"clone of the development site, must be available to act as the production Drupal site.
  
 This recipe uses Drush. If you do not have Drush installed, instructions can be found at 
 http://docs.drush.org/en/master/install/
 . Drush needs to be installed at both 
 the locations where your Drupal sites are located.",NA
How to do it…,"1. For demonstration purposes, change your development site's name to 
 Drush 
  
 Config Sync Demo!
  
 be imported to the production Drupal site.
  
 2. Open a command-line terminal and change your directory to the working directory 
  
 of your development Drupal site.
  
 3. Use the 
 drush config-export 
  
 directory. The command will default to the 
 sync 
  
 in your Drupal 8 site.
  
  
 If you have not explicitly defined a 
 sync
  directory, Drupal automatically 
  
  
 creates a protected folder in the current site's uploaded files' directory, 
  
 with a unique hash suffix on the directory name.
  
 4. 
  
 5. 
 sync
  folder to your other Drupal sites that match the 
 configuration sync
  folder. 
 For example, a default folder generated by Drupal can be 
 sites/default/files/config_XYZ/ sync
 .
  
 6. Open a command-line terminal and change your directory to your production Drupal 
  
 site's working directory.
  
 7. 
  
 Use the 
 drush config-import
  command to begin the process of importing",NA
How it works…,"The 
 Drush 
  
 The 
 config-export
  command replicates the functionality provided by the 
 Configuration 
 management 
  
 management module enabled for the command to work. The command will extract the 
  
 The 
 config-import",NA
There's more…,"The 
 config-pull
  command allows you to specify two Drupal sites and move the export 
  
 /sites
  directory or a Drush alias.",NA
See also ,"Chapter 13
 , The 
 Drupal CLI 
  
  
 Drush at 
 http://docs.drush.org/en/master/ 
  
  
 Drupal Console at 
 http://www.drupalconsole.com/
  
 Originally, Drupal 8 
  
 rebuild.
  
  
 Overall, this is an advanced topic. This recipe will explain how to use an 
  
  
 information on Drupal's change from disk to database storage, refer to 
  
 the issue that committed the change at 
 https://www.drupal.org/
  
 node/2161591
 .",NA
How to do it…,"1. Create a folder called 
 config
  in the sites/default directory. Create the 
 active
  and 
  
  
 sync
  folders in 
 config",NA
How it works…,"CONFIG_ACTIVE_DIRECTORY
  and 
 CONFIG_SYNC_DIRECTORY
 , respectively. Drupal uses, 
 and expects, the 
 $config_directories 
  
 folder names and their destinations.
  
 The 
 bootstrap_config_storage
  setting allows you to override the default database 
  
 which returns a class implementing 
 \Drupal\Core\Config\StorageInterface
 . The 
 example provided in 
 settings.php
  uses the 
 \Drupal\Core\Config\FileStorage 
 class. The 
 \Drupal\Core\DrupalKernel
  then caches this storage backend and uses 
  
 The container's service for 
 config.storage.active
  also needs to be overridden to 
 point to the appropriate class. This way, when modules or internal processes invoke 
 \Drupal::service('config.storage.active')
  they receive the proper storage 
 backend.",NA
There's more…,"alternative storage backends. We will explore this in more detail.
  
 Deprecated for Drupal 9 
  and set to be removed by 
  
 works. However, just because it is deprecated in the Drupal core does not mean that it will 
 go away. The implementation can very easily be imported into a contributed or custom 
 project.
  
 The 
 \Drupal\Core\Config\FileStorage 
  
 as 
 YAML
  
 of the deprecated class provided by the core:
  
 <?php
  
 /**
  
  * @file
  
  * Contains \Drupal\mymodule\MyCustomFileStorageFactory.
  
  */
  
 namespace Drupal\mymodule;",NA
See also,"The change default active 
 config 
  
 https://www.drupal.org/node/2161591
  
 The default active 
 config 
  
 record at 
 https://www.drupal.org/node/2241059",NA
The Entity API ,NA,NA
10,"In this chapter, we will explore the Entity API to create custom entities and see how 
 they are handled:
  
 Creating a content entity type
  
 Creating a bundle for a content entity type
  
 Implementing custom access control for an entity
  
 Providing a custom storage handler
  
 Creating a route provider",NA
Introduction,"In Drupal, entities 
  
  
 bundles. 
  
 terms of programming, you can consider an entity that supports bundles an abstract class 
 and each bundle a class that extends that abstract class. Fields are added to bundles. 
  
 This is part of the reasoning for the term, as an entity type can contain a 
 bundle
  
 types:  and content
  
 In Drupal 8, the Entity module lives on, even though most of its functionalities from Drupal 7 
 are now in core. The goal of the module is to develop improvements for the developer 
 experience around entities by merging more functionalities into core during each minor 
 release cycle (8.1.x, 8.2.x, and so on). Each recipe will provide a 
 There's more
  section that 
 relates to how the Entity module can simplify the recipe.",NA
Getting ready,"type. Create an 
 src
  directory for your classes.",NA
How to do it…,"1. In your module's base directory, create a 
 config
  directory with a 
 schema
  
 mymodule.schema.yml",NA
How it works,"type
 . This value can be 
 config_object
  or 
 config_entity
 . 
 When the type is 
 config_entity 
  
  
  
 config
  table.",NA
There's more…,"Drupal core provides its own 
 core.data_types. schema.ymlcore/config/schema
 . 
 These are the base types of data that 
  
 boolean:
  
  
  label: 'Boolean'
  
  
  class: '\Drupal\Core\TypedData\Plugin\DataType\BooleanData' 
 email:
  
  
  label: 'Email'
  
  
  class: '\Drupal\Core\TypedData\Plugin\DataType\Email' 
 string:
  
  
  label: 'String'
  
  
  class: '\Drupal\Core\TypedData\Plugin\DataType\StringData'
  
 that value is then handled by the 
 \Drupal\Core\TypedData\Plugin\DataType\Email
  
 validation. This is built around the Symfony Validator component.",NA
See also,"Chapter 6
 , 
 Creating Forms with the Form API
  
 Chapter 4
 , 
 Extending Drupal
  
 Chapter 9
 , 
  
  
  at 
 https://www.drupal.org/ 
 node/1905070",NA
Creating a content entity type,"Content entities 
  
 module. There is also support for revisions and translations with content entities. Display 
  
 edited and displayed. When an entity does not specify bundles, there is automatically one 
 bundle instance with the same name as the entity.
  
 In this recipe, we will create a custom content entity that does not specify a bundle. We will 
 create a 
 Message
  entity that can serve as a content entity for generic messages.",NA
Getting ready,"type. Create an 
 src
  directory for your classes.",NA
How to do it…,"1. Create an 
 Entity
  directory in your module's 
 src
  folder. First, we will create an 
  
 interface for our entity by making a 
 MessageInterface.php
  
  
 2. The 
 MessageInterface
  will extend 
 \Drupal\Core\Entity\ 
  
 ContentEntityInterface
 :
  
 <?php
  
 /**
  
  * @file Contains \Drupal\mymodule\Entity\MessageInterface.
  
  */
  
 namespace Drupal\mymodule\Entity;
  
 use Drupal\Core\Entity\ContentEntityInterface;",NA
How it works…,"Content entities are a version of the 
 EntityType 
  
 entity type, the annotation block begins with 
 @ContentEntityType
 . This declaration, 
  
 \Drupal\ 
 Core\Entity\ContentEntityType
  class just like all other plugin annotations. The 
 ContentEntityType
  plugin class implements a constructor to provide default 
 storage 
 and 
 view_builder
  handlers, forcing us to implement the 
 list_builder
  
 and 
 form 
 handler arrays.
  
 The plugin manager for entity types lives under the 
 entity_type.manager
  service name 
 and is provided through 
 \Drupal\Core\Entity\EntityTypeManager
  by default. 
  
  
 Message
  class that extends 
 ContentEntityBase
  provides a means for manipulating the data it represents.",NA
There's more…,"We will discuss how to add additional functionality to your entity, and use the Entity module 
 to simplify the developer expedience.
  
 Using the AdminHtmlRouteProvider provider 
 Our 
 Message
  entity type implementes the 
 DefaultHtmlRouteProvider
  class. There is 
 also the 
 \Drupal\Core\Entity\Routing\AdminHtmlRouteProvider
  class. This 
 overrides the 
 getEditFormRoute
  and 
 getDeleteFormRoute
  and marks them with 
 _admin_route
 . This will cause those forms to be rendered in the administration theme.
  
 Content entities need to
 entity_keys
  
 Entity
  module provides the 
 \Drupal\entity\ 
  
 EntityKeysFieldsTrait
  trait. A content entity type class can use this trait to 
 provide 
 entity_key
  values.
  
 The 
 Message
  content entity class can be reduced to the following code using this trait:
  
 class Message extends ContentEntityBase implements MessageInterface {
  
  use EntityKeysFieldsTrait;
  
  /**
  
  * {@inheritdoc}
  
  */
  
  public function getMessage() {
  
  return $this->get('content')->value;
  
  }",NA
See also,"Chapter 6
 , 
 Extending Drupal",NA
Creating a bundle for a content entity type,Bundles allow you to have different variations of a content entity. All bundles share the same,NA
Getting ready,"entity type. Create an 
 src
  directory for your classes. We need a custom content entity type 
 to be implemented, such as the one in the 
 Creating a content entity type 
 recipe.",NA
How to do it…,"1. 
  
 config/schema
  directory and a 
 mymodule.schema.yml
  
 mymodule.message_type.*:
  
  
  type: config_entity
  
  
  label: 'Message type settings'
  
  
  mapping:
  
  
  id:
  
    
  type: string
  
    
  label: 'Machine-readable 
 name'
  
  
  uuid:
  
    
  type: string
  
    
  label: 'UUID'
  
  
  label:
  
    
  type: label
  
    
  label: 'Label'
  
  
  langcode:
  
    
  type: string
  
    
  label: 'Default language'
  
 2. 
 message_type
 , which we will provide to Drupal in the entity's annotation 
 block. We tell Drupal that this is a 
 config_entity
  and provide a label for 
 the schema.
  
 3. With the mapping array, we provide the attributes that make up our entity and the 
  
 data that will be stored.
  
 4. In your module's 
 src/Entity
  directory, create an interface for our bundle by making 
 a 
 MessageTypeInterface.phpMessageTypeInterface
  
 will 
 extend 
 the 
 \Drupal\Core\Config\Entity\ConfigEntityInterface
 :
  
 <?php
  
 /**
  
  * @file Contains \Drupal\mymodule\Entity\MessageTypeInterface.
  
  */",NA
How it works…,"Bundles are most  via the 
 Field
  and 
 Field UI
  
 but they extend the usability of the Field API for your content entity types.",NA
There's more…,"We will discuss how to add additional functionality to your entity bundle, and use the 
 Entity module to simplify the developer expedience.
  
 Provide action links for adding new bundles  
 There are special links called action links in Drupal. These appear at the top of the 
 page and are generally used for links that allow the creation of an item by creating a 
 links.action.yml
  
 In your 
 mymodule.links.action.yml 
  
 titles, and the routes it appears on:
  
 message_type_add:
  
  
  route_name: entity.message_type.add_form
  
  
  title: 'Add message type'
  
  
  appears_on:
  
  
  - entity.message_type.collection
  
 The 
 appears_on
  key accepts multiple values that will allow this route link to appear 
 on multiple pages:",NA
See also,"Chapter 4
 , 
 Extending Drupal
  
 Chapter 9
 , 
  
 Recipe  in 
 Chapter 10
 , 
 The Entity API",NA
Implementing custom access control for an entity,"All entities have a set of handlers that control 
  
  
 \ 
 Drupal\Core\Entity\EntityType
  module will implement 
 \Drupal\Core\Entity\ 
 EntityAccessControlHandler
  as the access handler. By default, this will check whether 
 any modules have implemented 
 hook_entity_create_access
  or 
 hook_entity_type_ 
 create_access
  and use their opinions. Otherwise, it defaults to the admin permission for 
 the entity type, if implemented.
  
 In this recipe, we will provide an admin permission for our entity along with create, 
 update, view, and delete permissions for each of the entity's bundles. We will base this on 
 an entity called Message.",NA
Getting ready,"entity type. Create an 
 src
  directory for your PSR-4 style classes. We need to implement a 
 custom content entity type, such as the one in the 
 Creating a content entity type
  recipe.",NA
How to do it…,"1. 
  
 adding the 
 admin_permission
  key to the entity's annotation document block:
  
 /**
  
  * Defines the profile entity 
 class.
  
  *
  
  * @ContentEntityType(
  
  *   id = ""message"",
  
  *   label = @Translation(""Message""),
  
  *   handlers = {...},
  
  *   base_table = ""message"",
  
  *   fieldable = TRUE,
  
  *   admin_permission = ""administer messages"", 
 *   entity_keys = {
  
  *     ""id"" = ""message_id"",
  
  *     ""label"" = ""title"",
  
  *     ""langcode"" = ""langcode"",
  
  *     ""uuid"" = ""uuid""
  
  *   },
  
  *  links = {...},
  
  * )
  
  */",NA
How it works…,"Entities are powered by the plugin system in Drupal, which means that there is a plugin 
 manager. The default 
 \Drupal\Core\Entity\EntityTypeManager 
 provides the 
 discovery and handling of entities. Both the 
 ContentEntityType
  and 
 ConfigEntityType 
 entity types and classes extend the base 
 \Drupal\Core\Entity\EntityType
  class.
  
 The 
 EntityType
  class constructor provides a default 
 access
  handler if it is not provided, 
 through the 
 \Drupal\Core\Entity\EntityAccessControlHandler
  class. There are 
 several methods provided by the class, but the notable ones are 
 checkAccess
 , 
 checkCreateAccess
 , and 
 checkFieldAccess
 . These are designed to be overridden by 
 entity implementations that need their own access checking.
  
 Every core module that provides an entity type implements this to override at 
 least 
 checkAccess
  and 
 checkCreateAccess
 .
  
 \Drupal\Core\Access\AccessibleInterfaceaccess
  method and all the entities 
 inherit this interface. The default implementation in 
 \Drupal\Core\Entity\ Entity
  
 will invoke 
 checkCreateAccess
  if the operation is 
 create
 ; otherwise, it invokes the 
 generic 
 access
  method of the access controller, which will invoke entity access hooks and 
 the class' own 
 checkAccess
  method.",NA
There's more…,"We will discuss how to implement custom access control for an entity, and use the Entity to 
 simplify the controlling access.
  
 The 
 checkFieldAccess
  method can be overridden to control access to 
  
 when modifying an entity. Without being overridden by a child class, the 
 \Drupal\Core\ Entity\EntityAccessControlHandler::checkFieldAccess
  
 will always return an allowed access result. The method receives the following 
 parameters:
  
 The view and edit operations
  
 The user session to check access against
  
 Entity types can implement their own access control handlers and override this method to 
  
 the 
 User
  module and its 
 \Drupal�ser�serAccessControlHandler
 .
  
 User entities have a 
 pass 
  
 created",NA
See also,"Chapter 4
 , 
 Extending Drupal",NA
Providing a custom storage handler,"Storage handlers control the loading, saving, and deleting of an entity.  
 \Drupal\Core\ 
 Entity\ContentEntityType 
  
  
 \Drupal\Core\Entity\Sql
 \ SqlContentEntityStorage
 . This class can be extended to implement alternative 
 load 
 methods or adjustments on save.
  
 loadByProperties
  method call.",NA
Getting ready,"entity type. Create an 
 src
  directory for your PSR-4 style classes. A custom content entity 
 type needs to be implemented, such as the one in the 
 Creating a content entity type
  recipe.",NA
How to do it…,"1. Create a 
 MessageStorage
  class in the module's 
 src
  directory. This class will extend 
 the default 
 \Drupal\Core\Entity\Sql\SqlContentEntityStorage
  class:
  
 <?php
  
 /**
  
  * @file Contains \Drupal\mymodule\MessageStorage.
  
  */
  
 namespace Drupal\mymodule;
  
 use Drupal\Core\Entity\Sql\SqlContentEntityStorage;
  
 /**
  
  * Defines the entity storage for messages.
  
  */ 
  
 class MessageStorage extends SqlContentEntityStorage {
  
 }
  
 2. By extending the default storage class for our entity type, we can simply add new 
 methods that are relevant to our requirements rather that implementing the 
 extra business logic.
  
 3. Create a 
 loadMultipleByType
  method and we will use this method to provide 
  
  /**
  
  
  * Load multiple messages by bundle type.
  
  *
  
  * @param string $message_type
  
  *   The message type.
  
  *
  
  * @return array|\Drupal\Core\Entity\EntityInterface[] 
 *   An array of loaded message entities.
  
  
  */
  
  public function loadMultipleByType($message_type) {
  
  
 return $this->loadByProperties([
  
   
  'type' => $message_type,
  
  
  ]);
  
  }
  
 4. We pass the 
 type
  property so that we can query it based on the message bundle 
  
 and return all matching message entities.",NA
How it works…,"entity type, the annotation block begins with 
 @ContentEntityType
 . 
  
 \Drupal\Core\Entity\ContentEntityType
  class just like all other plugin annotations.
  
 In the class constructor, there is a merge to provide default handlers for the 
 storage 
 handler if it is not provided. This will always default to 
 \Drupal\Core\Entity\Sql\ 
 SqlContentEntityStorage
  as it provides methods and logic to help its parent class, 
 ContentEntityStorageBase
 , interact with the SQL-based storage.",NA
There's more…,"Utilizing a different storage backend for an entity 
 Drupal provides mechanisms for supporting different database storage backends that are 
 not provided by Drupal core, such as MongoDB. While it is not stable for Drupal 8 at the 
 time of writing this book, there is a MongoDB module that provides storage interaction.
  
 The module provides 
 \Drupal\mongodb\Entity\ContentEntityStorage
 , which 
 extends 
 \Drupal\Core\Entity\ContentEntityStorageBase
 . This class overrides 
 the methods used to create, save, and delete, to write them to a MongoDB collection.
  
 While there are many more steps to provide a custom storage backend for content entities 
  
 in a different storage backend.",NA
See also,"Chapter 4
 , 
 Extending Drupal
  
 Chapter 7
 , 
 Plug and Play with Plugins",NA
Creating a route provider,"Entities can implement 
  
 canonical (view), edit, and delete routes. As of Drupal 8.0.1, the add path for an entity is not 
 handled through the default route provider.
  
 In this recipe, we will extend the default 
 \Drupal\Core\Entity\Routing\ DefaultHtmlRouteProvider
  and 
 provide the add routes for our entity.",NA
Getting ready,"entity type. Create an 
 src
  directory for your classes. A custom content entity type 
 needs to be implemented, such as the one in the 
 Creating a content entity type
  recipe.",NA
How to do it…,"1. Create a 
 MessageHtmlRouteProvider
  class in the 
 src
  directory that extends 
  
  
 \Drupal\Core\Entity\Routing\DefaultHtmlRouteProvider
 : 
  
  
  
 <?php 
  
  
  
 /**
  
  
  
  * @file Contains \Drupal\mymodule\MessageHtmlRouteProvider.
  
  */ 
  
 namespace Drupal\mymodule; 
  
 use Drupal\Core\Entity\Routing\DefaultHtmlRouteProvider; 
 /**
  
  * Provides HTML routes for the message entity type.
  
  
  */ 
  
  
 class MessageHtmlRouteProvider extends DefaultHtmlRouteProvider { 
  
 } 
  
 2. Override the provided 
 getRoutes
  method and collect the parent class's collection of 
  
 routes returned: 
  
  
 <?php 
  
  
 /**
  
  
  * @file Contains \Drupal\mymodule\MessageHtmlRouteProvider.
  
  */ 
  
 namespace Drupal\mymodule; 
  
 use Drupal\Core\Entity\EntityTypeInterface; 
  
 use Drupal\Core\Entity\Routing\DefaultHtmlRouteProvider; 
 /**
  
  * Provides HTML routes for the message entity type.
  
  */",NA
How it works…,"Entities are powered by the plugin system in Drupal, which means that there is a plugin 
 manager. The default 
 \Drupal\Core\Entity\EntityTypeManager
  provides discovery 
 and handling of entities. The 
 \Drupal\Core\Entity\EntityTypeManagerInterface 
 getRouteProviders
  method that is expected to return an array of strings that 
  
  
 \Drupal\Core\Entity\ Routing\EntityRouteProviderInterface
  
 interface.",NA
There's more…,"Drupal 8 introduces a router types and provide the add routes for our entity.
  
 The Entity API module provides add generation  
 In Drupal 8, the Entity module lives on, even though most of its functionalities from Drupal 7 
 are now in core. The goal of the module is to develop improvements for the developer 
 experience around entities. One of these is the generation of the 
 add
  form and its routes.
  
 add
  routes, the 
 \Drupal\entity\Routing\CreateHtmlRouteProvider
  and 
 \Drupal\entity\ 
 Routing\AdminCreateHtmlRouteProvider
 . The latter option forces the add form 
 to be presented in the administrative theme.
  
 With the Entity module installed, you can add a 
 create
  entry for the 
 router_providers 
 array pointing to the new route provider:
  
  *     ""route_provider"" = {
  
  *       ""html"" = ""Drupal\Core\Entity\Routing\ 
  
 DefaultHtmlRouteProvider"",
  
  *       ""create"" = ""Drupal\entity\Routing\CreateHtmlRouteProvider"",
  
 *     },
  
 Then, you just need to 
 add-form
  entry in your entity's 
 links 
 if not 
 already present:
  
 *   links = {
  
  *     ""add-form"" = ""/admin/structure/message-types/add"",
  
  *     ""delete-form"" = ""/admin/structure/message-
 types/{message_type}/ delete"",
  
  *     ""edit-form"" = ""/admin/structure/message-types/{profile_type}"", 
 *     ""admin-form"" = ""/admin/structure/message-types/{profile_type}"", 
 *     ""collection"" = ""/admin/structure/message-types""
  
  *   }
  
 This reduces the amount of boilerplate code required to implement an 
 Entity
 .",NA
See also,"Chapter 4
 , 
 Extending Drupal
  
 Refer to the Routing system in Drupal 8 at 
 https://www.drupal.org/ 
 developing/api/8/routing",NA
11 ,NA,NA
Off the Drupalicon ,NA,NA
Island,"In this chapter, we will see how to use third-party libraries, such as JavaScript, CSS, and PHP 
 in detail:
  
 Implementing and using a third-party JavaScript library
  
 Implementing and using a third-party CSS library
  
 Implementing and using a third-party PHP library
  
 Using Composer manager",NA
Introduction,"Drupal 8 comes with a 
 Proudly Built Elsewhere
  attitude. There has been an effort made to use 
 more components created by the PHP community at large and other communities. Drupal 8 is 
  
 its CKEditor, and uses PHPUnit for testing.
  
 system in Drupal 8 makes it easier to use frontend libraries. Drupal implements PSR-0 and 
 PSR-4 from the PHP Framework Interoperability Group (PHP-FIG) and PHP Standards 
 Recommendations (PSRs) are suggested standards used to increase interoperability 
 between PHP applications. This has streamlined integrating third-party PHP libraries.
  
 Both areas will be constantly improved with each minor release of Drupal 8. These areas will 
 be mentioned throughout the chapter.",NA
Implementing and using a third-party JavaScript ,NA,NA
library,"In the past, Drupal has only shipped with jQuery and a few jQuery plugins used by Drupal 
 core for the JavaScript API. This has changed with Drupal 8. 
 Underscore.js
  and 
 Backbone.js 
 are now included in Drupal, bringing two popular JavaScript frameworks to 
 its developers.
  
 However, there are many JavaScript frameworks that can be used. In 
 Chapter 5
 , 
 Frontend for 
 the Win
 , you learned about the asset management system and libraries. In this recipe, we 
 will create a module that provides 
 Angular.js
  as a library and a custom Angular 
 application; the demo is available on the AngularJS home page.",NA
Getting ready,"In this example, we will use Bower to manage our third-party 
 angular.js
  library 
 components. If you are not familiar with Bower, it is simply a package manager for frontend 
 components. 
  
 If you do not have Bower, you can follow the instructions to install it from 
 bower.io
  at 
 http://bower.io/#install-bower
 . If you do not want to install Bower, we will 
 provide links to manually download libraries.
  
 example from the home page of the library.",NA
How to do it…,"1. Create a custom module named 
 mymodule
  that will serve the AngularJS library and 
  
 its implementation:
  
 name: My Module!
  
 type: module
  
 description: Provides an AngularJS app.
  
 core: 8.x
  
 2. Run the bower 
 init
  to create a bower project in your module. We will use most of 
  
 the default values for the prompted questions:
  
 $ bower init
  
 ? name mymodule
  
 ? description Example module with AngularJS
  
 ? main file 
  
 ? what types of modules does this package expose? 
  
 ? keywords",NA
How it works…,"The simplicity of integrating with a JavaScript framework is provided by the new asset 
 management system in Drupal 8. The usage of Bower is optional, but it is usually a 
 preferred method used to manage frontend dependencies. Using Bower, we can place 
 bower_components
  in an 
 ignore 
  
 out of version control.",NA
See also,"Refer to the core issue to add 
 Backbone.js
  and 
 Underscore.js
  at 
 https://www.drupal.org/node/1149866
  
 The recipe 
 Using the new asset management system
 , in 
 Chapter 5
 , 
 Frontend for 
 the Win
  
 Chapter 4
 , 
 Extending Drupal
 , in recipe 
 Creating a Module",NA
Implementing and using a third-party CSS ,NA,NA
library,"Drupal provides many things. However, one thing that it does not provide is any kind of CSS 
 component library. In the recipe 
 Using the new asset management system
 , in 
 Chapter 5
 , 
 Frontend for the Win
 , we added 
 FontAwesome
  as a library. CSS frameworks implement robust 
 user interface design components and they can be quite large if using a compiled version with 
  
 In this recipe, we will implement the Semantic UI framework, using the CSS only distribution, 
  
 form
 , 
 button
 , 
 label
 , and 
 input
  components as libraries. Our custom theme will then alter the Drupal 
 elements for 
 buttons
 , 
 labels
 , and 
 inputs
  to have the Semantic UI classes and load the 
 proper library.",NA
Getting ready,"In this example, we will use Bower to manage our third-party components. If you are 
 not familiar with Bower, it is simply a package manager used for frontend 
 components.",NA
How to do it…,"1. For this recipe, create a new custom theme named 
 mytheme
  using Classy as a base 
 theme. This way, we can reuse some existing styling. If you are unfamiliar with 
 creating a base theme, refer to the recipe 
 Creating a custom theme based on Classy
 , in 
 Chapter 5
 , 
 Frontend for the Win
 .
  
 2. Using your terminal, navigate to your theme's directory. Run bower 
 init
  to create a 
 bower
  project: 
  
 $ bower init 
  
 ? name mytheme 
  
 ? description Example theme with Semantic UI 
  
 ? main file 
  
 ? what types of modules does this package expose? 
  
 ? keywords 
  
 ? authors Matt Glaman <nmd.matt@gmail.com> 
  
 ? license GPL 
  
 ? homepage",NA
How it works…,"The simplicity of integrating with a CSS framework is provided by the new template system, 
 Twig, and the asset management system in Drupal 8. The usage of Bower is optional, but it is 
 usually a preferred method for managing frontend dependencies and can be used to keep 
 third-party libraries out of version control.
  
 needed, it ensures optimal asset delivery. With CSS and JavaScript aggregation enabled, each 
 page will only have the minimal resources that are needed. This is an advantage when the",NA
See also,"Refer to Semantic UI at 
 http://semantic-ui.com/
  
 In the recipe 
 Creating a custom theme based on Classy
 , in 
 Chapter 5
 , 
 Frontend for 
 the Win
  
 In the recipe 
 Using the new asset management system
 , in 
 Chapter 5
 , 
 Frontend for 
 the Win
  
 In the recipe 
 Twig templating
 , in 
 Chapter 5
 , 
 Frontend for the Win",NA
Implementing and using a third-party PHP ,NA,NA
library,"Drupal 8 uses Composer for package dependencies and 
 autoloading
  classes based on 
 PSR standards. This allows us to use any available PHP library much more easily than in 
 previous versions of Drupal.
  
 In this recipe, we will add the 
 Stack/Cors
  library to add CORS support to Drupal 8. 
 Stack/ 
 Cors
  is a stack middleware that adds support to the Access-Control-Allow-Origin header 
  
 may fail.
  
  
 In order to test CORS, you will need to make a cross-domain asynchronous 
  
  
 JavaScript request. The Access-Control-Allow-Origin header
  
 domains that are allowed to perform these requests.",NA
Getting ready,"Composer installed in order to use the 
  
 can follow the 
 Getting Started
  documentation at 
 https://getcomposer.org/doc/00-intro.md
 . We will add the 
 asm89/stack-
 cors
  library as a dependency to our Drupal installation.",NA
How to do it…,"1. Using your terminal, navigate to your Drupal site's root directory.
  
 2. Use the 
 require
  command from Composer to add the library:
  
 composer require asm89/stack-cors
  
 3. Composer will then add the library to the 
 composer.json 
  
  
 along with any dependencies. Its namespace will now be 
 registered.
  
 4. Now, we need to implement a module that registers the 
 Stack/Cors
  library as a 
 middleware service. We'll call the module 
 asm_stack_cors
 . Add the following 
 code to the 
 asm_stack_cors.info.yml
  
 name: Stack/Cors
  
 type: module
  
 description: Adds CORS support to Drupal via the asm89/stack-cors 
 library
  
 core: 8.x",NA
How it works…,"it has registered. During the building of the container, there is a compiler pass process that 
 allows alterations of the container's services.
  
 First, we need to register the service in the module's 
 services.yml\Drupal\ 
 Core\DependencyInjection\Compiler\StackedKernelPass
  class provided by the 
 core will automatically load all the services tagged with 
 http_middleware
 , such as our 
 asm_stack_cors.cors
  service.
  
 Our 
 argumentsparameters.cores
  that are used for the class's constructor.
  
 With our provided 
 CorePass
  class, we are also tapping into the container's compile 
 cycle. We check the parameter values for the 
 cors
  section to see whether they are 
 enabled. 
  
 If the enabled setting is set to false, we remove our service from the container.",NA
See also,"at 
  
 http://www.w3.org/TR/cors/
  
 Refer to the Symfony Service Container documentation at 
  
 http://symfony.com/doc/current/book/service_container.html
  
 Refer to the Symfony Dependency Injection component documentation at 
  
 http://symfony.com/doc/current/components/dependency_injection/ 
 introduction.html",NA
Using Composer manager,"Drupal 8 has an interesting 
 Proudly Built Elsewhere
  that are managed through Composer. 
 However, the packages managed by Composer are committed into version control and 
 Composer is (as of 8.0.x) not part of the Drupal build or installation process.
  
 it uses third-party PHP libraries. In this recipe, we will examine the Drupal Commerce 
  
 composer.json
  
  
 Ideally, future versions of Drupal, such as 8.1.x or 8.2.x, will remove the need 
  
  
 for the Composer manager and the previous recipe can use a 
 composer.
  
 json",NA
Getting ready,"Getting Started
  documentation at 
 https://getcomposer.org/ 
 doc/00-intro.md
 .",NA
How to do it…,"1. Download the latest version of Composer manager, and place it in your Drupal site's 
  
 modules folder:
  
  
 2. The Drupal 8 version will most likely remain as an Other release, as the goal is to 
  
 improve Drupal core's Composer integration and remove the need for this 
 module.
  
 3. Download the Drupal Commerce module and place it in your Drupal site's 
 modules 
  
 folder. Do not install the module.
  
 4. The Drupal Commerce module contains a 
 composer.json
  that requires three 
  
 external PHP libraries:
  
 {
  
  ""name"": ""drupal/commerce"",
  
  ""type"": ""drupal-module"",
  
  ""description"": ""Drupal Commerce is a flexible eCommerce 
 solution."",
  
  ""homepage"": ""http://drupal.org/project/commerce"",
  
  ""license"": ""GPL-2.0+"",
  
  ""require"": {
  
  
  
  ""commerceguys/intl"": ""dev-master"",
  
  
  
  ""commerceguys/pricing"": ""dev-master"",
  
  
  
  ""commerceguys/tax"": ""dev-master""
  
  },
  
  ""minimum-stability"": ""dev"" 
  
 }",NA
How it works…,"The 
 composer.json 
  
  
 composer.json 
 Composer manager module adds the discovered 
 composer.json
  
 When you run the 
 init.php
  script, it updates the root 
 composer.json 
  
 add a namespace to the module's Composer script and two custom commands: 
 drupal-
 rebuild
  and 
 drupal-update
 :
  
  ""autoload"": {
  
  ""psr-4"": {
  
  
  ""Drupal\\Core\\Composer\\"": 
 ""core/lib/Drupal/Core/ Composer"",",NA
There's more…,"Soon Drupal core will support Composer in custom and contributed modules. We will 
 cover how to simplify the previous  recipe using a 
 composer.json
  
 Updating the Stack/Cors recipe  
 The  recipe manually adds the 
 asm89/ stack-cors
  library to the root 
 composer.json
  as a dependency. A problem with this 
  
 require Composer manager.
  
 This can be mitigated by adding a 
 composer.json 
  
 contains the following code:
  
 {
  
  
  ""name"": ""drupal/asm_stack-
 cors"",",NA
See also,"Refer to the Composer documentation for 
 replace
  at 
  
 https://getcomposer.org/doc/04-
 schema.md#replace
  
 Refer to the 
 wikimedia/composer-merge-plugin
  library at 
 https://github.com/wikimedia/composer-merge-plugin
  
 Refer to 
 wikimedia/composer-merge-plugin manage contrib 
 dependencies at 
 https://www.drupal.org/node/2609568",NA
12 ,NA,NA
Web Services,"Drupal 8 ships with the RESTful functionality, to implement web services to interact with 
 your application. This chapter shows you how to enable these features and build your own 
 API:
  
 Enabling RESTful interfaces 
  
 Using GET to retrieve data 
  
 Using POST to create data 
  
 Using PATCH to update data 
  
 Using Views to provide custom data 
 sources 
  
 Authentication",NA
Introduction,"There are several modules provided by Drupal 8 that enable the ability to turn it into a 
  
 then exposes entities and other APIs through web APIs.
  
 Hypertext Application Language format. (HAL) is an 
 Internet Draft standard convention used to hyperlink between resources in an API. HAL JSON 
 is required when working with 
 POST
  and 
 PATCH
  methods. For authentication, the HTTP Basic 
 Authentication module provides a simplistic authentication via HTTP headers.
  
 This chapter covers how to work with the RESTful Web Services module and the supporting 
 modules around developing a RESTful API powered by Drupal 8. We will cover how to use 
 the 
 GET
 , 
 POST
 , and 
 PATCH
  HTTP methods to manipulate content on the website. 
 Additionally, we 
  
 cover how to handle custom authentication for your API.",NA
Enabling RESTful interfaces,"The RESTful Web Services module provides routes that expose endpoints for your RESTful API. It 
  
 There is one caveat: RESTful Web Services does not provide a user interface and relies on 
  
 GET
 , 
 POST
 , 
 PATCH
 , and 
 DELETE
  methods for the node entity. Each method will support the 
 hal_json
  format and 
 basic_auth
  for its support authentication methods. This ends up with a highly coupled 
 relationship between the HAL and 
 HTTP Basic Authentication
  modules.
  
 In this recipe, we will install RESTful Web Services and enable the proper permissions to allow 
 the retrieval of nodes via REST to receive our formatted JSON.
  
  
 We will cover using 
 GET
 , 
 POST
 , 
 PATCH
 , and 
 DELETE
  in other recipes. 
  
  
 to enable web services.",NA
Getting ready,"always_populate_raw_post_data
  setting. If you try to enable the RESTful Web 
 Services module without changing the default setting, you will see the following 
 error message on installation:
  
 The always_populate_raw_post_data PHP setting should be set to -1 in 
 PHP version 5.6. Please check the PHP manual for information on how 
 to correct this. (Currently using always_populate_raw_post_data PHP 
 setting version Not set to -1.)
  
  
 always_populate_raw_post_data 
 to 
 -1
 .",NA
How to do it…,"1. Visit Extend from the administrative toolbar and install the Web Services modules: 
  
 Serialization, RESTful Web Services, and HAL:
  
  
 2. 
  
 its 
 config/install/rest.settings.ymlentity:node 
 endpoint, allowing it 
 to be manipulated over a RESTful interface:
  
 resources:
  
  
  entity:node:
  
  
  GET:
  
    
  
 supported_formats:
  
     
  - hal_json
  
    
  supported_auth:
  
     
  - basic_auth
  
  
  POST:
  
    
  
 supported_formats:
  
     
  - hal_json
  
    
  supported_auth:
  
     
  - basic_auth
  
  
  PATCH:
  
    
  
 supported_formats:
  
     
  - hal_json
  
    
  supported_auth:
  
     
  - basic_auth
  
  
  DELETE:
  
    
  
 supported_formats:
  
     
  - hal_json
  
    
  supported_auth:
  
     
  - basic_auth",NA
How it works…,"The 
 RESTful Web Services
  module works by implementing an event subscriber 
 service, 
 rest.resource_routes
 , that adds routes to Drupal based on implementations 
 of its 
 RestResource
  plugin. Each plugin returns the available routes based on HTTP 
 methods that are enabled for the resource.
  
 When routes are built, the 
 \Drupal\rest\Routing\ResourceRoutes
  class uses the 
  
 RestResourcerest.settings
  
 that is enabled in the 
 rest.settings.resources
  
  
 auth 
  
 the basic validation passes, the new route is added to the 
 RouteCollection
  and 
 returned.",NA
There's more…,"The RESTful Web Services module provides a robust API that has some additional items 
 to make a note of. We will explore these in the next recipe.
  
 Soft dependency on the HAL module 
 For all intents and purposes, the HAL module is not technically a dependency when you install 
 the RESTful Web Services module. The issue, however, resides in the fact that the default 
  
 hal_json
 . In the event that the HAL 
  
 There is work being done in the Drupal core issue queue to resolve the high coupling of the 
 web services modules.
  
 RestResource plugin to expose data through RESTful Web Services 
 The 
 RestResource
  plugin. This plugin is used to 
  
 Plugin/rest/resource 
 namespace and need to implement the 
 \Drupal\rest\Plugin\ResourceInterface 
 interface.
  
 Drupal 8 provides two implementations of the 
 RestResource 
  
 EntityResource
  class that is provided by the RESTful Web Services module. It implements 
 a 
 driver
  class that allows it to represent each entity type. The second is the Database 
 Logging module that provides its own RestResource plugin as well. It allows you to retrieve 
 logged messages by IDs.
  
 The 
 \Drupal\rest\Plugin\ResourceBase
  class provides an abstract base class that can 
 be extended for 
 RestResource
  plugin implementations. If the 
 child
  class provides a 
 method that matches the available 
 HTTP
  methods, it will support them. For example, if a class 
 has only a 
 get
  method, you can only interact with that endpoint through 
 HTTP GET
  requests. 
 On the other hand, you can provide a 
 trace
  method that allows an endpoint to support 
 HTTP 
 TRACE
  requests.",NA
See also ,"Refer to the Drupal.org documentation for the RESTful Web Services module at 
 https://www.drupal.org/documentation/modules/rest 
  
 Change record: Accept header based routing got replaced by a query parameter, 
 https://www.drupal.org/node/2501221 
  
 Chapter 7
 , 
 Plug and Play with Plugins 
  
 Refer to the Rate Limiter module at 
 https://www.drupal.org/project/rate_ 
 limiter 
  
 Refer to the REST UI module at 
 https://www.drupal.org/project/restui",NA
Using GET to retrieve data ,"The RESTful Web Services module's entity resource plugin implements a 
 get
  method that is 
 called when an HTTP GET request is made on an appropriate route. The entity is processed 
 and then returned in the appropriate format requested.
  
 In this recipe, we will enable the REST endpoint for taxonomy term entities through 
 GET 
 through both the JSON and HAL JSON formats. Since there is no user interface provided 
 by the Drupal core to edit the RESTful Web Services settings, we will use a command-line 
 tool to modify the values.
  
  
 Since both Drush and Console, as discussed in 
 Chapter 9
 , 
  
  
 , in the recipe 
  
 will provide commands for both.",NA
Getting ready ,"We will be modifying the 
 rest.settings
  
 your Drupal site.
  
 If you are using Mac OS X and Vim is the default editor on the command line, you may 
  
 command-line tool provides a method used to specify an editor (such as Nano).
  
 We need to have a taxonomy vocabulary created with some terms so that there is data to 
 be retrieved.",NA
How to do it…,"1. Visit Extend from the administrative toolbar and install the Web Services modules: 
  
 Serialization
 , 
 RESTful Web Services
 , and 
 HAL
 .
  
 2. Once the modules are installed, open a terminal and navigate to your Drupal 
  
 site's directory.
  
 3. Edit the 
 rest.settings 
  
  
 edit command:
  
 # For Drush 
  
 drush config-edit rest.settings
  
 # For Console 
  
 drupal config:edit rest.settings
  
 4. Once the editor is loaded, we need to add an 
 entity:taxonomy_term
  section with 
  
 resources:
  
  
  'entity:taxonomy_term':
  
  
  GET:
  
    
  support_formats:
  
     
  - json
  
     
  - hal_json
  
    
  supported_auth:
  
     
  - cookie
  
 5. The 
 entity:taxnomy_term
  points to the entity resource plugin's derivative for 
  
  
 GET
  provide the supported 
 formats, 
  
 which can be returned, and 
 supported authentications.
  
 6. Commit the changes in your editor so that they can be imported into your Drupal site.
  
 7. 
  
 We need to rebuild Drupal's routes for our endpoints to be activated, since the 
  
 # For Drush 
  
 drush cache-rebuild
  
 # For Console 
  
 drupal router:rebuild
  
 8. Console provides a way to rebuild the routing system, whereas with Drush you need 
  
 to rebuild all caches.
  
 9. Visit the Permissions form from the People page. Enable the Access GET on 
  
 Taxonomy term resource permission for anonymous and authenticated 
 users.",NA
How it works…,"The RESTful Web Services module compiles routes based on the 
 rest.settings.resources 
 values. When we implement a content entity endpoint, it 
 actually adds a variation to the canonical URL. It allows us to specify a request format on the 
 same path and have the data returned in that format.
  
 The default routes provided by the 
 \Drupal\rest\Plugin\ResourceBase
  class, the 
 base
  class for resource plugins, return \
 Drupal\rest\RequestHandler::handle
  for",NA
There's more…,"There are details that involve the way in which a request is formulated to a Drupal web service 
 resource. We will explore these now.
  
 Using _format instead of the Accept header 
 Early in the Drupal 8 life cycle, up until 8.0.0-beta12, Drupal supported the use of the 
 Accept 
 header instead of using the 
 _format
  parameter. Unfortunately, there were issues with 
 external caches since HTML and other formats are served on the same path, only having 
 different 
 Accept
  headers. The only solution to prevent cache poisoning on these external 
 caches, such as Varnish, was to ensure the implementation of the 
 Vary: Accept
  header. 
 There were, however, too many issues regarding CDNs and variance of implementation, so the 
 _format 
 parameter was introduced instead of appending extensions (
 .json
 , 
 .xml
 ) to paths.",NA
See also,"Refer to Change record: 
 Accept
  header-based routing got replaced by a query 
 parameter at 
 https://www.drupal.org/node/2501221
  
 Chapter 9
 , , in the recipe",NA
Using POST to create data,"When working with RESTful Web Services, the HTTP POST method is used to create new 
 entities. We will use the 
 Basic HTTP Authentication
  to authenticate a user and create a 
 new node.
  
 In this recipe, we will use the exposed node endpoint to create a new piece of article content 
 through the RESTful Web Services module. It is a requirement to use HAL JSON when making 
 POST
  requests, which is provided as the default format for the node endpoint.",NA
Getting ready,"We will be using the 
 Article
  content type provided by the standard installation.",NA
How to do it…,"1. Visit Extend from the administrative toolbar and install the 
 Web Services
  modules: 
  
 Serialization
 , 
 RESTful Web Services
 , and 
 HAL
  
 2. We also need to install the HTTP Basic Authentication module. This will allow us to 
  
 authenticate our requests, and it is the default method for the node endpoint.
  
 3. Enable the Access POST on Content resource permission for authenticated users.
  
 4. First, we will start constructing the pieces of our JSON payload. We need to provide a 
 _links 
  
 Hypertext Application Language
  
 {
  
  ""_links"": {
  
  ""type"": {",NA
How it works…,"When working with content entities and the 
 POST
  method, the endpoint is different to the one 
 used for 
 GET
  requests. The 
 \Drupal\rest\Plugin\rest\resource\EntityResource 
 class extends the 
 \Drupal\rest\Plugin\ResourceBase
  base class, which provides a 
 route method. If a resource plugin provides an 
 https://www.drupal.org/link-
 relations/ create
  link template, then that path will be used for the 
 POST
  path.
  
  
 The link template is hardcoded to 
 https://www.drupal.org
  and does 
  
  
 not relate to your host name. I tried to research why the creation link uses 
  
 the drupal.org domain. The information can be found at 
 https://www.
  
 drupal.org/node/2019123
  and can be resolved by navigating to 
  
 https://www.drupal.org/node/2113345
 .
  
 The 
 EntityResource/entity/{entity_type}
  as the create link template. It then 
 overrides the 
 getBaseRoute
  method to ensure that the 
 entity_type
  parameter is 
  
 The 
 EntityResource
  class will run a set of conditions for the request. First, it will 
 validate the 
 POST
  
 to be made through a 
 PATCH
  request.",NA
There's more…,"We'll explain them in the next recipe.
  
 Understanding available _links requirements  
 As stated previously, Drupal requires the use of HAL JSON for the format of requests using the 
 POST
  method. This is done to ensure that the entity is properly created with any relationships 
 it requires, such as the entity type for a content entities bundle. Another example would be to 
  
 _links
  entry for the 
 user owning the comment.
  
 The 
 rest.link_manager
  service uses the 
 rest.link_manager.type
  and 
 rest.link_ 
 manager.relation
  and is responsible for returning the URIs for types and relations. By 
 default, a bundle will have a path that resembles 
 /rest/type/{entity_type}/{bundle} 
 and relations will resemble 
 /rest/relation/{entity_type}/{bundle}/{field_name}
 .
  
 Taking a user reference as an example; we would have to populate a 
 uid
  
 {
  
  
  ""_links"": {
  
  
  ""type"": {
  
    
  ""href"": ""http://master-rpusmp4jcny2c.us.platform.sh/rest/type/ 
 node/page""
  
  
  },
  
  
  ""http://example.com/rest/relation/node/article/uid"": [
  
    
  {
  
     
  ""href"": ""http://example.com/user/1?_format=hal_json"",
  
     
  ""lang"": ""en""
  
    
  }
  
  
  ]
  
  
  } 
  
 }
  
 Unfortunately, the documentation is sparse, and the best way to learn what 
 _links
  are 
 required is to perform a GET request and study the returned 
 _links
  from the HAL 
 JSON.",NA
See also,"Refer to the Drupal core issue to support POST with 
 json
  at 
 https://www.drupal.org/node/1964034
  
  
 REST GET/POST/PATCH 
 https://www.drupal.org/node/1927648",NA
Using PATCH to update data,"When working with RESTful Web Services, the HTTP PATCH method is used to update 
 entities. We will use the 
 Basic HTTP Authentication
  to authenticate a user and update 
 a node.
  
 In this recipe, we will use the exposed node endpoint to create a new piece of article content 
 through the RESTful Web Services module. It is a requirement to use HAL JSON when making 
 PATCH requests, which is provided as the default format for the node endpoint.",NA
Getting ready,"We will be using the 
 Article
  content type provided by the standard installation.",NA
How to do it…,"1. Visit Extend from the administrative toolbar and install the 
 Web Services
  modules: 
  
 Serialization
 , 
 RESTful Web Services
 , and 
 HAL
  
 2. We need to also install the 
 HTTP Basic Authentication
  module. This will allow 
  
 us to authenticate our requests, and it is the default method for the node endpoint.
  
 3. Enable the Access PATCH on Content resource permission for authenticated users.
  
 4. Create a sample article node on your Drupal site that we will modify using the 
  
 REST endpoint:",NA
How it works…,"When working with content entities and the 
 PATCH
  method, the endpoint is the same as the 
 GET
  method path. The only validation is the matching of the content type in the headers, 
 which needs to be 
 application/hal+json
 . The current user's access is checked to see 
  
 provided in the request body.
  
  
  will be updated on the entity and then validated. If the entity is validated, 
 it will be saved. On a successful save, an empty 
 HTTP 204
  response will be returned.
  
  
 There is currently an issue in the Drupal core issue queue to support 
  
  
 JSON for 
 POST
  and 
 PATCH
  requests (
 https://www.drupal.org/
  
 node/1964034
 ).",NA
See also,"Refer to the Drupal core issue to support POST with 
 json
  at 
 https://www.drupal.org/node/1964034",NA
Using Views to provide custom data sources,"The RESTful Web Services module provides Views plugins that allow you to expose data 
 over Views for your RESTful API. This allows you to create a view that has a path and 
 outputs data 
  
 and it can be sent with appropriate headers.
  
 In this recipe, we will create a view that outputs the users of the Drupal site, providing 
 their username, e-mail, and picture if provided.",NA
How to do it…,"1. Visit Extend from the administrative toolbar and install the 
 Web Services
  modules: 
  
 Serialization
 , 
 RESTful Web Services
 , and 
 HAL
 .
  
 2. Visit Structure and then Views. Click on Add new view. Name the view 
 API Users 
  
 and have it show Users.
  
 3. Check the Provide a REST export checkbox, and use the 
 api/users
  path. This is 
  
 where requests will be made:
  
  
 4. Click on Save and edit.
  
 5. Change the format of the row plugin from 
 Entity to Fields
  instead so that 
  
 6. 
 Name
 , 
 Email
 , and 
 Picture
 .
  
 7. 
  
 Change the User: Name 
  
  
 so the response does not contain any 
 HTML.
  
 8. Save your view.",NA
How it works…,"The RESTful Web Services module provides a display, row, and format plugin that allows 
  
 what allows you to specify a path to access the RESTful endpoint, and properly 
 assigns the 
 Content-Type
  header for the requested format.
  
 The 
 Serializer
  style is provided as the only supported style plugin for the REST 
 Export display. This style plugin only supports row plugins that identify themselves 
 as data display types. It expects data from the row plugin to be raw so that it can be 
  
  
 Data entity
  or 
 Data field
  row plugins. 
 Instead of returning a 
 render
  array from their 
 render
  method, they return raw data 
 that will be 
  
 plugin, the display plugin will then return the response, converted into the proper format",NA
There's more…,"features in the next recipe.
  
 Controlling the key name in JSON output  
 The 
 Data fields
  row plugin data is returned 
  
 something like 
 field_my_field
 , which may not make sense to the consumer. By clicking on 
 Settings next to Fields you can set aliases in the modal form:
  
  
 When you provide example, 
 user_picture
  can be changed to avatar and the 
 mail
  
 key can be changed to e-mail:
  
 [{
  
  
  ""name"": ""houotrara"",
  
  
  ""mail"": 
 ""houotrara@example.com"",
  
  
  ""avatar"": "" 
  
 }]
  
 Controlling access of RESTful Views  
 When you create a RESTful endpoint with Views, you are not using the same permissions",NA
See also,"Refer to the Backports module at 
 https://www.drupal.org/project/ 
 backports",NA
Authentication,"Using the RESTful 
  
 providers for an endpoint. The Drupal core provides a 
 cookie
  provider, which authenticates 
 through a valid cookie, such as your regular login experience. Then, there is the 
 HTTP Basic 
 Authentication
  module to support HTTP authentication headers.
  
 There are alternatives that provide more robust authentication methods. With cookie-
 based authentication, you need to use CSRF tokens to prevent unrequested page loads by 
 an 
  
 each request in the request header.
  
 method that uses tokens and not passwords. In this recipe, we will implement the 
 Simple 
 OAuth
  module to provide OAuth 2.0 authentication for GET and POST requests.",NA
Getting ready,"implementation of OAuth revolves around the usage of tokens sent in HTTP headers. 
 Refer to the OAuth home page for more information at 
 http://oauth.net/
 .",NA
How to do it…,"1. Download the 
 Simple OAuth
  module and place it in your Drupal site's 
  
 modules directory.
  
 2. Visit Extend from the administrative toolbar and install the 
 Web Services
  modules: 
  
 Serialization
 , 
 RESTful Web Services
 , 
 HAL
 , and 
 Simple OAuth
 .
  
 3. Edit the 
 rest.settings 
  
  
 edit command:
  
 # For Drush 
  
 drush config-edit rest.settings
  
 # For Console 
  
 drupal config:edit rest.settings 
  
 Modify the entity:node resource and replace basic_auth for the GET 
 and POST method with token_bearer.
  
 resources:
  
  
  'entity:node':
  
  
  GET:
  
    
  
 supported_formats:
  
     
  - hal_json
  
    
  supported_auth:
  
     
  - token_bearer
  
  
  POST:
  
    
  
 supported_formats:
  
     
  - hal_json
  
    
  supported_auth:
  
     
  - token_bearer
  
 4. Commit the changes in your editor so that they can be imported into your Drupal site.
  
 5. We need to rebuild Drupal's routes for our endpoint to be activated, since the 
  
 # For Drush 
  
 drush cache-rebuild
  
 # For Console 
  
 drupal router:rebuild",NA
There's more…,"We will explore more information on working with authentication providers and the 
 RESTful Web Services module.
  
 Authentication provider services  
 When working with the RESTful Web Services module endpoints, the 
 supported_auth 
 values reference services tagged with 
 authentication_provider
 . Out of the box, Drupal 
 supports cookie authentication. The following code is provided by the 
 basic_auth
  module to 
 support the HTTP header authentication:
  
 services:
  
  
  basic_auth.authentication.basic_auth:
  
  
  class: Drupal\basic_auth\Authentication\Provider\BasicAuth
  
  
 arguments: ['@config.factory', '@user.auth', '@flood', '@entity.
  
 manager']
  
  tags:
  
  
  
  - { name: authentication_provider, provider_id: 'basic_auth', 
 priority: 100 }
  
 An authentication provider can be created by making a class in your module's 
  
 Authentication\Provider
  namespace and implementing the 
 \Drupal\Core\ 
 Authentication\AuthenticationProviderInterface
  interface. Then, register 
 the class as a service in your module's 
 services.yml
 .
  
 Page cache request policies and authenticated web service requests  
 When working with data that expects authenticated users, the authentication service 
 provider needs to also provide a page cache service handler. Services that are tagged with 
 page_ cache_request_policy
  have the ability to check whether the content is cached or 
 not.
  
 The following code is taken from the 
 basic_auth
  module:
  
  basic_auth.page_cache_request_policy.disallow_basic_auth_requests: 
 class: Drupal\basic_auth\PageCache\DisallowBasicAuthRequests 
 public: false
  
  tags:
  
  
  
  - { name: page_cache_request_policy }
  
 The 
 \Drupal\basic_auth\PageCache\DisallowBasicAuthRequests
  class implements 
 the 
 \Drupal\Core\PageCache\RequestPolicyInterface
  interface. The 
 check
  method 
 allows the page cache policy to explicitly deny or remain neutral on a page's ability to be 
 cached. The 
 basic_auth
  module checks whether the default authentication headers are 
 present. For the 
 simple_oauth
  module, it checks whether a valid token is present.",NA
See also,"Refer to the OAuth Community Site at 
 http://oauth.net/
  
 Refer to the OAuth module for OAuth 1.0 support at 
 https://www.drupal.org/ project/oauth
  
 Refer to the simple OAuth module for OAuth 2.0 support at 
 https://www.drupal. org/project/simple_oauth
  
 Refer to the IP Consumer Auth module at 
 https://www.drupal.org/project/ ip_consumer_auth",NA
13 ,NA,NA
The Drupal CLI,"There are two command-line tools for Drupal 8: Console and Drush. In this chapter, we will 
 discuss how they make working with Drupal easier by covering the following recipes:
  
 Rebuilding cache in Console or Drush 
  
 Using Drush to interact with the database 
  
 Using Drush to manage users 
  
 Scaffolding code through Console 
  
 Making a Drush command 
  
 Making a Console command",NA
Introduction,"In the previous chapters of this book, there have been recipes that provide ways of using 
 command-line tools to simplify working with Drupal. There are two contributed projects 
 that provide Drupal with a command-line interface experience.
  
 tool used for day-to-day Drupal operations. However, with Drupal 8 and its integration with 
 Symfony, there came Drupal Console. Drupal Console is a Symfony Console-based 
 application that allows it to reuse more components and integrate more easily with 
 contributed modules.
  
 Drush or Console. By the end of this chapter, you will be able to work with your Drupal 
 sites through the command line.",NA
Rebuilding cache in Console or Drush,"Drupal caching to store 
  
 In this recipe, we will walk you through using both Drush and Console to clear various cache 
  
 to rebuild everything, if possible.",NA
How to do it…,"1. Open a terminal and navigate to an installed Drupal directory.
  
 2. We use the 
 cache-rebuild
  command in Drush to rebuild all of Drupal's caches, 
 including routes: 
  
 $ drush cache-rebuild 
  
 Cache rebuild complete. 
  
 3. Drush will bootstrap Drupal to a full site and invoke a full cache clear.
  
 4. In Console, we use the 
 cache:rebuild 
  
 $ drupal cache:rebuild
  
  Select cache. [all]:
  
  > all
  
  Rebuilding cache(s), wait a moment please. 
 [OK] Done clearing cache(s). 
  
 5. If you select 
 all
 , the same operation is run in Drush. However, Console is set up to 
  
 allow distinct cache bins in future development.",NA
How it works…,"Both Drush and bootstrap the application. This allows the commands to invoke 
 functions and methods found in Drupal.
  
 Currently, Drush does not implement the dependency injection container, and still needs to 
 rely on procedural functions in Drupal. Console, however, harnesses the dependency 
 injection container, allowing it to reuse Drupal's container and services.",NA
Using Drush to interact with the database,"When working with are times when you will need to export a database and import it 
 elsewhere. Most often, you would do this with a 
  
 exported and pushed to production, as discussed in 
 Chapter 9
 , 
 Deploying in Drupal 8
 .
  
 In this recipe, we will export a database dump from a production site in order to set up the",NA
Getting ready,"Drush has the ability to use site aliases 
  
 interact with a remote Drupal site. In this recipe, we will use the following alias to interact 
 with",NA
How to do it…,"1. We will use the 
 sql-dump
  command to export
  
 $ drush @drupal.production sql-dump > ~/prod-dump.sql
  
 This will take the data from 
 sql-dump
  and save it in 
 prod-dump.sql
  in 
 your 
 home
  directory.
  
 2. Navigate to your local Drupal site's directory and copy 
 sites/default/default. 
  
 settings.php to sites/default/settings.php
 .
  
 3. Edit the new 
 settings.php
  
 // Database configuration.
  
 $databases['default']['default'] = array(
  
  
  'driver' => 'mysql',
  
  
  'host' => 'localhost',
  
  
  'username' => 'mysql',
  
  
  'password' => 'mysql',
  
  
  'database' => 'data',
  
  
  'prefix' => '', 
  
  
  'port' => 3306,
  
  
  'namespace' => 'Drupal\\Core\\Database\\Driver\\mysql', 
 );",NA
How it works…,"When working with Drush, we have the ability to use Drush aliases. A Drush alias contains a 
  
 installation of Drush.
  
  
 order to use a site alias for it.
  
  
 The 
 sql-dump
  command executes the proper dump command for the database driver, 
 which is typically MySQL and the 
 mysqldump
  command. It streams to the terminal and 
  
 the 
 create
  commands to import our database schema and data.
  
 With the 
 sql-cli
  command, we are able to execute SQL commands to the database through 
  
 sql-cli
  command and run the set of 
 SQL commands. With the data imported, the 
 sql-sanitize
  command replaces usernames 
 and passwords.
  
 Finally, the 
 sql-query
  command allows us to pass an SQL command directly to the 
 database and return its results. In our recipe, we query the 
 users_field_data
  to verify 
 that e-mails",NA
There's more…,"explore this in more detail in the following sections.
  
 Using gzip with sql-dump 
 Sometimes databases can be quite large. The 
 sql-dump
  command has a 
 gzip
  option that 
 will output the SQL dump using the 
 gzip
  command. In order to run the command, you 
 would simply do:
  
 $ drush sql-dump –-gzip dump.sql.gz
  
 -rw-r--r--   1 user  group  3058522 Jan 14 16:10 dump.sql
  
 -rw-r--r--   1 user  group   285880 Jan 14 16:10 dump.sql.gz
  
  
 If you create a 
 gzipped
  database dump, make sure 
  
  
 that you unarchive it before attempting an import with 
  
 the 
 sql-cli
  command.
  
 Using Console to interact with the database 
 At the time of writing this book, Console does not 
  
 the database. There are the 
 database:connect
  and 
 database:client
  commands, 
 which will launch a database client. This allows you to be logged into the database's 
 command-line interface:
  
 $ drupal database:client
  
 $ drupal database:connect
  
 These commands are similar to the 
 sql-cli
  and 
 sql-connect
  commands from Drush. 
 The 
 client
  command will bring you to the database's command-line tool, where 
 connect 
 shows the connection string.
  
 Console also provides the 
 database:dump
  command. Unlike Drush, this will write 
 the database dump for you in the Drupal directory:
  
 $ drupal database:dump
  
  [OK] Database exported to: /path/to/drupal/www/data.sql",NA
See also,"Chapter 9
 ,",NA
Using Drush to manage users,"When you need to add an account to Drupal, you will visit the People page and manually add 
 a new user. Drush provides the complete user management for Drupal, from creation to role 
  
 and provides them with a login without having to enter your Drupal site.
  
 In this recipe, we will create a 
 staff
  role with a 
 staffmember
  user and log in as that user 
 through Drush.",NA
How to do it…,"1. Use the 
 role-create
  command to create a new role labeled 
 staff
 :
  
 $ drush role-create staff
  
 Created ""staff""
  
 2. Use the 
 role-lists
  command to verify that the role was created in Drupal:
  
 $ drush role-list
  
  ID             Role Label 
  
  anonymous      Anonymous user 
  
  authenticated  Authenticated user 
  
  administrator  Administrator 
  
  staff          Staff
  
 3. The 
 user-create
  command will create our user:
  
 $ drush user-create staffmember
  
  User ID       :  2 
  
  User name     :  staffmember 
  
  User roles    :  authenticated 
  
  User status   :  1 
  
 4. In order to add the role, we need to use the 
 user-add-role
  command:
  
 $ drush user-add-role staff staffmember
  
 Added role staff role to staffmember
  
 5. We will now log in as the 
 staffmember
  user using the 
 user-login
  command:
  
 $ drush user-login staffmember --uri=http://example.com
  
 http://example.com/user/reset/2/1452810532/Ia1nJvbr2UQ3Pi_ 
 QnmITlVgcCWzDtnKmHxf-I2eAqPE",NA
How it works…,"When you reset a password in Drupal, a special one-time login link is generated. The login 
 link is based on a generated hash. The Drush command validates the given user, which exists 
 in the Drupal site and then passes it to the 
 user_pass_reset_url 
 function from the User 
 module.
  
 The URL is made up of the user's ID, the timestamp when the link was generated, and a hash 
 based on the user's last login time, link generation, and e-mail. When the link is loaded, 
  
 generated, the link will become invalid.
  
 When used on a machine that has a web browser installed, Drush will make an attempt to 
 launch the link in a web browser for you. The browser option allows you to specify which 
 browser should be launched. Additionally, you can use 
 no-browser
  to prevent one from 
 being launched.",NA
There's more…,"The command line offers the ability to simplify user management and user 
 administration. Next, we will explore more on this topic in detail.",NA
Scaffolding code through Console,"When Drupal Console was was its ability to scaffold code. The project has turned into 
 a much larger Drupal runner over the command-line interface, but much of its 
 resourcefulness
  is code generation.
  
 As you may have noticed in the previous chapters and recipes, there can be a few mundane 
 tasks and a bit of boilerplate code. Drupal Console enables Drupal developers to create 
 various components without having to write all of the boilerplate code.
  
 In 
 Chapter 10
 , 
 The Entity API
  we covered the 
 creation of a custom entity type
 . In this recipe, 
 we will automate most of that process using Console to generate our content entity.",NA
Getting ready,"For this recipe, you need to have Drupal Console installed. The tool will generate everything 
  
 not work (or be listed) unless they can access an installed Drupal site. This is because of the 
 way it interacts with Drupal's service container.",NA
How to do it…,"1. From the root of your Drupal site, generate a module with the 
 generate:module 
 command and follow the interactive process. Use the defaults prompted besides 
 giving it a module name: 
  
 $ drupal generate:module
  
  Welcome to the Drupal module generator 
  
 Enter the new module name: My module 
  
 Enter the module machine name [my_module]: 
  
 Enter the module Path [/modules/custom]: 
  
 Enter module description [My Awesome Module]: 
  
 Enter package name [Other]: 
  
 Enter Drupal Core version [8.x]: 
  
 Do you want to generate a .module file (yes/no) [no]: no 
  
 Define module as feature [no]? no 
  
 Do you want to add a composer.json file to your module [yes]? yes 
 Would you like to add module dependencies [no]? 
  
 Do you confirm generation [yes]? 
  
  Generated or updated files 
  
 Site path: /path/to/drupal8/www 
  
 1 - modules/custom/my_module/my_module.info.yml 
 2 – modules/custom/my_module/composer.json
  
 2. The command walks you through prompts to generate the 
 info.yml
  and will output 
  
 the path of the generated 
 info.yml
  and 
 composer.json",NA
How it works…,"One of the biggest features of Console was its ability to reduce the time spent by developers to 
  
 These Twig templates contain variables and logic that are compiled into the end result code.
  
 appropriate command, and pass them to Twig for rendering. This allows Console to easily 
 stay up to date with changes in Drupal core and still provide valuable code generation.",NA
Making a Drush command,"Drush provides an API that allows developers to write their own commands. These commands 
 can be part of a module and loaded through a Drupal installation, or they can be placed in the 
 local user's Drush folder for general purposes.",NA
Getting ready,"For this recipe, you need to have Drush installed. We will be creating a command in a 
 local user directory.",NA
How to do it…,"1. 
 disable_users.drush.inc
  in the 
 ~/.drush
  folder for 
  
 your user:
  
 <?php
  
 /**
  
  * @file
  
  * Loads all users who have not logged in within 10 days and 
 disables them.
  
  */
  
 2. Add the Drush command hook that will allow Drush to discover our commands 
  
 /**
  
  * Implements hook_drush_command().
  
  **/ 
  
 function disable_users_drush_command() {
  
  
  $items = [];
  
  
  $items['disable-users'] = [
  
  
  'description' => 'Disables users after 10 days of inactivity',
  
  
 ];
  
  
  return $items; 
  
 }
  
 3. 
  
 .drush.inc
 .
  
 4. Next, we will create the command callback function, which will end up holding all of 
  
 our logic:
  
 /**
  
  * Implements drush_hook_COMMAND().
  
  */",NA
How it works…,"Drush works by
 COMMANDFILE.drush. incCOMMANDFILE
  for Drush as a representation of 
 a module name in Drupal's hook system. When implementing a Drush hook, in the 
 HOOK_drush
  format, you need to replace HOOK with your 
 COMMANDFILE
  name, just as you 
 would do in Drupal with a module name.
  
 In this recipe, we created a 
 disable_users.drush.inc 
  
  
 disable_users
  for hook invocations. Drush uses this to 
 load the 
 hook_drush_command
  hook that returns our command information.
  
 We then provide the functionality of our logic in the 
 drush_hook_command
  hook. For 
 this hook, we replace hook with our 
 commandfile
  name. This was 
 disable_users
 , 
 giving us 
 drush_disable_users_command
 . We replace command with the command 
 that 
  
  
 hook_drush_command 
  
 drush_disable_users_disable_users
  hook.",NA
There's more…,"their abilities to control the required level of Drupal integration for a command.
  
 Specifying the level of Drupal's bootstrap 
 Drush commands have the ability to specify the level of Drupal's bootstrap before being 
  
 loaded. By default, a command's bootstrap is at 
 DRUSH_BOOTSTRAP_DRUPAL_LOGIN
 , which 
 is at the same level as accessing Drupal over the web.
  
 Commands, depending on their purpose, can choose to avoid bootstrapping Drupal at all or 
 only until the database system is loaded. Drush commands that are utilities, such as the 
 Git 
 Release Notes
  module, provide a Drush command that does not interact with Drupal. 
  
  
 DRUSH_BOOTSTRAP_DRUSH
 , as it only interacts with repositories 
 to generate change logs based on 
 git
  tags and commits.",NA
See also,"Refer to how to creating custom Drush commands at 
 http://docs.drush.org/ 
 en/master/commands/
  
 Refer to how to installing Drush at 
 http://docs.drush.org/en/master/
  
 install/
  
 Refer to the Drush Bootstrap process at 
 http://docs.drush.org/en/master/
  
 bootstrap/",NA
Making a Console command ,"Drupal Console makes use of the Symfony Console project and other third-party libraries This 
 allows Console to use namespaces for the command detection and interaction with Drupal by 
 reading its class loader.
  
 This allows developers to easily create a Console command by implementing a custom class 
 in a module.
  
 In this recipe, we will create a command that loads all the users who have not logged in in 
 the last 10 days and resets their password. We will generate the base of our command using 
 the scaffolding commands.",NA
Getting ready ,"For this recipe, you need to have Drupal Console installed. The tool will generate 
 everything",NA
How to do it…,"1. Create a new module that will hold your Console command, such as 
  
  
 console_commands
 : 
  
  
  
 $ drupal generate:module
  
  
  
  // Welcome to the Drupal module generator
  
  
  
  Enter the new module name:
  
  
  
  > Console commands
  
  
  
  Enter the module machine name [console_commands]:
  
  
  > 
  
  
  
  Enter the module Path [/modules/custom]:
  
  
  
  > 
  
  
  
  Enter module description [My Awesome Module]:
  
  
  
  > 
  
  
  
  Enter package name [Other]:
  
  
  
  >",NA
How it works…,"Console provides integration with modules using namespace discovery methods. When Console 
  
 in the 
 \Drupal\{ a module }\Command
  namespace that implement 
 \Drupal\Console\ Command\Command
 .
  
 Console will rescan the Drupal directory for available commands every time it is invoked, as 
 it does not keep a cache of available commands.",NA
There's more…,"Drupal Console provides a much more intuitive developer experience, as it follows 
 Drupal core's coding formats. We will touch on how Console can be used to create 
 entities.
  
 Using a Console command to create entities 
 commerce:create:store
  command to generate stores. The purpose of the 
  
 The 
 \Drupal\commerce_store\Command\CreateStoreCommand
  class overrides the 
 default 
 interact
  method that is executed to prompt data from the user. It will prompt 
 users to enter the store's name, e-mail, country, and currency.
  
 Developers can implement similar commands to give advanced users a simpler way to work",NA
See also ,"Refer to how to create custom commands at 
 https://hechoendrupal.
  
 gitbooks.io/drupal-console/content/en/extending/creating-
 custom-commands.html 
  
 Refer to how to installing Drupal Console at 
 https://hechoendrupal. 
 gitbooks.io/drupal-console/content/en/getting/installer.html",NA
Index,NA,NA
Symbols,"@drupalsecurity, Twitter 
  
  
 URL  7 
  
 _format 
  
  
 using, instead of Accept header  301, 302
  
 asset management system 
  
  
 using  102-104 
  
 authenticated web service requests  316, 317 
 authentication  313-315 
  
 authentication provider services  316
  
 _links requirements  305",NA
A,"About text formats link  28 
  
 access 
  
  
 controlling, of RESTful Views  
 312
  
  
 reference link  74",NA
B ,"Backports module 
  
  
 reference link  313
  
  
  
  
 263 
  
 152 
  
 Access-Control-Allow-Origin header  284
  
  
 restricting, for permissions  85 
  
 Acquia Dev Desktop 
  
  
 about  18 
  
  
 URL  18 
  
 action links 
  
  
 about  256 
  
  
 providing, for adding new bundle  256 
 AdminHtmlRouteProvider provider 
  
  
 using  245 
  
 administrative interfaces 
  
  
 translating  182, 183 
  
 Aggregation 
  
  
 using  65 
  
 alter hook 
  
  
 specifying  178 
  
 AngularJS 
  
  
 reference link  275 
  
 API 
  
  
 rate limiting  298 
  
 Article content type  48
  
  
 simplifying, Entity module used  245, 246 
 base themes  101 
  
 Bitnami  18 
  
 block 
  
   
 152 
  
  
 altering  150, 151 
  
  
 creating, from View  55-57 
  
  
 creating, plugins used  146-150 
  
  
 exposed forms, enabling as  58 
  
  
 setting form  151, 152 
  
 block.api.php 
  
  
 reference link  153 
  
 Bootstrap 
  
  
 download link  11 
  
 Bower.io 
  
  
 reference link  274 
  
 Breakpoint module 
  
  
 about  113 
  
  
 using  113, 114 
  
 breakpoints 
  
  
 accessing, programmatically  114 
  
 breakpoints, Drupal 8 
  
  
 reference link  115
  
  
  
 341",NA
C,"cache
  
 219-222
  
 rebuilding, in Console  320, 321
  
 89
  
 rebuilding, in Drush  320, 321
  
  
 cache backend 
  
  
 using  179 
  
 CDN 
  
  
 using, as library  107, 108 
  
 CKEditor 
  
  
 URL, for blog post  26 
  
 CKEditor module  24 
  
 CKEditor plugins  26 
  
 CKEditor stylesheets  102 
  
 Classy 
  
  
 about  98 
  
  
 reference link  102 
  
 code 
  
  
 scaffolding, through Console  327-330 
 collection route 
  
  
 local task tab, making  247 
  
  
 providing  272 
  
 command line 
  
   
 216
  
  
 altering  191 
  
   
 188 
 Console 
  
  
 about  319 
  
  
 cache, rebuilding in  320, 321 
  
  
 code, scaffolding through  327-330 
  
  
 references  340 
  
  
 URL, for installation guides  320 
  
  
 used, for interacting with database  324 
  
 using  327 
  
 Console command 
  
  
 making  335-339 
  
  
 used, for creating entities  339 
  
 content 
  
  
 adding  27, 28 
  
  
 editing  27, 28 
  
  
 linking  30, 31 
  
  
 listing  48-50 
  
  
 translating  191-194
  
 using  218
  
 content entities  225 
  
 content entity type
  
  
  
 using  213-215 
  
 Composer 
  
  
 reference link  284 
  
 Composer manager 
  
  
 using  287-290
  
 editing, from command line  216 
  
 exporting  202-207 
  
 importing  202-207 
  
 new site, installing from  212 
  
 providing, on installation or update  86-89
  
  
 bundle, creating for  247-255 
  
  
 creating  237-245 
  
 content links 
  
  
 translating  195 
  
 content management system, Drupal 
  
 bulk moderation  29 
  
  
 Pathauto project  29 
  
  
 Save as draft feature  29 
  
 content's menu link 
  
  
 managing, from form  32 
  
 content translation module  191
  
 translating  188-190
  
 225
  
 207
  
 about  58
  
 displaying as tab, on user page  60
  
 exclusion option  61
  
  
  
   
 342",NA
D,"data 
  
 creating, POST used  302-305 
 retrieving, GET used  299-301 
 updating, PATCH used  307-309
  
 Drupal 
  
 installing, with Drush  7-9 
  
 security updates  7 
  
 URL, for default installation of PHP  
 2 URL, for downloading  2 
  
 URL, for recommended release  2
  
  
  
 343",NA
E ,"element properties, form
  
 deprecated  222, 223
  
 default_value  127
  
 267
  
 placeholder  127
  
 DrupalCI
  
 weight  127
  
 about  21
  
 Embed display
  
 URL  21
  
 using  52
  
 Drupal Console
  
 entities
  
 reference link  216
  
 about  225
  
 using  216
  
 creating, Console command used  339
  
 Drupal Core Initiative
  
 custom access control, implementing 
  
 Views  51
  
 for  257-263
  
 Drupal distributions
  
 reference link  8
  
 195
  
 Drupal.org documentation, for RESTful 
  
  
   
 Web Services 
  
  
 reference link  299 
  
 Drupal's bootstrap 
  
  
 level, specifying of  334 
  
 DrupalVM 
  
  
 about  16 
  
  
 URL  18 
  
 DrupalVM archive 
  
  
 URL, for downloading  16 
  
 Drush 
  
  
 about  7, 319 
  
  
 cache, rebuilding in  320, 321 
   
  
 215, 216 
  
 Drupal, installing with  7-9
  
  
 access, controlling to  263 
  
 Entity module 
  
  
 about  225, 271
  
   
 245, 246 
  
 Entity Reference result View 
  
  
 providing  66-68 
  
 entity type 
  
  
 admin permission  246 
  
 environment setup 
  
  
 tools  16, 17
  
 modifying, on installation  90
  
  
  
   
 344",NA
G,"using, as library  107, 108",NA
F,"GET
  
 used, for retrieving data  299-
 301
  
 favicon  101
  
 gzip
  
 Features 2.x
  
 using  90-93
  
 using, with sql-dump  324
  
 Features module",NA
H,"about  90-93
  
 bundles  94
  
 header
  
 94
  
 JavaScript, placing in  108
  
 reference link  91, 95
  
 Honeypot
  
 altering  158
  
 download link  10
  
 hook_library_info_alter() hook
  
 settings  164
  
 reference link  108
  
 hooks
  
  
   
  
 219-222 
  
 55 
  
 Filter module  26 
  
 form 
  
  
 additional submit handlers, adding  144 
  
 additional validate handlers, adding  143 
  
 altering  140-143
  
  
 libraries, manipulating from  108 
 hook suggestions 
  
  
 debugging  112 
  
 hook_theme_suggestions 
  
  
 reference link  112 
  
 Hypertext Application Language 
   
 (HAL)  293, 302
  
 content's menu link, managing from  32 
 creating  122-126",NA
I,"element properties  127
  
 element validation methods  135
  
 URL formatter, adding for  313
  
 90
  
 multidimensional array values, accessing  135
  
 images
  
 multiple submit handlers  139
  
 working with  306
  
 multiple validation handlers  135
  
 inline editing
  
 Form API
  
 providing  32, 33
  
 new elements, creating  132
  
 installation
  
 131
  
 Form API, in Drupal 8
  
 installing
  
 reference link  127, 132
  
 Drupal 8  2-5
  
  
  
 345",NA
M,"9 
  
 manager 
  
  
 plugins, accessing through  179 
 menu 
  
  
 creating  30, 31 
  
 Menu UI module  31 
  
 Message entity  257",NA
J,"JavaScript 
  
  
 placing, in header  108 
  
 JSON output 
  
  
 key name, controlling in  312",NA
K,"Kalabox 
  
  
 about  18 
  
  
 URL  18 
  
 key name 
  
  
 controlling, in JSON output  312",NA
L,"module 
  
  
 creating  70, 71 
  
  
 discovering  13 
  
  
 installing  10-13 
  
  
 installing, with Drush  13 
  
   
 72 
  
 uninstalling  14 
  
  
 version, specifying  74 
  
 module dependencies  73 
  
 module discovery locations  72 
 module namespaces  71, 72
  
   
  
 208 
   
 20 
  
 multilingual view 
  
  
 creating  195-198
  
 multipliers  115
  
  
 installing, manually  184, 185 
 Language module  187 
  
 libraries 
  
  
 extending  106, 107 
  
  
 manipulating, from hooks  
 108 
  
 overriding  106, 107 
  
 libraries-override key  107
  
 multi-site documentation, on Drupal.org 
  
 reference link  16 
  
 multisites 
  
  
 security concerns  16 
  
  
 using, in Drupal 8  14, 15 
  
 mysqldump 
  
  
 reference link  325
  
 example  106",NA
N,"212
  
 library
  
 new HTML5 elements
  
 CDN, using as  107, 108
  
 using  128-131
  
 external resource, using as  107, 108
  
 new site
  
 library asset options  105
  
  
  
   
 346",NA
O,"40-42
  
 used, for creating blocks  146-150
  
 reference link  188
  
 POST
  
 used, for creating data  302-305
  
 OAuth
  
 reference link  188
  
 URL  314
  
 OAuth Community Site",NA
Q,reference link  317,NA
P ,"page cache request policies  316, 317
  
 query parameter-based content negotiation 
  
 reference link  302 
  
 Quick Edit module  33, 106
  
 page display menu items 
  
  
 translating  200 
  
 page title 
  
  
 altering  60 
  
 parameters 
  
  
 validating, in routes  79 
  
 parameters, in routes  78, 79 
  
 PATCH 
  
  
 used, for updating data  307-309 
  
 Pathauto 
  
  
 about  29 
  
  
 URL  29 
  
 permissions 
  
   
  
  
 85 
  
   
  
 82-84 
  
   
  
  
  
 85 
  
 PHP Framework Interoperability Group 
   
 (PHP-FIG)  273 
  
 phpMyAdmin  6 
  
 PHP Standards Recommendations 
  
   
 (PSRs)  273 
  
 PHPUnit 
  
  
 running  18, 19 
  
 PHPUnit manual 
  
  
 URL  21 
  
 picture element, on Mozilla Developer 
  
  
 Network 
  
  
 reference link  119",NA
R,"Rate Limiter module 
  
  
 about  298 
  
  
 download link  298, 299 
  
 relationship 
  
  
 adding, in View  61-64 
  
   
  
  
 64 
  
 provided, through custom code  64, 65 
 Responsive Image module 
  
  
 about  115 
  
  
 performance  118 
  
   
  
 118 
  
  
 using  115-118 
  
 RESTful interfaces 
  
  
 enabling  294-297 
  
 RESTful Views 
  
  
 access, controlling of  312 
  
 RestResource plugin 
  
  
 used, for exposing data through RESTful 
   
 Web Services  297 
  
 REST UI module 
  
  
 about  298 
  
  
 download link  298 
  
  
 reference link  299 
  
 route provider 
  
  
 creating  267-270 
  
 routes
  
 access requirements  79
  
 reference link  119
  
 dynamic routes, providing  80, 
 81 
  
 existing routes, altering  81, 82
  
  
  
 347",NA
S T,"security concerns, of multisites  16 
  
 security updates, Drupal  7 
  
 debugging  112 
  
 Semantic UI 
  
 testbot project page 
  
  
 reference link  283 
  
  
 URL  21 
  
 services 
  
  
 text format 
  
 reference link  180 
  
   
  
   
 24-26 
  
 defaultSettings  168 
  
  
 settingsForm  168 
  
  
 reference link  102 
  
  
 settingsSummary  168 
  
 theme hook 
  
   
  
 suggestions  111 
  
  
 defaultSettings  164 
  
 themes 
  
  
 settingsForm  164 
  
  
 about  100 
  
  
 settingsSummary  164 
  
  
 discovering  13 
  
 shared resources  101 
  
   
 installing  10-13 Simpletest 
  
 theme 
 screenshots  100 
  
 running  18, 19 
  
 third-party CSS library 
  
 running, without Drupal installed  20 
  
 implementing  279-283 
  
  
 20 
  
  
 using  279-283 
  
 URL  21 
  
 third-party JavaScript library 
  
   
 implementing  274-278 
  
 exporting  217 
  
 third-
 party PHP library site aliases, Drush 
  
  
 implementing  284-287 
  
 URL, for documentation  322 
  
 using  284-287 
  
   
 Translate interface text  186
  
 SMACSS
  
 209-211
  
 translation handlers
  
 195
  
 reference link  109
  
  
   
 348",NA
W ,"wikimedia/composer-merge-plugin library 
  
 reference link  291",NA
U,"207, 212
  
 wikimedia/composer-merge-plugin manage 
  
 contrib dependencies
  
 reference link  291
  
 URL formatter
  
   
 313 
  
 user-login command 
  
  
 use cases  327 
  
 users 
  
  
 managing, Drush used  325, 326",NA
V,24-26,NA
X,"XAMPP 
  
  
 about  18 
  
  
 URL  18 
  
 X-CSRF-Token header  306
  
 Vagrant 
  
  
 about  16 
  
  
 URL  16 
  
 VDC Initiative 
  
  
 reference link  52 
  
 version control 
  
  
 using  218 
  
 View 
  
  
 about  28, 51 
  
  
 block, creating from  55-57 
  
  
 relationship, adding in  61-64 
  
  
 routes, overriding with  55 
  
  
 translating  191 
  
  
 used, for providing custom 
  
   
 data sources  310, 311 
  
  
 using  65
  
  
 349",NA
Thank you for buying ,NA,NA
Drupal 8 Development Cookbook,NA,NA
About Packt Publishing ,"Mastering phpMyAdmin for Effective MySQL 
 Management
  
 Our books and publications share the experiences of your fellow IT professionals in adapting and 
  
 unique business model allows us to bring you more focused information, giving you more of 
 what you need to know, and less of what you don't.
  
 Packt is a modern yet unique publishing company that focuses on producing quality, cutting-edge 
 books for communities of developers, administrators, and newbies alike. For more information, 
 please visit our website at 
 www.packtpub.com
 .",NA
About Packt Open Source ,"In 2010, Packt launched two new brands, Packt Open Source and Packt Enterprise, in order to 
  
 to books published on software built around open source licenses, and offering information to 
 anybody from advanced developers to budding web designers. The Open Source brand also 
 runs Packt's open source Royalty Scheme, by which Packt gives a royalty to each open source 
 project about whose software a book is sold.",NA
Writing for Packt ,"We welcome all inquiries from people who are interested in authoring. Book proposals should 
 be sent to 
 author@packtpub.com
 . If your book idea is still at an early stage and you would 
  
 commissioning editors will get in touch with you.
  
 We're not just looking for published authors; if you have strong technical skills but no writing 
 experience, our experienced editors can help you develop a writing career, or simply get some 
 additional reward for your expertise.",NA
Management ,"ISBN: 978-1-78398-520-3             Paperback: 148 pages
  
 Make the most of Drupal 8's coolest new feature—the 
  
 from a non-developer perspective.
  
 between environments.
  
 own modules.",NA
Learning Drupal 8 ,"ISBN: 978-1-78216-875-1            Paperback: 328 pages
  
 Create complex websites quickly and easily using the 
 building blocks of Drupal 8, the most powerful 
 version of Drupal yet
  
 1. 
  
 Build complete, complex websites with no 
 prior 
  
 knowledge of web development entirely 
 using 
  
 the intuitive Drupal user interface.
  
 2. 
  
 Follow a practical case study chapter-by-chapter 
  
 to construct a complete website as you progress.
  
 3. 
  
 Ensure your sites are modern, responsive and 
  
 available in Drupal 8.
  
 Please check 
 www.PacktPub.com
  for information on our titles",NA
Learning Phalcon PHP ,"ISBN:  978-1-78355-509-3          Paperback: 328 pages 
 Learn Phalcon interactively and build high-
 performance web applications
  
 PHP on your server.
  
 2. 
  
 Develop a fully functional multi-module 
  
 application with Phalcon PHP.
  
 3. 
  
 A step-by-step guide with in-depth 
 coverage 
  
 of Phalcon and best practices.",NA
Learning PHP 7 High ,NA,NA
Performance ,"Second Edition
  
 ISBN: 978-1-78355-419-5            Paperback: 260 pages
  
 powerful e-commerce solution, Magento
  
 2. 
  
 Extend the core Magento functionality, such as 
  
 the API.
  
 3. 
  
 A practical and succinct guide to test your 
  
 Magento code.
  
 Please check 
 www.PacktPub.com
  for information on our titles",NA
